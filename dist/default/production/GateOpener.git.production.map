Microchip MPLAB XC8 Compiler V1.33 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.33\dat\en_msgs.txt -cs \
  -h+dist/default/production\GateOpener.git.production.sym \
  --cmf=dist/default/production\GateOpener.git.production.cmf -z -Q16F1828 \
  -oC:\Users\e882742\AppData\Local\Temp\s7is.6 \
  -Mdist/default/production/GateOpener.git.production.map -E1 -ver=XC8 \
  -ASTACK=02041h-02077h -pstack=STACK -ACONST=00h-0FFhx16 \
  -ACODE=00h-07FFhx2 -ASTRCODE=00h-0FFFh -AENTRY=00h-0FFhx16 \
  -ASTRING=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABIGRAM=02000h-020EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/0F000h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\e882742\AppData\Local\Temp\s7is.obj \
  dist/default/production\GateOpener.git.production.obj 

Object code version is 3.11

Machine type is 16F1828



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\e882742\AppData\Local\Temp\s7is.obj
                end_init                             16       16        2        8       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\GateOpener.git.production.obj
                cinit                                18       18       19        8       0
                intentry                              4        4       12        8       0
                text32                               31       31      297        8       0
                text30                              C0A      C0A       2E     1814       0
                text29                              B27      B27       11     164E       0
                text28                              C38      C38       2E     1870       0
                text27                              B12      B12        9     1624       0
                text26                              EC2      EC2       66     1D84       0
                text25                              C66      C66       2E     18CC       0
                text24                              B38      B38       13     1670       0
                text23                              BB9      BB9       25     1772       0
                text22                              B9B      B9B       1E     1736       0
                text21                              471      471       7D        8       0
                text20                              BDE      BDE       2C     17BC       0
                text19                              B63      B63       1C     16C6       0
                text18                              E1F      E1F       4F     1C3E       0
                text17                              E6E      E6E       54     1CDC       0
                text16                              CCB      CCB       3B     1996       0
                text15                              D06      D06       3D     1A0C       0
                text14                              C94      C94       37     1928       0
                text13                              693      693       88      BA0       0
                text12                              71B      71B       7E      BA0       0
                text11                              B0A      B0A        8     1614       0
                text10                              B4B      B4B       18     1696       0
                text9                               4EE      4EE       12        8       0
                text8                               F28      F28       69     1E50       0
                text7                               2C8      2C8      1A9        8       0
                text6                               D43      D43       45     1A86       0
                text5                               799      799       67      BA0       0
                text4                               DD2      DD2       4D     1BA4       0
                text3                               F91      F91       6F     1F22       0
                text2                               B7F      B7F       1C     16FE       0
                text1                               D88      D88       4A     1B10       0
                maintext                            5D0      5D0       C3      BA0       0
                cstackBANK0                          20       20       35       20       1
                cstackCOMMON                         70       70        C       70       1
                clrtext                             B1B      B1B        C     1636       0
                bssBANK0                             55       55        C       20       1
                stringtext                          500      500       D0        A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                             16       16        2         0
                cinit                                18       18       19         0
                intentry                              4        4       12         0
                reset_vec                             0        0        2         0
                text32                               31       31      297         0
                text30                              C0A      C0A       2E         0
                text29                              B27      B27       11         0
                text28                              C38      C38       2E         0
                text27                              B12      B12        9         0
                text26                              EC2      EC2       66         0
                text25                              C66      C66       2E         0
                text24                              B38      B38       13         0
                text23                              BB9      BB9       25         0
                text22                              B9B      B9B       1E         0
                text21                              471      471       7D         0
                text20                              BDE      BDE       2C         0
                text19                              B63      B63       1C         0
                text18                              E1F      E1F       4F         0
                text17                              E6E      E6E       54         0
                text16                              CCB      CCB       3B         0
                text15                              D06      D06       3D         0
                text14                              C94      C94       37         0
                text13                              693      693       88         0
                text12                              71B      71B       7E         0
                text11                              B0A      B0A        8         0
                text10                              B4B      B4B       18         0
                text9                               4EE      4EE       12         0
                text8                               F28      F28       69         0
                text7                               2C8      2C8      1A9         0
                text6                               D43      D43       45         0
                text5                               799      799       67         0
                text4                               DD2      DD2       4D         0
                text3                               F91      F91       6F         0
                text2                               B7F      B7F       1C         0
                text1                               D88      D88       4A         0
                maintext                            5D0      5D0       C3         0
                clrtext                             B1B      B1B        C         0

        CLASS   STRCODE        
                stringtext                          500      500       D0         0

        CLASS   ENTRY          

        CLASS   STRING         

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1

        CLASS   BANK0          
                cstackBANK0                          20       20       35         1
                bssBANK0                             55       55        C         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1
                abs_s1                               C8       C8       28         1
                abs_s1                              120      120       50         1
                abs_s1                             2078     2078        0         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0004FC  000500         8       0  CODE        2
                cstackBANK0                    000020  000041  000061        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                stringtext                     000500  0000D0  0005D0         A       0  STRCODE     2
                maintext                       0005D0  000230  000800       BA0       0  CODE        2
                text11                         000B0A  000008  000B12      1614       0  CODE        2
                text27                         000B12  000009  000B1B      1624       0  CODE        2
                clrtext                        000B1B  00000C  000B27      1636       0  CODE        2
                text29                         000B27  000011  000B38      164E       0  CODE        2
                text24                         000B38  000013  000B4B      1670       0  CODE        2
                text10                         000B4B  000018  000B63      1696       0  CODE        2
                text19                         000B63  00001C  000B7F      16C6       0  CODE        2
                text2                          000B7F  00001C  000B9B      16FE       0  CODE        2
                text22                         000B9B  00001E  000BB9      1736       0  CODE        2
                text23                         000BB9  000025  000BDE      1772       0  CODE        2
                text20                         000BDE  00002C  000C0A      17BC       0  CODE        2
                text30                         000C0A  00002E  000C38      1814       0  CODE        2
                text28                         000C38  00002E  000C66      1870       0  CODE        2
                text25                         000C66  00002E  000C94      18CC       0  CODE        2
                text14                         000C94  000037  000CCB      1928       0  CODE        2
                text16                         000CCB  00003B  000D06      1996       0  CODE        2
                text15                         000D06  00003D  000D43      1A0C       0  CODE        2
                text6                          000D43  000045  000D88      1A86       0  CODE        2
                text1                          000D88  00004A  000DD2      1B10       0  CODE        2
                text4                          000DD2  00004D  000E1F      1BA4       0  CODE        2
                text18                         000E1F  00004F  000E6E      1C3E       0  CODE        2
                text17                         000E6E  000054  000EC2      1CDC       0  CODE        2
                text26                         000EC2  000066  000F28      1D84       0  CODE        2
                text8                          000F28  000069  000F91      1E50       0  CODE        2
                text3                          000F91  00006F  001000      1F22       0  CODE        2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00061-0006F               F           1
        BANK1            000A0-000C7              28           1
        BIGRAM           02000-020EF              F0           1
        CODE             00002-00003               2           2
                         00800-00B09             30A
        COMMON           0007C-0007D               2           1
        CONST            00002-00003               2           2
                         00800-00B09             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00002-00003               2           2
                         00800-00B09             100
        IDLOC            08000-08003               4           2
        RAM              00061-0006F               F           1
                         000A0-000C7              28
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            02041-02077              37           1
        STRCODE          00002-00003               2           2
                         00800-00B09             30A
        STRING           00002-00003               2           2
                         00800-00B09             100

                                  Symbol Table

?_EEPROMSearchNumber           cstackBANK0  00030
?___lwdiv                      cstackBANK0  00025
?___wmul                       cstackBANK0  00025
EEPROMAdd@aux                  cstackBANK0  00043
EEPROMAdd@empty                cstackBANK0  00044
EEPROMAdd@found                cstackBANK0  00041
EEPROMAdd@nmbr                 cstackBANK0  0003D
EEPROMAdd@nmbrLenght           cstackBANK0  0003F
EEPROMCheckPassword@pass       cstackBANK0  00030
EEPROMDeleteNumber@address     cstackBANK0  00033
EEPROMDeleteNumber@count       cstackBANK0  00035
EEPROMDeleteNumber@position    cstackBANK0  0002F
EEPROMSaveNumber@address       cstackBANK0  0003B
EEPROMSaveNumber@count         cstackBANK0  00039
EEPROMSaveNumber@nmbr          cstackBANK0  0002F
EEPROMSaveNumber@nmbrLenght    cstackBANK0  00031
EEPROMSaveNumber@position      cstackBANK0  00032
EEPROMSaveNumber@result        cstackBANK0  00037
EEPROMSearchNumber@aux         cstackBANK0  0003D
EEPROMSearchNumber@count       cstackBANK0  00039
EEPROMSearchNumber@nmbr        cstackBANK0  00030
EEPROMSearchNumber@nmbrLenght  cstackBANK0  00032
EEPROMSearchNumber@result      cstackBANK0  0003B
EEPROMUpdatePassword@pass      cstackBANK0  0002F
EepromOpCode@address           cstackBANK0  00025
EepromOpCode@i                 cstackBANK0  0002B
EepromOpCode@opcode            cstackBANK0  0002A
EepromRead@address             cstackBANK0  0002C
EepromRead@data                cstackBANK0  0002F
EepromReceive@b                cstackBANK0  00027
EepromReceive@i                cstackBANK0  00028
EepromSend@b                   cstackBANK0  00027
EepromSend@i                   cstackBANK0  00028
EepromWrite@address            cstackBANK0  0002C
EepromWrite@data               cstackBANK0  0002E
GPIOBlueLedBlink@i             cstackBANK0  00029
GPIOBlueLedBlink@times         cstackBANK0  00028
GPIORedLedBlink@i              cstackBANK0  00029
GPIORedLedBlink@times          cstackBANK0  00028
SIM800Command@add              cstackBANK0  00051
SIM800DeleteSms@flag           cstackBANK0  0002C
SIM800DeleteSms@index          cstackBANK0  0002A
SIM800LClear@i                 cstackBANK0  00029
SIM800ReadSms@mem              cstackBANK0  0002A
SIM800SendSms@msg              cstackBANK0  0002C
SIM800SendSms@nmbr             cstackBANK0  0002A
SYSTEMInit@freq                cstackBANK0  00025
USARTHandleRxInt@ci            cstackBANK0  00022
USARTHandleRxInt@ci_499        cstackBANK0  00023
USARTHandleRxInt@ci_500        cstackBANK0  00024
USARTHandleRxInt@ci_501        cstackBANK0  00021
USARTHandleRxInt@data          cstackBANK0  00020
USARTInit@baud_rate            cstackBANK0  00025
USARTWriteChar@ch              cstackBANK0  00025
USARTWriteInt@F3220            bssBANK0     00055
USARTWriteLine@str             cstackBANK0  00028
USARTWriteString@str           cstackBANK0  00026
_ANSELB                        (abs)        0018D
_APFCON0bits                   (abs)        0011D
_BAUDCONbits                   (abs)        0019F
_CREN                          (abs)        00CEC
_EEPROMAdd                     text18       00E1F
_EEPROMCheckPassword           text17       00E6E
_EEPROMDeleteNumber            text16       00CCB
_EEPROMEraseAll                text15       00D06
_EEPROMSaveNumber              text21       00471
_EEPROMSearchNumber            text13       00693
_EEPROMUpdatePassword          text12       0071B
_EepromEnd                     text27       00B12
_EepromOpCode                  text26       00EC2
_EepromRead                    text19       00B63
_EepromReceive                 text20       00BDE
_EepromSend                    text25       00C66
_EepromStart                   text24       00B38
_EepromWrite                   text23       00BB9
_GIE                           (abs)        0005F
_GPIOBlueLedBlink              text30       00C0A
_GPIOPortInit                  text29       00B27
_GPIORedLedBlink               text28       00C38
_ISR                           intentry     00004
_LATAbits                      (abs)        0010C
_LATBbits                      (abs)        0010D
_LATCbits                      (abs)        0010E
_OSCCON                        (abs)        00099
_PEIE                          (abs)        0005E
_PIR1bits                      (abs)        00011
_PORTBbits                     (abs)        0000D
_RCIE                          (abs)        0048D
_RCIF                          (abs)        0008D
_RCREG                         (abs)        00199
_RCSTAbits                     (abs)        0019D
_SIM800Command                 text7        002C8
_SIM800DeleteSms               text6        00D43
_SIM800L                       (abs)        02078
_SIM800LClear                  text5        00799
_SIM800ReadSms                 text4        00DD2
_SIM800SendSms                 text8        00F28
_SIM800init                    text3        00F91
_SPBRG                         (abs)        0019B
_SYSTEMInit                    text2        00B7F
_TRISA4                        (abs)        00464
_TRISA5                        (abs)        00465
_TRISB4                        (abs)        0046C
_TRISB6                        (abs)        0046E
_TRISB7                        (abs)        0046F
_TRISC0                        (abs)        00470
_TRISC1                        (abs)        00471
_TRISC2                        (abs)        00472
_TRISC4                        (abs)        00474
_TRISC5                        (abs)        00475
_TRISC6                        (abs)        00476
_TRISC7                        (abs)        00477
_TXREG                         (abs)        0019A
_TXSTAbits                     (abs)        0019E
_USARTHandleRxInt              text32       00031
_USARTInit                     text1        00D88
_USARTWriteChar                text11       00B0A
_USARTWriteLine                text9        004EE
_USARTWriteString              text10       00B4B
__CFG_BOREN$OFF                (abs)        00000
__CFG_BORV$LO                  (abs)        00000
__CFG_CLKOUTEN$OFF             (abs)        00000
__CFG_CP$OFF                   (abs)        00000
__CFG_CPD$OFF                  (abs)        00000
__CFG_FCMEN$ON                 (abs)        00000
__CFG_FOSC$INTOSC              (abs)        00000
__CFG_IESO$ON                  (abs)        00000
__CFG_LVP$ON                   (abs)        00000
__CFG_MCLRE$OFF                (abs)        00000
__CFG_PLLEN$OFF                (abs)        00000
__CFG_PWRTE$OFF                (abs)        00000
__CFG_STVREN$ON                (abs)        00000
__CFG_WDTE$OFF                 (abs)        00000
__CFG_WRT$OFF                  (abs)        00000
__Habs1                        abs1         00000
__Hbank0                       bank0        00000
__Hbank1                       bank1        00000
__Hbank10                      bank10       00000
__Hbank11                      bank11       00000
__Hbank12                      bank12       00000
__Hbank13                      bank13       00000
__Hbank14                      bank14       00000
__Hbank15                      bank15       00000
__Hbank16                      bank16       00000
__Hbank17                      bank17       00000
__Hbank18                      bank18       00000
__Hbank19                      bank19       00000
__Hbank2                       bank2        00000
__Hbank20                      bank20       00000
__Hbank21                      bank21       00000
__Hbank22                      bank22       00000
__Hbank23                      bank23       00000
__Hbank24                      bank24       00000
__Hbank25                      bank25       00000
__Hbank26                      bank26       00000
__Hbank27                      bank27       00000
__Hbank28                      bank28       00000
__Hbank29                      bank29       00000
__Hbank3                       bank3        00000
__Hbank30                      bank30       00000
__Hbank31                      bank31       00000
__Hbank4                       bank4        00000
__Hbank5                       bank5        00000
__Hbank6                       bank6        00000
__Hbank7                       bank7        00000
__Hbank8                       bank8        00000
__Hbank9                       bank9        00000
__Hbigram                      bigram       00000
__HbssBANK0                    bssBANK0     00000
__Hcinit                       cinit        00031
__Hclrtext                     clrtext      00000
__Hcode                        code         00000
__Hcommon                      common       00000
__Hconfig                      config       08009
__HcstackBANK0                 cstackBANK0  00000
__HcstackCOMMON                cstackCOMMON 00000
__Heeprom_data                 eeprom_data  00000
__Hend_init                    end_init     00018
__Hfunctab                     functab      00000
__Hidloc                       idloc        00000
__Hinit                        init         00016
__Hintentry                    intentry     00016
__Hmaintext                    maintext     00000
__Hpowerup                     powerup      00000
__Hram                         ram          00000
__Hreset_vec                   reset_vec    00002
__Hsfr0                        sfr0         00000
__Hsfr1                        sfr1         00000
__Hsfr10                       sfr10        00000
__Hsfr11                       sfr11        00000
__Hsfr12                       sfr12        00000
__Hsfr13                       sfr13        00000
__Hsfr14                       sfr14        00000
__Hsfr15                       sfr15        00000
__Hsfr16                       sfr16        00000
__Hsfr17                       sfr17        00000
__Hsfr18                       sfr18        00000
__Hsfr19                       sfr19        00000
__Hsfr2                        sfr2         00000
__Hsfr20                       sfr20        00000
__Hsfr21                       sfr21        00000
__Hsfr22                       sfr22        00000
__Hsfr23                       sfr23        00000
__Hsfr24                       sfr24        00000
__Hsfr25                       sfr25        00000
__Hsfr26                       sfr26        00000
__Hsfr27                       sfr27        00000
__Hsfr28                       sfr28        00000
__Hsfr29                       sfr29        00000
__Hsfr3                        sfr3         00000
__Hsfr30                       sfr30        00000
__Hsfr31                       sfr31        00000
__Hsfr4                        sfr4         00000
__Hsfr5                        sfr5         00000
__Hsfr6                        sfr6         00000
__Hsfr7                        sfr7         00000
__Hsfr8                        sfr8         00000
__Hsfr9                        sfr9         00000
__Hspace_0                     (abs)        08009
__Hspace_1                     (abs)        0007C
__Hspace_2                     (abs)        00000
__Hspace_3                     (abs)        00000
__Hstack                       stack        00000
__Hstrings                     strings      00000
__Hstringtext                  stringtext   00000
__Htext                        text         00000
__Labs1                        abs1         00000
__Lbank0                       bank0        00000
__Lbank1                       bank1        00000
__Lbank10                      bank10       00000
__Lbank11                      bank11       00000
__Lbank12                      bank12       00000
__Lbank13                      bank13       00000
__Lbank14                      bank14       00000
__Lbank15                      bank15       00000
__Lbank16                      bank16       00000
__Lbank17                      bank17       00000
__Lbank18                      bank18       00000
__Lbank19                      bank19       00000
__Lbank2                       bank2        00000
__Lbank20                      bank20       00000
__Lbank21                      bank21       00000
__Lbank22                      bank22       00000
__Lbank23                      bank23       00000
__Lbank24                      bank24       00000
__Lbank25                      bank25       00000
__Lbank26                      bank26       00000
__Lbank27                      bank27       00000
__Lbank28                      bank28       00000
__Lbank29                      bank29       00000
__Lbank3                       bank3        00000
__Lbank30                      bank30       00000
__Lbank31                      bank31       00000
__Lbank4                       bank4        00000
__Lbank5                       bank5        00000
__Lbank6                       bank6        00000
__Lbank7                       bank7        00000
__Lbank8                       bank8        00000
__Lbank9                       bank9        00000
__Lbigram                      bigram       00000
__LbssBANK0                    bssBANK0     00000
__Lcinit                       cinit        00018
__Lclrtext                     clrtext      00000
__Lcode                        code         00000
__Lcommon                      common       00000
__Lconfig                      config       08007
__LcstackBANK0                 cstackBANK0  00000
__LcstackCOMMON                cstackCOMMON 00000
__Leeprom_data                 eeprom_data  00000
__Lend_init                    end_init     00016
__Lfunctab                     functab      00000
__Lidloc                       idloc        00000
__Linit                        init         00016
__Lintentry                    intentry     00004
__Lmaintext                    maintext     00000
__Lpowerup                     powerup      00000
__Lram                         ram          00000
__Lreset_vec                   reset_vec    00000
__Lsfr0                        sfr0         00000
__Lsfr1                        sfr1         00000
__Lsfr10                       sfr10        00000
__Lsfr11                       sfr11        00000
__Lsfr12                       sfr12        00000
__Lsfr13                       sfr13        00000
__Lsfr14                       sfr14        00000
__Lsfr15                       sfr15        00000
__Lsfr16                       sfr16        00000
__Lsfr17                       sfr17        00000
__Lsfr18                       sfr18        00000
__Lsfr19                       sfr19        00000
__Lsfr2                        sfr2         00000
__Lsfr20                       sfr20        00000
__Lsfr21                       sfr21        00000
__Lsfr22                       sfr22        00000
__Lsfr23                       sfr23        00000
__Lsfr24                       sfr24        00000
__Lsfr25                       sfr25        00000
__Lsfr26                       sfr26        00000
__Lsfr27                       sfr27        00000
__Lsfr28                       sfr28        00000
__Lsfr29                       sfr29        00000
__Lsfr3                        sfr3         00000
__Lsfr30                       sfr30        00000
__Lsfr31                       sfr31        00000
__Lsfr4                        sfr4         00000
__Lsfr5                        sfr5         00000
__Lsfr6                        sfr6         00000
__Lsfr7                        sfr7         00000
__Lsfr8                        sfr8         00000
__Lsfr9                        sfr9         00000
__Lspace_0                     (abs)        00000
__Lspace_1                     (abs)        00000
__Lspace_2                     (abs)        00000
__Lspace_3                     (abs)        00000
__Lstack                       stack        00000
__Lstrings                     strings      00000
__Lstringtext                  stringtext   00000
__Ltext                        text         00000
__S0                           (abs)        08009
__S1                           (abs)        0007C
__S2                           (abs)        00000
__S3                           (abs)        00000
___int_sp                      stack        00000
___latbits                     (abs)        00001
___lwdiv                       text14       00C94
___lwdiv@counter               cstackBANK0  0002C
___lwdiv@dividend              cstackBANK0  00027
___lwdiv@divisor               cstackBANK0  00025
___lwdiv@quotient              cstackBANK0  0002A
___sp                          stack        00000
___wmul                        text22       00B9B
___wmul@multiplicand           cstackBANK0  00027
___wmul@multiplier             cstackBANK0  00025
___wmul@product                cstackBANK0  00029
__end_of_EEPROMAdd             text18       00E6E
__end_of_EEPROMCheckPassword   text17       00EC2
__end_of_EEPROMDeleteNumber    text16       00D06
__end_of_EEPROMEraseAll        text15       00D43
__end_of_EEPROMSaveNumber      text21       004EE
__end_of_EEPROMSearchNumber    text13       0071B
__end_of_EEPROMUpdatePassword  text12       00799
__end_of_EepromEnd             text27       00B1B
__end_of_EepromOpCode          text26       00F28
__end_of_EepromRead            text19       00B7F
__end_of_EepromReceive         text20       00C0A
__end_of_EepromSend            text25       00C94
__end_of_EepromStart           text24       00B4B
__end_of_EepromWrite           text23       00BDE
__end_of_GPIOBlueLedBlink      text30       00C38
__end_of_GPIOPortInit          text29       00B38
__end_of_GPIORedLedBlink       text28       00C66
__end_of_ISR                   intentry     00016
__end_of_SIM800Command         text7        00471
__end_of_SIM800DeleteSms       text6        00D88
__end_of_SIM800LClear          text5        00800
__end_of_SIM800ReadSms         text4        00E1F
__end_of_SIM800SendSms         text8        00F91
__end_of_SIM800init            text3        01000
__end_of_SYSTEMInit            text2        00B9B
__end_of_USARTHandleRxInt      text32       002C8
__end_of_USARTInit             text1        00DD2
__end_of_USARTWriteChar        text11       00B12
__end_of_USARTWriteLine        text9        00500
__end_of_USARTWriteString      text10       00B63
__end_of___lwdiv               text14       00CCB
__end_of___wmul                text22       00BB9
__end_of__initialization       cinit        0002D
__end_of__stringdata           stringtext   005D0
__end_of_main                  maintext     00693
__initialization               cinit        00018
__pbssBANK0                    bssBANK0     00055
__pbssBIGRAM                   (abs)        02078
__pcstackBANK0                 cstackBANK0  00020
__pcstackCOMMON                cstackCOMMON 00070
__pintentry                    intentry     00004
__pmaintext                    maintext     005D0
__pstringtext                  stringtext   00500
__ptext1                       text1        00D88
__ptext10                      text10       00B4B
__ptext11                      text11       00B0A
__ptext12                      text12       0071B
__ptext13                      text13       00693
__ptext14                      text14       00C94
__ptext15                      text15       00D06
__ptext16                      text16       00CCB
__ptext17                      text17       00E6E
__ptext18                      text18       00E1F
__ptext19                      text19       00B63
__ptext2                       text2        00B7F
__ptext20                      text20       00BDE
__ptext21                      text21       00471
__ptext22                      text22       00B9B
__ptext23                      text23       00BB9
__ptext24                      text24       00B38
__ptext25                      text25       00C66
__ptext26                      text26       00EC2
__ptext27                      text27       00B12
__ptext28                      text28       00C38
__ptext29                      text29       00B27
__ptext3                       text3        00F91
__ptext30                      text30       00C0A
__ptext32                      text32       00031
__ptext4                       text4        00DD2
__ptext5                       text5        00799
__ptext6                       text6        00D43
__ptext7                       text7        002C8
__ptext8                       text8        00F28
__ptext9                       text9        004EE
__size_of_EEPROMAdd            (abs)        00000
__size_of_EEPROMCheckPassword  (abs)        00000
__size_of_EEPROMDeleteNumber   (abs)        00000
__size_of_EEPROMEraseAll       (abs)        00000
__size_of_EEPROMSaveNumber     (abs)        00000
__size_of_EEPROMSearchNumber   (abs)        00000
__size_of_EEPROMUpdatePassword (abs)        00000
__size_of_EepromEnd            (abs)        00000
__size_of_EepromOpCode         (abs)        00000
__size_of_EepromRead           (abs)        00000
__size_of_EepromReceive        (abs)        00000
__size_of_EepromSend           (abs)        00000
__size_of_EepromStart          (abs)        00000
__size_of_EepromWrite          (abs)        00000
__size_of_GPIOBlueLedBlink     (abs)        00000
__size_of_GPIOPortInit         (abs)        00000
__size_of_GPIORedLedBlink      (abs)        00000
__size_of_ISR                  (abs)        00000
__size_of_SIM800Command        (abs)        00000
__size_of_SIM800DeleteSms      (abs)        00000
__size_of_SIM800LClear         (abs)        00000
__size_of_SIM800ReadSms        (abs)        00000
__size_of_SIM800SendSms        (abs)        00000
__size_of_SIM800init           (abs)        00000
__size_of_SYSTEMInit           (abs)        00000
__size_of_USARTHandleRxInt     (abs)        00000
__size_of_USARTInit            (abs)        00000
__size_of_USARTWriteChar       (abs)        00000
__size_of_USARTWriteLine       (abs)        00000
__size_of_USARTWriteString     (abs)        00000
__size_of___lwdiv              (abs)        00000
__size_of___wmul               (abs)        00000
__size_of_main                 (abs)        00000
__stringdata                   stringtext   00500
_bufque                        bssBANK0     0005E
_i                             bssBANK0     0005F
_main                          maintext     005D0
_password                      bssBANK0     0005A
_task                          bssBANK0     00060
btemp                          (abs)        0007E
clear_ram0                     clrtext      00B1B
end_of_initialization          cinit        0002D
intlevel0                      functab      00000
intlevel1                      functab      00000
intlevel2                      functab      00000
intlevel3                      functab      00000
intlevel4                      functab      00000
intlevel5                      functab      00000
ltemp                          (abs)        0007E
ltemp0                         (abs)        0007E
ltemp1                         (abs)        00082
ltemp2                         (abs)        00086
ltemp3                         (abs)        00080
pic14e$flags                   (abs)        0007E
reset_vec                      reset_vec    00000
stackhi                        (abs)        02077
stacklo                        (abs)        02041
start                          init         00016
start_initialization           cinit        00018
ttemp                          (abs)        0007E
ttemp0                         (abs)        0007E
ttemp1                         (abs)        00081
ttemp2                         (abs)        00084
ttemp3                         (abs)        00087
ttemp4                         (abs)        0007F
wtemp                          (abs)        0007E
wtemp0                         (abs)        0007E
wtemp1                         (abs)        00080
wtemp2                         (abs)        00082
wtemp3                         (abs)        00084
wtemp4                         (abs)        00086
wtemp5                         (abs)        00088
wtemp6                         (abs)        0007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 15 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_EEPROMSearchNumber
		_EEPROMUpdatePassword
		_GPIOBlueLedBlink
		_GPIOPortInit
		_GPIORedLedBlink
		_SIM800Command
		_SIM800DeleteSms
		_SIM800LClear
		_SIM800ReadSms
		_SIM800SendSms
		_SIM800init
		_SYSTEMInit
		_USARTInit
		_USARTWriteLine
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _USARTInit *****************
 Defined at:
		line 6 in file "usart.c"
 Parameters:    Size  Location     Type
  baud_rate       2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SYSTEMInit *****************
 Defined at:
		line 5 in file "system.c"
 Parameters:    Size  Location     Type
  freq            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  freq            1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SIM800init *****************
 Defined at:
		line 7 in file "sim800l.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_USARTWriteLine
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SIM800ReadSms *****************
 Defined at:
		line 52 in file "sim800l.c"
 Parameters:    Size  Location     Type
  mem             2   10[BANK0 ] PTR const unsigned char 
		 -> SIM800L.smsmem(5), SIM800L(120), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_USARTWriteLine
		_USARTWriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SIM800LClear *****************
 Defined at:
		line 167 in file "sim800l.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SIM800DeleteSms *****************
 Defined at:
		line 63 in file "sim800l.c"
 Parameters:    Size  Location     Type
  index           2   10[BANK0 ] PTR const unsigned char 
		 -> STR_23(2), 
  flag            2   12[BANK0 ] PTR const unsigned char 
		 -> STR_24(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_USARTWriteChar
		_USARTWriteLine
		_USARTWriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SIM800Command *****************
 Defined at:
		line 111 in file "sim800l.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  add             1   49[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0      11       0       0
      Totals:         0      12       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_EEPROMAdd
		_EEPROMCheckPassword
		_EEPROMDeleteNumber
		_EEPROMEraseAll
		_EEPROMSearchNumber
		_EEPROMUpdatePassword
		_SIM800SendSms
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SIM800SendSms *****************
 Defined at:
		line 36 in file "sim800l.c"
 Parameters:    Size  Location     Type
  nmbr            2   10[BANK0 ] PTR const unsigned char 
		 -> STR_19(11), SIM800L.cell(15), SIM800L(120), 
  msg             2   12[BANK0 ] PTR const unsigned char 
		 -> STR_20(15), STR_16(29), STR_15(26), STR_14(27), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_USARTWriteChar
		_USARTWriteLine
		_USARTWriteString
 This function is called by:
		_SIM800Command
		_main
 This function uses a non-reentrant model


 *************** function _USARTWriteLine *****************
 Defined at:
		line 66 in file "usart.c"
 Parameters:    Size  Location     Type
  str             2    8[BANK0 ] PTR const unsigned char 
		 -> STR_22(6), STR_21(9), STR_12(9), STR_10(9), 
		 -> STR_9(14), STR_7(10), STR_6(14), STR_5(5), 
		 -> STR_4(12), STR_3(7), STR_2(5), STR_1(3), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_USARTWriteChar
		_USARTWriteString
 This function is called by:
		_SIM800init
		_SIM800SendSms
		_SIM800ReadSms
		_SIM800DeleteSms
		_main
		_EEPROMPrint
		_SIM800sendCommand
 This function uses a non-reentrant model


 *************** function _USARTWriteString *****************
 Defined at:
		line 57 in file "usart.c"
 Parameters:    Size  Location     Type
  str             2    6[BANK0 ] PTR const unsigned char 
		 -> STR_24(2), STR_23(2), STR_22(6), STR_21(9), 
		 -> STR_20(15), STR_19(11), SIM800L.smsmem(5), STR_16(29), 
		 -> STR_15(26), STR_14(27), SIM800L.cell(15), SIM800L(120), 
		 -> STR_13(3), STR_12(9), STR_11(3), STR_10(9), 
		 -> STR_9(14), STR_8(4), STR_7(10), STR_6(14), 
		 -> STR_5(5), STR_4(12), STR_3(7), STR_2(5), 
		 -> STR_1(3), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_USARTWriteChar
 This function is called by:
		_SIM800SendSms
		_SIM800ReadSms
		_SIM800DeleteSms
		_USARTWriteLine
 This function uses a non-reentrant model


 *************** function _USARTWriteChar *****************
 Defined at:
		line 51 in file "usart.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SIM800SendSms
		_SIM800DeleteSms
		_USARTWriteString
		_USARTWriteLine
		_EEPROMPrint
		_USARTWriteInt
		_USARTGotoNewLine
 This function uses a non-reentrant model


 *************** function _EEPROMUpdatePassword *****************
 Defined at:
		line 205 in file "eeprom.c"
 Parameters:    Size  Location     Type
  pass            2   15[BANK0 ] PTR const unsigned char 
		 -> STR_18(5), STR_17(5), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EepromWrite
 This function is called by:
		_SIM800Command
		_main
 This function uses a non-reentrant model


 *************** function _EEPROMSearchNumber *****************
 Defined at:
		line 146 in file "eeprom.c"
 Parameters:    Size  Location     Type
  nmbr            2   16[BANK0 ] PTR const unsigned char 
		 -> SIM800L.cell(15), SIM800L(120), 
  nmbrLenght      1   18[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  aux             2   29[BANK0 ] unsigned int 
  result          2   27[BANK0 ] unsigned int 
  count           2   25[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2   16[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       6       0       0
      Totals:         0      15       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EepromRead
		___lwdiv
 This function is called by:
		_SIM800Command
		_main
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    5[BANK0 ] unsigned int 
  dividend        2    7[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   10[BANK0 ] unsigned int 
  counter         1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    5[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EEPROMSearchNumber
 This function uses a non-reentrant model


 *************** function _EEPROMEraseAll *****************
 Defined at:
		line 173 in file "eeprom.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_EepromEnd
		_EepromOpCode
		_EepromStart
 This function is called by:
		_SIM800Command
 This function uses a non-reentrant model


 *************** function _EEPROMDeleteNumber *****************
 Defined at:
		line 133 in file "eeprom.c"
 Parameters:    Size  Location     Type
  position        2   15[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  address         2   19[BANK0 ] unsigned int 
  count           1   21[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EepromWrite
		___wmul
 This function is called by:
		_SIM800Command
 This function uses a non-reentrant model


 *************** function _EEPROMCheckPassword *****************
 Defined at:
		line 217 in file "eeprom.c"
 Parameters:    Size  Location     Type
  pass            2   16[BANK0 ] PTR const unsigned char 
		 -> SIM800L.command(25), SIM800L(120), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EepromRead
 This function is called by:
		_SIM800Command
 This function uses a non-reentrant model


 *************** function _EEPROMAdd *****************
 Defined at:
		line 188 in file "eeprom.c"
 Parameters:    Size  Location     Type
  nmbr            2   29[BANK0 ] PTR const unsigned char 
		 -> SIM800L.cell(15), SIM800L(120), 
  nmbrLenght      1   31[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  empty           2   36[BANK0 ] unsigned int 
  found           2   33[BANK0 ] unsigned int 
  aux             1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       5       0       0
      Temps:          0       1       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_EEPROMSaveNumber
		_EepromRead
		___wmul
 This function is called by:
		_SIM800Command
 This function uses a non-reentrant model


 *************** function _EepromRead *****************
 Defined at:
		line 95 in file "eeprom.c"
 Parameters:    Size  Location     Type
  address         2   12[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  data            1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_EepromEnd
		_EepromOpCode
		_EepromReceive
		_EepromStart
 This function is called by:
		_EEPROMSearchNumber
		_EEPROMAdd
		_EEPROMCheckPassword
		_EEPROMPrint
 This function uses a non-reentrant model


 *************** function _EepromReceive *****************
 Defined at:
		line 40 in file "eeprom.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    8[BANK0 ] char 
  b               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EepromRead
 This function uses a non-reentrant model


 *************** function _EEPROMSaveNumber *****************
 Defined at:
		line 106 in file "eeprom.c"
 Parameters:    Size  Location     Type
  nmbr            2   15[BANK0 ] PTR const unsigned char 
		 -> SIM800L.cell(15), SIM800L(120), 
  nmbrLenght      1   17[BANK0 ] unsigned char 
  position        2   18[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  address         2   27[BANK0 ] unsigned int 
  count           2   25[BANK0 ] unsigned int 
  result          2   23[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       6       0       0
      Temps:          0       3       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EepromWrite
		___wmul
 This function is called by:
		_EEPROMAdd
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    5[BANK0 ] unsigned int 
  multiplicand    2    7[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    9[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    5[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EEPROMSaveNumber
		_EEPROMDeleteNumber
		_EEPROMAdd
		_EEPROMPrint
 This function uses a non-reentrant model


 *************** function _EepromWrite *****************
 Defined at:
		line 83 in file "eeprom.c"
 Parameters:    Size  Location     Type
  address         2   12[BANK0 ] unsigned int 
  data            1   14[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_EepromEnd
		_EepromOpCode
		_EepromSend
		_EepromStart
 This function is called by:
		_EEPROMSaveNumber
		_EEPROMDeleteNumber
		_EEPROMUpdatePassword
 This function uses a non-reentrant model


 *************** function _EepromStart *****************
 Defined at:
		line 6 in file "eeprom.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EepromWrite
		_EepromRead
		_EEPROMEraseAll
 This function uses a non-reentrant model


 *************** function _EepromSend *****************
 Defined at:
		line 27 in file "eeprom.c"
 Parameters:    Size  Location     Type
  b               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  b               1    7[BANK0 ] unsigned char 
  i               1    8[BANK0 ] char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EepromWrite
 This function uses a non-reentrant model


 *************** function _EepromOpCode *****************
 Defined at:
		line 56 in file "eeprom.c"
 Parameters:    Size  Location     Type
  opcode          1    wreg     unsigned char 
  address         2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  opcode          1   10[BANK0 ] unsigned char 
  i               1   11[BANK0 ] char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EepromWrite
		_EepromRead
		_EEPROMEraseAll
 This function uses a non-reentrant model


 *************** function _EepromEnd *****************
 Defined at:
		line 20 in file "eeprom.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_EepromWrite
		_EepromRead
		_EEPROMEraseAll
 This function uses a non-reentrant model


 *************** function _GPIORedLedBlink *****************
 Defined at:
		line 27 in file "gpio.c"
 Parameters:    Size  Location     Type
  times           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  times           1    8[BANK0 ] unsigned char 
  i               1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       3       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GPIOPortInit *****************
 Defined at:
		line 5 in file "gpio.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GPIOBlueLedBlink *****************
 Defined at:
		line 39 in file "gpio.c"
 Parameters:    Size  Location     Type
  times           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  times           1    8[BANK0 ] unsigned char 
  i               1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       3       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 6 in file "isr.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_USARTHandleRxInt
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _USARTHandleRxInt *****************
 Defined at:
		line 73 in file "usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ci              1    1[BANK0 ] unsigned char 
  ci              1    4[BANK0 ] unsigned char 
  ci              1    3[BANK0 ] unsigned char 
  ci              1    2[BANK0 ] unsigned char 
  data            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       5       0       0
      Temps:         11       0       0       0
      Totals:        11       5       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c
		___wmul        		CODE           	0B9B	0000	30

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c estimated size: 30

usart.c
		_USARTWriteStri		CODE           	0B4B	0000	24
		_USARTWriteLine		CODE           	04EE	0000	18
		_USARTWriteChar		CODE           	0B0A	0000	8
		_USARTHandleRxI		CODE           	0031	0000	663
		_USARTInit     		CODE           	0D88	0000	74

usart.c estimated size: 787

eeprom.c
		_EepromWrite   		CODE           	0BB9	0000	37
		_EEPROMSaveNumb		CODE           	0471	0000	125
		_EEPROMCheckPas		CODE           	0E6E	0000	84
		_EEPROMDeleteNu		CODE           	0CCB	0000	59
		_EepromSend    		CODE           	0C66	0000	46
		_EepromStart   		CODE           	0B38	0000	19
		_EEPROMAdd     		CODE           	0E1F	0000	79
		_EEPROMSearchNu		CODE           	0693	0000	136
		_EepromOpCode  		CODE           	0EC2	0000	102
		_EEPROMEraseAll		CODE           	0D06	0000	61
		_EepromRead    		CODE           	0B63	0000	28
		_EepromEnd     		CODE           	0B12	0000	9
		_EEPROMUpdatePa		CODE           	071B	0000	126
		_EepromReceive 		CODE           	0BDE	0000	44

eeprom.c estimated size: 955

sim800l.c
		_SIM800Command 		CODE           	02C8	0000	425
		_SIM800SendSms 		CODE           	0F28	0000	105
		_SIM800init    		CODE           	0F91	0000	111
		_SIM800LClear  		CODE           	0799	0000	103
		_SIM800DeleteSm		CODE           	0D43	0000	69
		_SIM800ReadSms 		CODE           	0DD2	0000	77

sim800l.c estimated size: 890

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c
		___lwdiv       		CODE           	0C94	0000	55

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c estimated size: 55

isr.c
		_ISR           		CODE           	0004	0000	18

isr.c estimated size: 18

shared
		__stringdata   		STRCODE        	0500	0000	208
		__initializatio		CODE           	0018	0000	21

shared estimated size: 229

gpio.c
		_GPIOBlueLedBli		CODE           	0C0A	0000	46
		_GPIORedLedBlin		CODE           	0C38	0000	46
		_GPIOPortInit  		CODE           	0B27	0000	17

gpio.c estimated size: 109

main.c
		_main          		CODE           	05D0	0000	195

main.c estimated size: 195

system.c
		_SYSTEMInit    		CODE           	0B7F	0000	28

system.c estimated size: 28

