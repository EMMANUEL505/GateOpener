

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Apr 05 08:02:31 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1828
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x120,80
    37                           	dabs	1,0xA2,78
    38                           	dabs	1,0x2052,0,_SIM800L
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  0091                     	;# 
    73  0092                     	;# 
    74  0093                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011D                     	;# 
   101  011E                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  018E                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019C                     	;# 
   121  019C                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019F                     	;# 
   125  020C                     	;# 
   126  020D                     	;# 
   127  020E                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0295                     	;# 
   150  0295                     	;# 
   151  0296                     	;# 
   152  0298                     	;# 
   153  0298                     	;# 
   154  0299                     	;# 
   155  029A                     	;# 
   156  029B                     	;# 
   157  029C                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029E                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  038C                     	;# 
   170  038D                     	;# 
   171  038E                     	;# 
   172  0391                     	;# 
   173  0392                     	;# 
   174  0393                     	;# 
   175  0394                     	;# 
   176  0395                     	;# 
   177  0396                     	;# 
   178  039A                     	;# 
   179  039C                     	;# 
   180  039D                     	;# 
   181  039E                     	;# 
   182  039F                     	;# 
   183  0415                     	;# 
   184  0416                     	;# 
   185  0417                     	;# 
   186  041C                     	;# 
   187  041D                     	;# 
   188  041E                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  008C                     	;# 
   230  008D                     	;# 
   231  008E                     	;# 
   232  0091                     	;# 
   233  0092                     	;# 
   234  0093                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  0111                     	;# 
   250  0112                     	;# 
   251  0113                     	;# 
   252  0114                     	;# 
   253  0115                     	;# 
   254  0116                     	;# 
   255  0117                     	;# 
   256  0118                     	;# 
   257  0119                     	;# 
   258  011A                     	;# 
   259  011B                     	;# 
   260  011D                     	;# 
   261  011E                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  018E                     	;# 
   265  0191                     	;# 
   266  0191                     	;# 
   267  0192                     	;# 
   268  0193                     	;# 
   269  0193                     	;# 
   270  0193                     	;# 
   271  0194                     	;# 
   272  0195                     	;# 
   273  0196                     	;# 
   274  0199                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019E                     	;# 
   284  019F                     	;# 
   285  020C                     	;# 
   286  020D                     	;# 
   287  020E                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029E                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0318                     	;# 
   326  0318                     	;# 
   327  0319                     	;# 
   328  031A                     	;# 
   329  038C                     	;# 
   330  038D                     	;# 
   331  038E                     	;# 
   332  0391                     	;# 
   333  0392                     	;# 
   334  0393                     	;# 
   335  0394                     	;# 
   336  0395                     	;# 
   337  0396                     	;# 
   338  039A                     	;# 
   339  039C                     	;# 
   340  039D                     	;# 
   341  039E                     	;# 
   342  039F                     	;# 
   343  0415                     	;# 
   344  0416                     	;# 
   345  0417                     	;# 
   346  041C                     	;# 
   347  041D                     	;# 
   348  041E                     	;# 
   349  0FE4                     	;# 
   350  0FE5                     	;# 
   351  0FE6                     	;# 
   352  0FE7                     	;# 
   353  0FE8                     	;# 
   354  0FE9                     	;# 
   355  0FEA                     	;# 
   356  0FEB                     	;# 
   357  0FED                     	;# 
   358  0FEE                     	;# 
   359  0FEF                     	;# 
   360  0000                     	;# 
   361  0001                     	;# 
   362  0002                     	;# 
   363  0003                     	;# 
   364  0004                     	;# 
   365  0005                     	;# 
   366  0006                     	;# 
   367  0007                     	;# 
   368  0008                     	;# 
   369  0009                     	;# 
   370  000A                     	;# 
   371  000B                     	;# 
   372  000C                     	;# 
   373  000D                     	;# 
   374  000E                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0013                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  008C                     	;# 
   390  008D                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0093                     	;# 
   395  0095                     	;# 
   396  0096                     	;# 
   397  0097                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009A                     	;# 
   401  009B                     	;# 
   402  009B                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011D                     	;# 
   421  011E                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  018E                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019C                     	;# 
   441  019C                     	;# 
   442  019D                     	;# 
   443  019E                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  020E                     	;# 
   448  0211                     	;# 
   449  0211                     	;# 
   450  0212                     	;# 
   451  0212                     	;# 
   452  0213                     	;# 
   453  0213                     	;# 
   454  0214                     	;# 
   455  0214                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0216                     	;# 
   461  0216                     	;# 
   462  0217                     	;# 
   463  0217                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0294                     	;# 
   469  0295                     	;# 
   470  0295                     	;# 
   471  0296                     	;# 
   472  0298                     	;# 
   473  0298                     	;# 
   474  0299                     	;# 
   475  029A                     	;# 
   476  029B                     	;# 
   477  029C                     	;# 
   478  029D                     	;# 
   479  029E                     	;# 
   480  029E                     	;# 
   481  0311                     	;# 
   482  0311                     	;# 
   483  0312                     	;# 
   484  0313                     	;# 
   485  0318                     	;# 
   486  0318                     	;# 
   487  0319                     	;# 
   488  031A                     	;# 
   489  038C                     	;# 
   490  038D                     	;# 
   491  038E                     	;# 
   492  0391                     	;# 
   493  0392                     	;# 
   494  0393                     	;# 
   495  0394                     	;# 
   496  0395                     	;# 
   497  0396                     	;# 
   498  039A                     	;# 
   499  039C                     	;# 
   500  039D                     	;# 
   501  039E                     	;# 
   502  039F                     	;# 
   503  0415                     	;# 
   504  0416                     	;# 
   505  0417                     	;# 
   506  041C                     	;# 
   507  041D                     	;# 
   508  041E                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0013                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  001E                     	;# 
   548  001F                     	;# 
   549  008C                     	;# 
   550  008D                     	;# 
   551  008E                     	;# 
   552  0091                     	;# 
   553  0092                     	;# 
   554  0093                     	;# 
   555  0095                     	;# 
   556  0096                     	;# 
   557  0097                     	;# 
   558  0098                     	;# 
   559  0099                     	;# 
   560  009A                     	;# 
   561  009B                     	;# 
   562  009B                     	;# 
   563  009C                     	;# 
   564  009D                     	;# 
   565  009E                     	;# 
   566  010C                     	;# 
   567  010D                     	;# 
   568  010E                     	;# 
   569  0111                     	;# 
   570  0112                     	;# 
   571  0113                     	;# 
   572  0114                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  011A                     	;# 
   579  011B                     	;# 
   580  011D                     	;# 
   581  011E                     	;# 
   582  018C                     	;# 
   583  018D                     	;# 
   584  018E                     	;# 
   585  0191                     	;# 
   586  0191                     	;# 
   587  0192                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0193                     	;# 
   591  0194                     	;# 
   592  0195                     	;# 
   593  0196                     	;# 
   594  0199                     	;# 
   595  019A                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019E                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  0291                     	;# 
   625  0291                     	;# 
   626  0292                     	;# 
   627  0293                     	;# 
   628  0294                     	;# 
   629  0295                     	;# 
   630  0295                     	;# 
   631  0296                     	;# 
   632  0298                     	;# 
   633  0298                     	;# 
   634  0299                     	;# 
   635  029A                     	;# 
   636  029B                     	;# 
   637  029C                     	;# 
   638  029D                     	;# 
   639  029E                     	;# 
   640  029E                     	;# 
   641  0311                     	;# 
   642  0311                     	;# 
   643  0312                     	;# 
   644  0313                     	;# 
   645  0318                     	;# 
   646  0318                     	;# 
   647  0319                     	;# 
   648  031A                     	;# 
   649  038C                     	;# 
   650  038D                     	;# 
   651  038E                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  039A                     	;# 
   659  039C                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0415                     	;# 
   664  0416                     	;# 
   665  0417                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  0011                     	;# 
   696  0012                     	;# 
   697  0013                     	;# 
   698  0015                     	;# 
   699  0016                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001B                     	;# 
   706  001C                     	;# 
   707  001E                     	;# 
   708  001F                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0093                     	;# 
   715  0095                     	;# 
   716  0096                     	;# 
   717  0097                     	;# 
   718  0098                     	;# 
   719  0099                     	;# 
   720  009A                     	;# 
   721  009B                     	;# 
   722  009B                     	;# 
   723  009C                     	;# 
   724  009D                     	;# 
   725  009E                     	;# 
   726  010C                     	;# 
   727  010D                     	;# 
   728  010E                     	;# 
   729  0111                     	;# 
   730  0112                     	;# 
   731  0113                     	;# 
   732  0114                     	;# 
   733  0115                     	;# 
   734  0116                     	;# 
   735  0117                     	;# 
   736  0118                     	;# 
   737  0119                     	;# 
   738  011A                     	;# 
   739  011B                     	;# 
   740  011D                     	;# 
   741  011E                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  0191                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0193                     	;# 
   749  0193                     	;# 
   750  0193                     	;# 
   751  0194                     	;# 
   752  0195                     	;# 
   753  0196                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019B                     	;# 
   759  019B                     	;# 
   760  019C                     	;# 
   761  019C                     	;# 
   762  019D                     	;# 
   763  019E                     	;# 
   764  019F                     	;# 
   765  020C                     	;# 
   766  020D                     	;# 
   767  020E                     	;# 
   768  0211                     	;# 
   769  0211                     	;# 
   770  0212                     	;# 
   771  0212                     	;# 
   772  0213                     	;# 
   773  0213                     	;# 
   774  0214                     	;# 
   775  0214                     	;# 
   776  0215                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0215                     	;# 
   780  0216                     	;# 
   781  0216                     	;# 
   782  0217                     	;# 
   783  0217                     	;# 
   784  0291                     	;# 
   785  0291                     	;# 
   786  0292                     	;# 
   787  0293                     	;# 
   788  0294                     	;# 
   789  0295                     	;# 
   790  0295                     	;# 
   791  0296                     	;# 
   792  0298                     	;# 
   793  0298                     	;# 
   794  0299                     	;# 
   795  029A                     	;# 
   796  029B                     	;# 
   797  029C                     	;# 
   798  029D                     	;# 
   799  029E                     	;# 
   800  029E                     	;# 
   801  0311                     	;# 
   802  0311                     	;# 
   803  0312                     	;# 
   804  0313                     	;# 
   805  0318                     	;# 
   806  0318                     	;# 
   807  0319                     	;# 
   808  031A                     	;# 
   809  038C                     	;# 
   810  038D                     	;# 
   811  038E                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  0393                     	;# 
   815  0394                     	;# 
   816  0395                     	;# 
   817  0396                     	;# 
   818  039A                     	;# 
   819  039C                     	;# 
   820  039D                     	;# 
   821  039E                     	;# 
   822  039F                     	;# 
   823  0415                     	;# 
   824  0416                     	;# 
   825  0417                     	;# 
   826  041C                     	;# 
   827  041D                     	;# 
   828  041E                     	;# 
   829  0FE4                     	;# 
   830  0FE5                     	;# 
   831  0FE6                     	;# 
   832  0FE7                     	;# 
   833  0FE8                     	;# 
   834  0FE9                     	;# 
   835  0FEA                     	;# 
   836  0FEB                     	;# 
   837  0FED                     	;# 
   838  0FEE                     	;# 
   839  0FEF                     	;# 
   840  0000                     	;# 
   841  0001                     	;# 
   842  0002                     	;# 
   843  0003                     	;# 
   844  0004                     	;# 
   845  0005                     	;# 
   846  0006                     	;# 
   847  0007                     	;# 
   848  0008                     	;# 
   849  0009                     	;# 
   850  000A                     	;# 
   851  000B                     	;# 
   852  000C                     	;# 
   853  000D                     	;# 
   854  000E                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  001A                     	;# 
   865  001B                     	;# 
   866  001C                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  008C                     	;# 
   870  008D                     	;# 
   871  008E                     	;# 
   872  0091                     	;# 
   873  0092                     	;# 
   874  0093                     	;# 
   875  0095                     	;# 
   876  0096                     	;# 
   877  0097                     	;# 
   878  0098                     	;# 
   879  0099                     	;# 
   880  009A                     	;# 
   881  009B                     	;# 
   882  009B                     	;# 
   883  009C                     	;# 
   884  009D                     	;# 
   885  009E                     	;# 
   886  010C                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  0111                     	;# 
   890  0112                     	;# 
   891  0113                     	;# 
   892  0114                     	;# 
   893  0115                     	;# 
   894  0116                     	;# 
   895  0117                     	;# 
   896  0118                     	;# 
   897  0119                     	;# 
   898  011A                     	;# 
   899  011B                     	;# 
   900  011D                     	;# 
   901  011E                     	;# 
   902  018C                     	;# 
   903  018D                     	;# 
   904  018E                     	;# 
   905  0191                     	;# 
   906  0191                     	;# 
   907  0192                     	;# 
   908  0193                     	;# 
   909  0193                     	;# 
   910  0193                     	;# 
   911  0194                     	;# 
   912  0195                     	;# 
   913  0196                     	;# 
   914  0199                     	;# 
   915  019A                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019C                     	;# 
   921  019C                     	;# 
   922  019D                     	;# 
   923  019E                     	;# 
   924  019F                     	;# 
   925  020C                     	;# 
   926  020D                     	;# 
   927  020E                     	;# 
   928  0211                     	;# 
   929  0211                     	;# 
   930  0212                     	;# 
   931  0212                     	;# 
   932  0213                     	;# 
   933  0213                     	;# 
   934  0214                     	;# 
   935  0214                     	;# 
   936  0215                     	;# 
   937  0215                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0216                     	;# 
   941  0216                     	;# 
   942  0217                     	;# 
   943  0217                     	;# 
   944  0291                     	;# 
   945  0291                     	;# 
   946  0292                     	;# 
   947  0293                     	;# 
   948  0294                     	;# 
   949  0295                     	;# 
   950  0295                     	;# 
   951  0296                     	;# 
   952  0298                     	;# 
   953  0298                     	;# 
   954  0299                     	;# 
   955  029A                     	;# 
   956  029B                     	;# 
   957  029C                     	;# 
   958  029D                     	;# 
   959  029E                     	;# 
   960  029E                     	;# 
   961  0311                     	;# 
   962  0311                     	;# 
   963  0312                     	;# 
   964  0313                     	;# 
   965  0318                     	;# 
   966  0318                     	;# 
   967  0319                     	;# 
   968  031A                     	;# 
   969  038C                     	;# 
   970  038D                     	;# 
   971  038E                     	;# 
   972  0391                     	;# 
   973  0392                     	;# 
   974  0393                     	;# 
   975  0394                     	;# 
   976  0395                     	;# 
   977  0396                     	;# 
   978  039A                     	;# 
   979  039C                     	;# 
   980  039D                     	;# 
   981  039E                     	;# 
   982  039F                     	;# 
   983  0415                     	;# 
   984  0416                     	;# 
   985  0417                     	;# 
   986  041C                     	;# 
   987  041D                     	;# 
   988  041E                     	;# 
   989  0FE4                     	;# 
   990  0FE5                     	;# 
   991  0FE6                     	;# 
   992  0FE7                     	;# 
   993  0FE8                     	;# 
   994  0FE9                     	;# 
   995  0FEA                     	;# 
   996  0FEB                     	;# 
   997  0FED                     	;# 
   998  0FEE                     	;# 
   999  0FEF                     	;# 
  1000  0000                     	;# 
  1001  0001                     	;# 
  1002  0002                     	;# 
  1003  0003                     	;# 
  1004  0004                     	;# 
  1005  0005                     	;# 
  1006  0006                     	;# 
  1007  0007                     	;# 
  1008  0008                     	;# 
  1009  0009                     	;# 
  1010  000A                     	;# 
  1011  000B                     	;# 
  1012  000C                     	;# 
  1013  000D                     	;# 
  1014  000E                     	;# 
  1015  0011                     	;# 
  1016  0012                     	;# 
  1017  0013                     	;# 
  1018  0015                     	;# 
  1019  0016                     	;# 
  1020  0016                     	;# 
  1021  0017                     	;# 
  1022  0018                     	;# 
  1023  0019                     	;# 
  1024  001A                     	;# 
  1025  001B                     	;# 
  1026  001C                     	;# 
  1027  001E                     	;# 
  1028  001F                     	;# 
  1029  008C                     	;# 
  1030  008D                     	;# 
  1031  008E                     	;# 
  1032  0091                     	;# 
  1033  0092                     	;# 
  1034  0093                     	;# 
  1035  0095                     	;# 
  1036  0096                     	;# 
  1037  0097                     	;# 
  1038  0098                     	;# 
  1039  0099                     	;# 
  1040  009A                     	;# 
  1041  009B                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  010C                     	;# 
  1047  010D                     	;# 
  1048  010E                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  011A                     	;# 
  1059  011B                     	;# 
  1060  011D                     	;# 
  1061  011E                     	;# 
  1062  018C                     	;# 
  1063  018D                     	;# 
  1064  018E                     	;# 
  1065  0191                     	;# 
  1066  0191                     	;# 
  1067  0192                     	;# 
  1068  0193                     	;# 
  1069  0193                     	;# 
  1070  0193                     	;# 
  1071  0194                     	;# 
  1072  0195                     	;# 
  1073  0196                     	;# 
  1074  0199                     	;# 
  1075  019A                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019C                     	;# 
  1081  019C                     	;# 
  1082  019D                     	;# 
  1083  019E                     	;# 
  1084  019F                     	;# 
  1085  020C                     	;# 
  1086  020D                     	;# 
  1087  020E                     	;# 
  1088  0211                     	;# 
  1089  0211                     	;# 
  1090  0212                     	;# 
  1091  0212                     	;# 
  1092  0213                     	;# 
  1093  0213                     	;# 
  1094  0214                     	;# 
  1095  0214                     	;# 
  1096  0215                     	;# 
  1097  0215                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0216                     	;# 
  1101  0216                     	;# 
  1102  0217                     	;# 
  1103  0217                     	;# 
  1104  0291                     	;# 
  1105  0291                     	;# 
  1106  0292                     	;# 
  1107  0293                     	;# 
  1108  0294                     	;# 
  1109  0295                     	;# 
  1110  0295                     	;# 
  1111  0296                     	;# 
  1112  0298                     	;# 
  1113  0298                     	;# 
  1114  0299                     	;# 
  1115  029A                     	;# 
  1116  029B                     	;# 
  1117  029C                     	;# 
  1118  029D                     	;# 
  1119  029E                     	;# 
  1120  029E                     	;# 
  1121  0311                     	;# 
  1122  0311                     	;# 
  1123  0312                     	;# 
  1124  0313                     	;# 
  1125  0318                     	;# 
  1126  0318                     	;# 
  1127  0319                     	;# 
  1128  031A                     	;# 
  1129  038C                     	;# 
  1130  038D                     	;# 
  1131  038E                     	;# 
  1132  0391                     	;# 
  1133  0392                     	;# 
  1134  0393                     	;# 
  1135  0394                     	;# 
  1136  0395                     	;# 
  1137  0396                     	;# 
  1138  039A                     	;# 
  1139  039C                     	;# 
  1140  039D                     	;# 
  1141  039E                     	;# 
  1142  039F                     	;# 
  1143  0415                     	;# 
  1144  0416                     	;# 
  1145  0417                     	;# 
  1146  041C                     	;# 
  1147  041D                     	;# 
  1148  041E                     	;# 
  1149  0FE4                     	;# 
  1150  0FE5                     	;# 
  1151  0FE6                     	;# 
  1152  0FE7                     	;# 
  1153  0FE8                     	;# 
  1154  0FE9                     	;# 
  1155  0FEA                     	;# 
  1156  0FEB                     	;# 
  1157  0FED                     	;# 
  1158  0FEE                     	;# 
  1159  0FEF                     	;_SIM800L
  1160  0011                     _PIR1bits	set	17
  1161  000D                     _PORTBbits	set	13
  1162  005F                     _GIE	set	95
  1163  005E                     _PEIE	set	94
  1164  008D                     _RCIF	set	141
  1165  0099                     _OSCCON	set	153
  1166  048D                     _RCIE	set	1165
  1167  0464                     _TRISA4	set	1124
  1168  046C                     _TRISB4	set	1132
  1169  046E                     _TRISB6	set	1134
  1170  046F                     _TRISB7	set	1135
  1171  0470                     _TRISC0	set	1136
  1172  0471                     _TRISC1	set	1137
  1173  0472                     _TRISC2	set	1138
  1174  0474                     _TRISC4	set	1140
  1175  0475                     _TRISC5	set	1141
  1176  0476                     _TRISC6	set	1142
  1177  0477                     _TRISC7	set	1143
  1178  011D                     _APFCON0bits	set	285
  1179  010C                     _LATAbits	set	268
  1180  010D                     _LATBbits	set	269
  1181  010E                     _LATCbits	set	270
  1182  018D                     _ANSELB	set	397
  1183  019F                     _BAUDCONbits	set	415
  1184  0199                     _RCREG	set	409
  1185  019D                     _RCSTAbits	set	413
  1186  019B                     _SPBRG	set	411
  1187  019A                     _TXREG	set	410
  1188  019E                     _TXSTAbits	set	414
  1189                           
  1190                           	psect	stringtext
  1191  0500                     __pstringtext:	
  1192  0500                     __stringdata:	
  1193  0500                     STR_5:	
  1194  0500  3452               	retlw	82	;'R'
  1195  0501  3465               	retlw	101	;'e'
  1196  0502  3463               	retlw	99	;'c'
  1197  0503  3465               	retlw	101	;'e'
  1198  0504  3469               	retlw	105	;'i'
  1199  0505  3476               	retlw	118	;'v'
  1200  0506  3465               	retlw	101	;'e'
  1201  0507  3464               	retlw	100	;'d'
  1202  0508  342D               	retlw	45	;'-'
  1203  0509  3455               	retlw	85	;'U'
  1204  050A  346E               	retlw	110	;'n'
  1205  050B  3461               	retlw	97	;'a'
  1206  050C  3475               	retlw	117	;'u'
  1207  050D  3474               	retlw	116	;'t'
  1208  050E  3468               	retlw	104	;'h'
  1209  050F  346F               	retlw	111	;'o'
  1210  0510  3472               	retlw	114	;'r'
  1211  0511  3469               	retlw	105	;'i'
  1212  0512  347A               	retlw	122	;'z'
  1213  0513  3465               	retlw	101	;'e'
  1214  0514  3464               	retlw	100	;'d'
  1215  0515  3400               	retlw	0
  1216  0516                     STR_9:	
  1217  0516  3443               	retlw	67	;'C'
  1218  0517  346F               	retlw	111	;'o'
  1219  0518  346D               	retlw	109	;'m'
  1220  0519  346D               	retlw	109	;'m'
  1221  051A  3461               	retlw	97	;'a'
  1222  051B  346E               	retlw	110	;'n'
  1223  051C  3464               	retlw	100	;'d'
  1224  051D  3420               	retlw	32	;' '
  1225  051E  3472               	retlw	114	;'r'
  1226  051F  3465               	retlw	101	;'e'
  1227  0520  3463               	retlw	99	;'c'
  1228  0521  3465               	retlw	101	;'e'
  1229  0522  3469               	retlw	105	;'i'
  1230  0523  3476               	retlw	118	;'v'
  1231  0524  3465               	retlw	101	;'e'
  1232  0525  3464               	retlw	100	;'d'
  1233  0526  3400               	retlw	0
  1234  0527                     STR_13:	
  1235  0527  3441               	retlw	65	;'A'
  1236  0528  3454               	retlw	84	;'T'
  1237  0529  342B               	retlw	43	;'+'
  1238  052A  3443               	retlw	67	;'C'
  1239  052B  344D               	retlw	77	;'M'
  1240  052C  3447               	retlw	71	;'G'
  1241  052D  3446               	retlw	70	;'F'
  1242  052E  3420               	retlw	32	;' '
  1243  052F  343D               	retlw	61	;'='
  1244  0530  3420               	retlw	32	;' '
  1245  0531  3431               	retlw	49	;'1'
  1246  0532  340D               	retlw	13
  1247  0533  340A               	retlw	10
  1248  0534  3400               	retlw	0
  1249  0535                     STR_8:	
  1250  0535  342B               	retlw	43	;'+'
  1251  0536  3435               	retlw	53	;'5'
  1252  0537  3432               	retlw	50	;'2'
  1253  0538  3436               	retlw	54	;'6'
  1254  0539  3431               	retlw	49	;'1'
  1255  053A  3434               	retlw	52	;'4'
  1256  053B  3431               	retlw	49	;'1'
  1257  053C  3436               	retlw	54	;'6'
  1258  053D  3435               	retlw	53	;'5'
  1259  053E  3434               	retlw	52	;'4'
  1260  053F  3438               	retlw	56	;'8'
  1261  0540  3431               	retlw	49	;'1'
  1262  0541  3438               	retlw	56	;'8'
  1263  0542  3400               	retlw	0
  1264  0543                     STR_2:	
  1265  0543  3436               	retlw	54	;'6'
  1266  0544  3431               	retlw	49	;'1'
  1267  0545  3434               	retlw	52	;'4'
  1268  0546  3435               	retlw	53	;'5'
  1269  0547  3431               	retlw	49	;'1'
  1270  0548  3433               	retlw	51	;'3'
  1271  0549  3436               	retlw	54	;'6'
  1272  054A  3438               	retlw	56	;'8'
  1273  054B  3434               	retlw	52	;'4'
  1274  054C  3435               	retlw	53	;'5'
  1275  054D  3400               	retlw	0
  1276  054E                     STR_14:	
  1277  054E  3441               	retlw	65	;'A'
  1278  054F  3454               	retlw	84	;'T'
  1279  0550  342B               	retlw	43	;'+'
  1280  0551  3443               	retlw	67	;'C'
  1281  0552  344D               	retlw	77	;'M'
  1282  0553  3447               	retlw	71	;'G'
  1283  0554  3453               	retlw	83	;'S'
  1284  0555  343D               	retlw	61	;'='
  1285  0556  3422               	retlw	34	;'"'
  1286  0557  3400               	retlw	0
  1287  0558                     STR_20:	
  1288  0558  3441               	retlw	65	;'A'
  1289  0559  3454               	retlw	84	;'T'
  1290  055A  342B               	retlw	43	;'+'
  1291  055B  3443               	retlw	67	;'C'
  1292  055C  344D               	retlw	77	;'M'
  1293  055D  3447               	retlw	71	;'G'
  1294  055E  3444               	retlw	68	;'D'
  1295  055F  343D               	retlw	61	;'='
  1296  0560  3400               	retlw	0
  1297  0561                     STR_17:	
  1298  0561  3441               	retlw	65	;'A'
  1299  0562  3454               	retlw	84	;'T'
  1300  0563  342B               	retlw	43	;'+'
  1301  0564  3443               	retlw	67	;'C'
  1302  0565  344D               	retlw	77	;'M'
  1303  0566  3447               	retlw	71	;'G'
  1304  0567  3452               	retlw	82	;'R'
  1305  0568  343D               	retlw	61	;'='
  1306  0569  3400               	retlw	0
  1307  056A                     STR_3:	
  1308  056A  3441               	retlw	65	;'A'
  1309  056B  3454               	retlw	84	;'T'
  1310  056C  342B               	retlw	43	;'+'
  1311  056D  3443               	retlw	67	;'C'
  1312  056E  3453               	retlw	83	;'S'
  1313  056F  3451               	retlw	81	;'Q'
  1314  0570  340D               	retlw	13
  1315  0571  340A               	retlw	10
  1316  0572  3400               	retlw	0
  1317  0573                     STR_11:	
  1318  0573  3441               	retlw	65	;'A'
  1319  0574  3454               	retlw	84	;'T'
  1320  0575  3445               	retlw	69	;'E'
  1321  0576  3430               	retlw	48	;'0'
  1322  0577  340D               	retlw	13
  1323  0578  340A               	retlw	10
  1324  0579  3400               	retlw	0
  1325  057A                     STR_4:	
  1326  057A  3441               	retlw	65	;'A'
  1327  057B  3454               	retlw	84	;'T'
  1328  057C  3448               	retlw	72	;'H'
  1329  057D  340D               	retlw	13
  1330  057E  340A               	retlw	10
  1331  057F  3400               	retlw	0
  1332  0580                     STR_10:	
  1333  0580  3441               	retlw	65	;'A'
  1334  0581  3454               	retlw	84	;'T'
  1335  0582  340D               	retlw	13
  1336  0583  340A               	retlw	10
  1337  0584  3400               	retlw	0
  1338  0585                     STR_12:	
  1339  0585  3441               	retlw	65	;'A'
  1340  0586  3454               	retlw	84	;'T'
  1341  0587  340A               	retlw	10
  1342  0588  340D               	retlw	13
  1343  0589  3400               	retlw	0
  1344  058A                     STR_15:	
  1345  058A  3422               	retlw	34	;'"'
  1346  058B  340D               	retlw	13
  1347  058C  340A               	retlw	10
  1348  058D  3400               	retlw	0
  1349  058E                     STR_6:	
  1350  058E  3431               	retlw	49	;'1'
  1351  058F  3400               	retlw	0
  1352  0590                     STR_7:	
  1353  0590  3434               	retlw	52	;'4'
  1354  0591  3400               	retlw	0
  1355  0592                     __end_of__stringdata:	
  1356                           
  1357                           ; #config settings
  1358  0000                     
  1359                           	psect	cinit
  1360  0018                     start_initialization:	
  1361  0018                     __initialization:		;BIGRAM
  1362                           
  1363                           ; Clear objects allocated to BIGRAM
  1364  0018  3052               	movlw	low (0+8274)
  1365  0019  0084               	movwf	4
  1366  001A  3020               	movlw	high (0+8274)
  1367  001B  0085               	movwf	5
  1368  001C  309E               	movlw	158
  1369  001D  00FE               	movwf	btemp
  1370  001E  3000               	movlw	0
  1371  001F  00FF               	movwf	btemp+1
  1372  0020  318F  2710         	fcall	clear_ram0
  1373                           
  1374                           ; Clear objects allocated to BANK0
  1375  0022  01C3               	clrf	__pbssBANK0& (0+127)
  1376  0023  01C4               	clrf	(__pbssBANK0+1)& (0+127)
  1377  0024  01C5               	clrf	(__pbssBANK0+2)& (0+127)
  1378  0025  01C6               	clrf	(__pbssBANK0+3)& (0+127)
  1379  0026  01C7               	clrf	(__pbssBANK0+4)& (0+127)
  1380  0027  01C8               	clrf	(__pbssBANK0+5)& (0+127)
  1381  0028  01C9               	clrf	(__pbssBANK0+6)& (0+127)
  1382  0029  01CA               	clrf	(__pbssBANK0+7)& (0+127)
  1383  002A                     end_of_initialization:	
  1384                           ;End of C runtime variable initialization code
  1385                           
  1386  002A                     __end_of__initialization:	
  1387  002A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1388  002B  0020               	movlb	0
  1389  002C  3182  2A46         	ljmp	_main	;jump to C main() function
  1390                           
  1391                           	psect	bssBANK0
  1392  0043                     __pbssBANK0:	
  1393  0043                     USARTWriteInt@F3213:	
  1394  0043                     	ds	5
  1395  0048                     _bufque:	
  1396  0048                     	ds	1
  1397  0049                     _i:	
  1398  0049                     	ds	1
  1399  004A                     _task:	
  1400  004A                     	ds	1
  1401                           
  1402                           	psect	clrtext
  1403  0F10                     clear_ram0:	
  1404                           ;	Called with FSR0 containing the base address, and
  1405                           ;	btemp/btemp+1 has the size to clear
  1406                           
  1407  0F10  0064               	clrwdt	;clear the watchdog before getting into this loop
  1408  0F11                     clrloop0:	
  1409  0F11  0180               	clrf	0	;clear RAM location pointed to by FSR
  1410  0F12  3101               	addfsr 0,1
  1411  0F13  3001               	movlw	1
  1412  0F14  02FE               	subwf	126,f
  1413  0F15  3000               	movlw	0
  1414  0F16  3BFF               	subwfb	127,f
  1415  0F17  087F               	movf	127,w
  1416  0F18  047E               	iorwf	126,w
  1417  0F19  1903               	btfsc	3,2
  1418  0F1A  3400               	retlw	0	;all done for this memory range, return
  1419  0F1B  2F11               	goto	clrloop0	;have we reached the end yet?
  1420                           
  1421                           	psect	cstackCOMMON
  1422  0070                     __pcstackCOMMON:	
  1423  0070                     ?_SYSTEMInit:	
  1424  0070                     ?_GPIOPortInit:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0070                     ?_EEPROMEraseAll:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0070                     ?_USARTClearSIM800L:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0070                     ?_GPIORedLedBlink:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0070                     ?_USARTHandleRxInt:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0070                     ??_USARTHandleRxInt:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0070                     ?_USARTWriteChar:	
  1443                           ; 0 bytes @ 0x0
  1444                           
  1445  0070                     ?_main:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ?_EepromStart:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_EepromEnd:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_EepromSend:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_ISR:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_SIM800init:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_EepromReceive:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466                           
  1467                           ; 1 bytes @ 0x0
  1468  0070                     	ds	11
  1469  007B                     ??_ISR:	
  1470                           
  1471                           ; 0 bytes @ 0xB
  1472  007B                     	ds	1
  1473                           
  1474                           	psect	cstackBANK0
  1475  0020                     __pcstackBANK0:	
  1476  0020                     USARTHandleRxInt@data:	
  1477                           
  1478                           ; 1 bytes @ 0x0
  1479  0020                     	ds	1
  1480  0021                     USARTHandleRxInt@ci:	
  1481                           
  1482                           ; 1 bytes @ 0x1
  1483  0021                     	ds	1
  1484  0022                     USARTHandleRxInt@ci_575:	
  1485                           
  1486                           ; 1 bytes @ 0x2
  1487  0022                     	ds	1
  1488  0023                     USARTHandleRxInt@ci_576:	
  1489                           
  1490                           ; 1 bytes @ 0x3
  1491  0023                     	ds	1
  1492  0024                     ??_SYSTEMInit:	
  1493  0024                     ?_USARTInit:	
  1494                           ; 0 bytes @ 0x4
  1495                           
  1496  0024                     ??_GPIOPortInit:	
  1497                           ; 0 bytes @ 0x4
  1498                           
  1499  0024                     ??_USARTClearSIM800L:	
  1500                           ; 0 bytes @ 0x4
  1501                           
  1502  0024                     ??_GPIORedLedBlink:	
  1503                           ; 0 bytes @ 0x4
  1504                           
  1505  0024                     ??_USARTWriteChar:	
  1506                           ; 0 bytes @ 0x4
  1507                           
  1508  0024                     ??_EepromStart:	
  1509                           ; 0 bytes @ 0x4
  1510                           
  1511  0024                     ??_EepromEnd:	
  1512                           ; 0 bytes @ 0x4
  1513                           
  1514  0024                     ??_EepromSend:	
  1515                           ; 0 bytes @ 0x4
  1516                           
  1517  0024                     ??_EepromReceive:	
  1518                           ; 0 bytes @ 0x4
  1519                           
  1520  0024                     ?_EepromOpCode:	
  1521                           ; 0 bytes @ 0x4
  1522                           
  1523  0024                     ?___wmul:	
  1524                           ; 0 bytes @ 0x4
  1525                           
  1526  0024                     SYSTEMInit@freq:	
  1527                           ; 2 bytes @ 0x4
  1528                           
  1529  0024                     USARTWriteChar@ch:	
  1530                           ; 1 bytes @ 0x4
  1531                           
  1532  0024                     EepromOpCode@address:	
  1533                           ; 1 bytes @ 0x4
  1534                           
  1535  0024                     USARTInit@baud_rate:	
  1536                           ; 2 bytes @ 0x4
  1537                           
  1538  0024                     ___wmul@multiplier:	
  1539                           ; 2 bytes @ 0x4
  1540                           
  1541                           
  1542                           ; 2 bytes @ 0x4
  1543  0024                     	ds	1
  1544  0025                     ?_USARTWriteString:	
  1545  0025                     USARTWriteString@str:	
  1546                           ; 0 bytes @ 0x5
  1547                           
  1548                           
  1549                           ; 2 bytes @ 0x5
  1550  0025                     	ds	1
  1551  0026                     ??_USARTInit:	
  1552  0026                     ??_EepromOpCode:	
  1553                           ; 0 bytes @ 0x6
  1554                           
  1555  0026                     EepromSend@b:	
  1556                           ; 0 bytes @ 0x6
  1557                           
  1558  0026                     EepromReceive@b:	
  1559                           ; 1 bytes @ 0x6
  1560                           
  1561  0026                     ___wmul@multiplicand:	
  1562                           ; 1 bytes @ 0x6
  1563                           
  1564                           
  1565                           ; 2 bytes @ 0x6
  1566  0026                     	ds	1
  1567  0027                     ?_USARTWriteLine:	
  1568  0027                     ??_USARTWriteString:	
  1569                           ; 0 bytes @ 0x7
  1570                           
  1571  0027                     EepromSend@i:	
  1572                           ; 0 bytes @ 0x7
  1573                           
  1574  0027                     EepromReceive@i:	
  1575                           ; 1 bytes @ 0x7
  1576                           
  1577  0027                     GPIORedLedBlink@times:	
  1578                           ; 1 bytes @ 0x7
  1579                           
  1580  0027                     USARTWriteLine@str:	
  1581                           ; 1 bytes @ 0x7
  1582                           
  1583                           
  1584                           ; 2 bytes @ 0x7
  1585  0027                     	ds	1
  1586  0028                     ??___wmul:	
  1587  0028                     GPIORedLedBlink@i:	
  1588                           ; 0 bytes @ 0x8
  1589                           
  1590  0028                     USARTClearSIM800L@i:	
  1591                           ; 1 bytes @ 0x8
  1592                           
  1593  0028                     ___wmul@product:	
  1594                           ; 1 bytes @ 0x8
  1595                           
  1596                           
  1597                           ; 2 bytes @ 0x8
  1598  0028                     	ds	1
  1599  0029                     ??_SIM800init:	
  1600  0029                     ??_USARTWriteLine:	
  1601                           ; 0 bytes @ 0x9
  1602                           
  1603  0029                     ?_SIM800SendSms:	
  1604                           ; 0 bytes @ 0x9
  1605                           
  1606  0029                     ?_SIM800ReadSms:	
  1607                           ; 1 bytes @ 0x9
  1608                           
  1609  0029                     ?_SIM800DeleteSms:	
  1610                           ; 1 bytes @ 0x9
  1611                           
  1612  0029                     EepromOpCode@opcode:	
  1613                           ; 1 bytes @ 0x9
  1614                           
  1615  0029                     SIM800SendSms@nmbr:	
  1616                           ; 1 bytes @ 0x9
  1617                           
  1618  0029                     SIM800ReadSms@mem:	
  1619                           ; 2 bytes @ 0x9
  1620                           
  1621  0029                     SIM800DeleteSms@index:	
  1622                           ; 2 bytes @ 0x9
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0x9
  1626  0029                     	ds	1
  1627  002A                     EepromOpCode@i:	
  1628                           
  1629                           ; 1 bytes @ 0xA
  1630  002A                     	ds	1
  1631  002B                     ??_EEPROMEraseAll:	
  1632  002B                     ??_SIM800ReadSms:	
  1633                           ; 0 bytes @ 0xB
  1634                           
  1635  002B                     ?_EepromWrite:	
  1636                           ; 0 bytes @ 0xB
  1637                           
  1638  002B                     ?_EepromRead:	
  1639                           ; 0 bytes @ 0xB
  1640                           
  1641  002B                     EepromWrite@address:	
  1642                           ; 1 bytes @ 0xB
  1643                           
  1644  002B                     EepromRead@address:	
  1645                           ; 2 bytes @ 0xB
  1646                           
  1647  002B                     SIM800SendSms@msg:	
  1648                           ; 2 bytes @ 0xB
  1649                           
  1650  002B                     SIM800DeleteSms@flag:	
  1651                           ; 2 bytes @ 0xB
  1652                           
  1653                           
  1654                           ; 2 bytes @ 0xB
  1655  002B                     	ds	2
  1656  002D                     ??_SIM800SendSms:	
  1657  002D                     ??_SIM800DeleteSms:	
  1658                           ; 0 bytes @ 0xD
  1659                           
  1660  002D                     ??_EepromRead:	
  1661                           ; 0 bytes @ 0xD
  1662                           
  1663  002D                     EepromWrite@data:	
  1664                           ; 0 bytes @ 0xD
  1665                           
  1666                           
  1667                           ; 1 bytes @ 0xD
  1668  002D                     	ds	1
  1669  002E                     ??_EepromWrite:	
  1670  002E                     ?_EEPROMSaveNumber:	
  1671                           ; 0 bytes @ 0xE
  1672                           
  1673  002E                     EepromRead@data:	
  1674                           ; 1 bytes @ 0xE
  1675                           
  1676  002E                     EEPROMSaveNumber@nmbr:	
  1677                           ; 1 bytes @ 0xE
  1678                           
  1679                           
  1680                           ; 2 bytes @ 0xE
  1681  002E                     	ds	1
  1682  002F                     ?_EEPROMSearchNumber:	
  1683  002F                     EEPROMSearchNumber@nmbr:	
  1684                           ; 1 bytes @ 0xF
  1685                           
  1686                           
  1687                           ; 2 bytes @ 0xF
  1688  002F                     	ds	1
  1689  0030                     EEPROMSaveNumber@nmbrLenght:	
  1690                           
  1691                           ; 1 bytes @ 0x10
  1692  0030                     	ds	1
  1693  0031                     EEPROMSearchNumber@nmbrLenght:	
  1694  0031                     EEPROMSaveNumber@position:	
  1695                           ; 1 bytes @ 0x11
  1696                           
  1697                           
  1698                           ; 2 bytes @ 0x11
  1699  0031                     	ds	1
  1700  0032                     ??_EEPROMSearchNumber:	
  1701                           
  1702                           ; 0 bytes @ 0x12
  1703  0032                     	ds	1
  1704  0033                     ??_EEPROMSaveNumber:	
  1705                           
  1706                           ; 0 bytes @ 0x13
  1707  0033                     	ds	3
  1708  0036                     EEPROMSearchNumber@convNmbr:	
  1709                           
  1710                           ; 5 bytes @ 0x16
  1711  0036                     	ds	1
  1712  0037                     EEPROMSaveNumber@result:	
  1713                           
  1714                           ; 1 bytes @ 0x17
  1715  0037                     	ds	1
  1716  0038                     EEPROMSaveNumber@address:	
  1717                           
  1718                           ; 2 bytes @ 0x18
  1719  0038                     	ds	2
  1720  003A                     EEPROMSaveNumber@count:	
  1721                           
  1722                           ; 1 bytes @ 0x1A
  1723  003A                     	ds	1
  1724  003B                     EEPROMSaveNumber@value:	
  1725  003B                     EEPROMSearchNumber@value:	
  1726                           ; 1 bytes @ 0x1B
  1727                           
  1728                           
  1729                           ; 1 bytes @ 0x1B
  1730  003B                     	ds	1
  1731  003C                     EEPROMSearchNumber@aux:	
  1732                           
  1733                           ; 2 bytes @ 0x1C
  1734  003C                     	ds	2
  1735  003E                     EEPROMSearchNumber@result:	
  1736                           
  1737                           ; 1 bytes @ 0x1E
  1738  003E                     	ds	1
  1739  003F                     EEPROMSearchNumber@count:	
  1740                           
  1741                           ; 1 bytes @ 0x1F
  1742  003F                     	ds	1
  1743  0040                     ??_main:	
  1744                           
  1745                           ; 0 bytes @ 0x20
  1746  0040                     	ds	3
  1747                           
  1748                           	psect	maintext
  1749  0246                     __pmaintext:	
  1750 ;;
  1751 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1752 ;;
  1753 ;; *************** function _main *****************
  1754 ;; Defined at:
  1755 ;;		line 16 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;		None               void
  1762 ;; Registers used:
  1763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 17F/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1769 ;;      Params:         0       0       0       0
  1770 ;;      Locals:         0       0       0       0
  1771 ;;      Temps:          0       3       0       0
  1772 ;;      Totals:         0       3       0       0
  1773 ;;Total ram usage:        3 bytes
  1774 ;; Hardware stack levels required when called:    6
  1775 ;; This function calls:
  1776 ;;		_EEPROMEraseAll
  1777 ;;		_EEPROMSaveNumber
  1778 ;;		_EEPROMSearchNumber
  1779 ;;		_GPIOPortInit
  1780 ;;		_GPIORedLedBlink
  1781 ;;		_SIM800DeleteSms
  1782 ;;		_SIM800ReadSms
  1783 ;;		_SIM800SendSms
  1784 ;;		_SIM800init
  1785 ;;		_SYSTEMInit
  1786 ;;		_USARTClearSIM800L
  1787 ;;		_USARTInit
  1788 ;;		_USARTWriteLine
  1789 ;; This function is called by:
  1790 ;;		Startup code after reset
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _main
  1796  0246                     _main:	
  1797                           
  1798                           ;main.c: 18: SYSTEMInit(8);
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1802  0246  3008               	movlw	8
  1803  0247  318F  2773  3182   	fcall	_SYSTEMInit
  1804                           
  1805                           ;main.c: 19: USARTInit(115);
  1806  024A  3073               	movlw	115
  1807  024B  0020               	movlb	0	; select bank0
  1808  024C  00A4               	movwf	USARTInit@baud_rate
  1809  024D  3000               	movlw	0
  1810  024E  00A5               	movwf	USARTInit@baud_rate+1
  1811  024F  3187  2706  3182   	fcall	_USARTInit
  1812                           
  1813                           ;main.c: 20: GPIOPortInit();
  1814  0252  318F  271C  3182   	fcall	_GPIOPortInit
  1815                           
  1816                           ;main.c: 21: SIM800init();
  1817  0255  3186  2661  3182   	fcall	_SIM800init
  1818                           
  1819                           ;main.c: 23: EEPROMEraseAll();
  1820  0258  3184  2483  3182   	fcall	_EEPROMEraseAll
  1821                           
  1822                           ;main.c: 25: EEPROMSaveNumber("6141654818",10,10);
  1823  025B  3038               	movlw	low ((STR_8+3)| (0+32768))
  1824  025C  0020               	movlb	0	; select bank0
  1825  025D  00AE               	movwf	EEPROMSaveNumber@nmbr
  1826  025E  3085               	movlw	high ((STR_8+3)| (0+32768))
  1827  025F  00AF               	movwf	EEPROMSaveNumber@nmbr+1
  1828  0260  300A               	movlw	10
  1829  0261  00C0               	movwf	??_main
  1830  0262  0840               	movf	??_main,w
  1831  0263  00B0               	movwf	EEPROMSaveNumber@nmbrLenght
  1832  0264  300A               	movlw	10
  1833  0265  00B1               	movwf	EEPROMSaveNumber@position
  1834  0266  3000               	movlw	0
  1835  0267  00B2               	movwf	EEPROMSaveNumber@position+1
  1836  0268  3183  23E2  3182   	fcall	_EEPROMSaveNumber
  1837                           
  1838                           ;main.c: 26: EEPROMSaveNumber("6145136845",10,11);
  1839  026B  3043               	movlw	low (STR_2| (0+32768))
  1840  026C  0020               	movlb	0	; select bank0
  1841  026D  00AE               	movwf	EEPROMSaveNumber@nmbr
  1842  026E  3085               	movlw	high (STR_2| (0+32768))
  1843  026F  00AF               	movwf	EEPROMSaveNumber@nmbr+1
  1844  0270  300A               	movlw	10
  1845  0271  00C0               	movwf	??_main
  1846  0272  0840               	movf	??_main,w
  1847  0273  00B0               	movwf	EEPROMSaveNumber@nmbrLenght
  1848  0274  300B               	movlw	11
  1849  0275  00B1               	movwf	EEPROMSaveNumber@position
  1850  0276  3000               	movlw	0
  1851  0277  00B2               	movwf	EEPROMSaveNumber@position+1
  1852  0278  3183  23E2  3182   	fcall	_EEPROMSaveNumber
  1853                           
  1854                           ;main.c: 40: switch(task)
  1855  027B  2B05               	goto	l2201
  1856  027C                     l2211:	
  1857                           ;main.c: 41: {
  1858                           ;main.c: 42: case 0:
  1859                           
  1860                           
  1861                           ;main.c: 43: USARTClearSIM800L();
  1862  027C  3187  2750  3182   	fcall	_USARTClearSIM800L
  1863                           
  1864                           ;main.c: 44: break;
  1865  027F  2B05               	goto	l2201
  1866  0280                     l2213:	
  1867                           ;main.c: 45: case 1:
  1868                           
  1869                           
  1870                           ;main.c: 46: USARTWriteLine("ATH\r\n");
  1871  0280  307A               	movlw	low (STR_4| (0+32768))
  1872  0281  0020               	movlb	0	; select bank0
  1873  0282  00A7               	movwf	USARTWriteLine@str
  1874  0283  3085               	movlw	high (STR_4| (0+32768))
  1875  0284  00A8               	movwf	USARTWriteLine@str+1
  1876  0285  3184  24EE  3182   	fcall	_USARTWriteLine
  1877                           
  1878                           ;main.c: 47: if(EEPROMSearchNumber(SIM800L.cell,SIM800L.cell_lenght))
  1879  0288  3055               	movlw	85
  1880  0289  0020               	movlb	0	; select bank0
  1881  028A  00AF               	movwf	EEPROMSearchNumber@nmbr
  1882  028B  3020               	movlw	32
  1883  028C  00B0               	movwf	EEPROMSearchNumber@nmbr+1
  1884  028D  3052               	movlw	82
  1885  028E  0086               	movwf	6
  1886  028F  3020               	movlw	32
  1887  0290  0087               	movwf	7
  1888  0291  3152               	addfsr 1,18
  1889  0292  0801               	movf	1,w
  1890  0293  00C0               	movwf	??_main
  1891  0294  0840               	movf	??_main,w
  1892  0295  00B1               	movwf	EEPROMSearchNumber@nmbrLenght
  1893  0296  3183  2339  3182   	fcall	_EEPROMSearchNumber
  1894  0299  3A00               	xorlw	0
  1895  029A  1903               	skipnz
  1896  029B  2AB4               	goto	l2221
  1897                           
  1898                           ;main.c: 48: {
  1899                           ;main.c: 49: LATCbits.LATC2=!LATCbits.LATC2;
  1900  029C  0022               	movlb	2	; select bank2
  1901  029D  190E               	btfsc	14,2	;volatile
  1902  029E  2AA2               	goto	u1650
  1903  029F  0022               	movlb	2	; select bank2
  1904  02A0  150E               	bsf	14,2	;volatile
  1905  02A1  2AA4               	goto	u1664
  1906  02A2                     u1650:	
  1907  02A2  0022               	movlb	2	; select bank2
  1908  02A3  110E               	bcf	14,2	;volatile
  1909  02A4                     u1664:	
  1910                           
  1911                           ;main.c: 50: LATAbits.LATA4=!LATAbits.LATA4;
  1912  02A4  1A0C               	btfsc	12,4	;volatile
  1913  02A5  2AA9               	goto	u1670
  1914  02A6  0022               	movlb	2	; select bank2
  1915  02A7  160C               	bsf	12,4	;volatile
  1916  02A8  2AAB               	goto	l2219
  1917  02A9                     u1670:	
  1918  02A9  0022               	movlb	2	; select bank2
  1919  02AA  120C               	bcf	12,4	;volatile
  1920  02AB                     l2219:	
  1921                           
  1922                           ;main.c: 51: SIM800SendSms(SIM800L.cell,SIM800L.csq);
  1923  02AB  3055               	movlw	85
  1924  02AC  0020               	movlb	0	; select bank0
  1925  02AD  00A9               	movwf	SIM800SendSms@nmbr
  1926  02AE  3020               	movlw	32
  1927  02AF  00AA               	movwf	SIM800SendSms@nmbr+1
  1928  02B0  30EB               	movlw	235
  1929  02B1  00AB               	movwf	SIM800SendSms@msg
  1930  02B2  3020               	movlw	32
  1931  02B3  2AFF               	goto	L1
  1932  02B4                     l2221:	
  1933                           ;main.c: 52: }
  1934                           
  1935                           
  1936                           ;main.c: 53: else
  1937                           ;main.c: 54: {
  1938                           ;main.c: 55: GPIORedLedBlink(5);
  1939  02B4  3005               	movlw	5
  1940  02B5  3184  24C0  3182   	fcall	_GPIORedLedBlink
  1941                           
  1942                           ;main.c: 56: SIM800SendSms(SIM800L.cell, "Received-Unauthorized");}
  1943  02B8  3055               	movlw	85
  1944  02B9  0020               	movlb	0	; select bank0
  1945  02BA  00A9               	movwf	SIM800SendSms@nmbr
  1946  02BB  3020               	movlw	32
  1947  02BC  00AA               	movwf	SIM800SendSms@nmbr+1
  1948  02BD  3000               	movlw	low (STR_5| (0+32768))
  1949  02BE  00AB               	movwf	SIM800SendSms@msg
  1950  02BF  3085               	movlw	high (STR_5| (0+32768))
  1951  02C0  2AFF               	goto	L1
  1952  02C1                     l2227:	
  1953                           ;main.c: 59: case 2:
  1954                           
  1955                           ;main.c: 58: break;
  1956                           
  1957                           ;main.c: 57: task=0;
  1958                           
  1959                           
  1960                           ;main.c: 60: for(i=0;i<10;i++){LATCbits.LATC1=!LATCbits.LATC1; _delay((unsigned long)((2
      +                          00)*(8000000/4000.0)));}
  1961  02C1  01C9               	clrf	_i
  1962  02C2  300A               	movlw	10
  1963  02C3  0249               	subwf	_i,w
  1964  02C4  1803               	btfsc	3,0
  1965  02C5  2AE4               	goto	l2239
  1966  02C6                     l58:	
  1967  02C6  0022               	movlb	2	; select bank2
  1968  02C7  188E               	btfsc	14,1	;volatile
  1969  02C8  2ACC               	goto	u1700
  1970  02C9  0022               	movlb	2	; select bank2
  1971  02CA  148E               	bsf	14,1	;volatile
  1972  02CB  2ACE               	goto	l2233
  1973  02CC                     u1700:	
  1974  02CC  0022               	movlb	2	; select bank2
  1975  02CD  108E               	bcf	14,1	;volatile
  1976  02CE                     l2233:	
  1977  02CE  3003               	movlw	3
  1978  02CF  0020               	movlb	0	; select bank0
  1979  02D0  00C2               	movwf	??_main+2
  1980  02D1  3008               	movlw	8
  1981  02D2  00C1               	movwf	??_main+1
  1982  02D3  3078               	movlw	120
  1983  02D4  00C0               	movwf	??_main
  1984  02D5                     u2197:	
  1985  02D5  0BC0               	decfsz	??_main,f
  1986  02D6  2AD5               	goto	u2197
  1987  02D7  0BC1               	decfsz	??_main+1,f
  1988  02D8  2AD5               	goto	u2197
  1989  02D9  0BC2               	decfsz	??_main+2,f
  1990  02DA  2AD5               	goto	u2197
  1991  02DB  3001               	movlw	1
  1992  02DC  0020               	movlb	0	; select bank0
  1993  02DD  00C0               	movwf	??_main
  1994  02DE  0840               	movf	??_main,w
  1995  02DF  07C9               	addwf	_i,f
  1996  02E0  300A               	movlw	10
  1997  02E1  0249               	subwf	_i,w
  1998  02E2  1C03               	skipc
  1999  02E3  2AC6               	goto	l58
  2000  02E4                     l2239:	
  2001                           
  2002                           ;main.c: 61: SIM800ReadSms(SIM800L.smsmem);
  2003  02E4  3066               	movlw	102
  2004  02E5  00A9               	movwf	SIM800ReadSms@mem
  2005  02E6  3020               	movlw	32
  2006  02E7  00AA               	movwf	SIM800ReadSms@mem+1
  2007  02E8  3187  2796  3182   	fcall	_SIM800ReadSms
  2008                           
  2009                           ;main.c: 62: SIM800DeleteSms("1", "4");
  2010  02EB  308E               	movlw	low (STR_6| (0+32768))
  2011  02EC  0020               	movlb	0	; select bank0
  2012  02ED  00A9               	movwf	SIM800DeleteSms@index
  2013  02EE  3085               	movlw	high (STR_6| (0+32768))
  2014  02EF  00AA               	movwf	SIM800DeleteSms@index+1
  2015  02F0  3090               	movlw	low (STR_7| (0+32768))
  2016  02F1  00AB               	movwf	SIM800DeleteSms@flag
  2017  02F2  3085               	movlw	high (STR_7| (0+32768))
  2018  02F3  00AC               	movwf	SIM800DeleteSms@flag+1
  2019  02F4  3186  26BA  3182   	fcall	_SIM800DeleteSms
  2020  02F7  2B03               	goto	l2245
  2021  02F8                     l2243:	
  2022                           ;main.c: 65: case 3:
  2023                           
  2024                           ;main.c: 64: break;
  2025                           
  2026                           ;main.c: 63: task=0;
  2027                           
  2028                           
  2029                           ;main.c: 66: SIM800SendSms("+526141654818", "Command received");
  2030  02F8  3035               	movlw	low (STR_8| (0+32768))
  2031  02F9  00A9               	movwf	SIM800SendSms@nmbr
  2032  02FA  3085               	movlw	high (STR_8| (0+32768))
  2033  02FB  00AA               	movwf	SIM800SendSms@nmbr+1
  2034  02FC  3016               	movlw	low (STR_9| (0+32768))
  2035  02FD  00AB               	movwf	SIM800SendSms@msg
  2036  02FE  3085               	movlw	high (STR_9| (0+32768))
  2037  02FF                     L1:	
  2038  02FF  00AC               	movwf	SIM800SendSms@msg+1
  2039  0300  3185  2592  3182   	fcall	_SIM800SendSms
  2040  0303                     l2245:	
  2041                           
  2042                           ;main.c: 67: task=0;
  2043  0303  0020               	movlb	0	; select bank0
  2044  0304  01CA               	clrf	_task
  2045  0305                     l2201:	
  2046                           ;main.c: 28: while(1)
  2047                           
  2048                           ;main.c: 71: }
  2049                           
  2050                           ;main.c: 70: break;
  2051                           
  2052                           ;main.c: 69: default:
  2053                           
  2054                           ;main.c: 68: break;
  2055                           
  2056                           
  2057                           ;main.c: 29: {
  2058                           ;main.c: 30: (GIE = 1);
  2059  0305  178B               	bsf	11,7	;volatile
  2060                           
  2061                           ;main.c: 31: RCSTAbits.CREN=1;
  2062  0306  0023               	movlb	3	; select bank3
  2063  0307  161D               	bsf	29,4	;volatile
  2064                           
  2065                           ;main.c: 33: USARTWriteLine("AT+CSQ\r\n");
  2066  0308  306A               	movlw	low (STR_3| (0+32768))
  2067  0309  0020               	movlb	0	; select bank0
  2068  030A  00A7               	movwf	USARTWriteLine@str
  2069  030B  3085               	movlw	high (STR_3| (0+32768))
  2070  030C  00A8               	movwf	USARTWriteLine@str+1
  2071  030D  3184  24EE  3182   	fcall	_USARTWriteLine
  2072                           
  2073                           ;main.c: 34: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2074  0310  3015               	movlw	21
  2075  0311  0020               	movlb	0	; select bank0
  2076  0312  00C2               	movwf	??_main+2
  2077  0313  304B               	movlw	75
  2078  0314  00C1               	movwf	??_main+1
  2079  0315  30D1               	movlw	209
  2080  0316  00C0               	movwf	??_main
  2081  0317                     u2187:	
  2082  0317  0BC0               	decfsz	??_main,f
  2083  0318  2B17               	goto	u2187
  2084  0319  0BC1               	decfsz	??_main+1,f
  2085  031A  2B17               	goto	u2187
  2086  031B  0BC2               	decfsz	??_main+2,f
  2087  031C  2B17               	goto	u2187
  2088  031D  0000               	nop
  2089  031E                     l2209:	
  2090                           ;main.c: 36: while(SIM800L.busy==1);
  2091                           
  2092  031E  3052               	movlw	82
  2093  031F  0086               	movwf	6
  2094  0320  3020               	movlw	32
  2095  0321  0087               	movwf	7
  2096  0322  0801               	movf	1,w
  2097  0323  3A01               	xorlw	1
  2098  0324  1903               	skipnz
  2099  0325  2B1E               	goto	l2209
  2100                           
  2101                           ;main.c: 37: (GIE = 0);
  2102  0326  138B               	bcf	11,7	;volatile
  2103                           
  2104                           ;main.c: 38: RCSTAbits.CREN=0;
  2105  0327  0023               	movlb	3	; select bank3
  2106  0328  121D               	bcf	29,4	;volatile
  2107  0329  0020               	movlb	0	; select bank0
  2108  032A  084A               	movf	_task,w
  2109                           
  2110                           ; Switch size 1, requested type "space"
  2111                           ; Number of cases is 4, Range of values is 0 to 3
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte           13     7 (average)
  2115                           ; direct_byte           14     6 (fixed)
  2116                           ; jumptable            260     6 (fixed)
  2117                           ;	Chosen strategy is simple_byte
  2118  032B  3A00               	xorlw	0	; case 0
  2119  032C  1903               	skipnz
  2120  032D  2A7C               	goto	l2211
  2121  032E  3A01               	xorlw	1	; case 1
  2122  032F  1903               	skipnz
  2123  0330  2A80               	goto	l2213
  2124  0331  3A03               	xorlw	3	; case 2
  2125  0332  1903               	skipnz
  2126  0333  2AC1               	goto	l2227
  2127  0334  3A01               	xorlw	1	; case 3
  2128  0335  1903               	skipnz
  2129  0336  2AF8               	goto	l2243
  2130  0337  2B05               	goto	l2201
  2131  0338  2B05               	goto	l2201
  2132  0339                     __end_of_main:	
  2133                           
  2134                           	psect	text1
  2135  0706                     __ptext1:	
  2136 ;; *************** function _USARTInit *****************
  2137 ;; Defined at:
  2138 ;;		line 6 in file "usart.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  baud_rate       2    4[BANK0 ] unsigned int 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;		None               void
  2145 ;; Registers used:
  2146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2152 ;;      Params:         0       2       0       0
  2153 ;;      Locals:         0       0       0       0
  2154 ;;      Temps:          0       0       0       0
  2155 ;;      Totals:         0       2       0       0
  2156 ;;Total ram usage:        2 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _USARTInit
  2168  0706                     _USARTInit:	
  2169                           
  2170                           ;usart.c: 9: switch(baud_rate)
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  2174  0706  2F13               	goto	l1827
  2175  0707                     l1815:	
  2176                           ;usart.c: 10: {
  2177                           ;usart.c: 11: case 9600:
  2178                           
  2179                           
  2180                           ;usart.c: 12: SPBRG=51;
  2181  0707  3033               	movlw	51
  2182  0708  2F10               	goto	L5
  2183  0709                     l1817:	
  2184                           ;usart.c: 14: case 19200:
  2185                           
  2186                           ;usart.c: 13: break;
  2187                           
  2188                           
  2189                           ;usart.c: 15: SPBRG=64;
  2190  0709  3040               	movlw	64
  2191  070A  2F10               	goto	L5
  2192  070B                     l1819:	
  2193                           ;usart.c: 17: case 28800:
  2194                           
  2195                           ;usart.c: 16: break;
  2196                           
  2197                           
  2198                           ;usart.c: 18: SPBRG=42;
  2199  070B  302A               	movlw	42
  2200  070C  2F10               	goto	L5
  2201  070D                     l1821:	
  2202                           ;usart.c: 20: case 33600:
  2203                           
  2204                           ;usart.c: 19: break;
  2205                           
  2206                           
  2207                           ;usart.c: 21: SPBRG=36;
  2208  070D  3024               	movlw	36
  2209  070E  2F10               	goto	L5
  2210  070F                     l1823:	
  2211                           ;usart.c: 23: case 115:
  2212                           
  2213                           ;usart.c: 22: break;
  2214                           
  2215                           
  2216                           ;usart.c: 24: SPBRG=16;
  2217  070F  3010               	movlw	16
  2218  0710                     L5:	
  2219  0710  0023               	movlb	3	; select bank3
  2220  0711  009B               	movwf	27	;volatile
  2221                           
  2222                           ;usart.c: 26: }
  2223                           
  2224                           ;usart.c: 25: break;
  2225  0712  2F3E               	goto	l292
  2226  0713                     l1827:	
  2227                           
  2228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  2229                           ; Switch size 1, requested type "space"
  2230                           ; Number of cases is 5, Range of values is 0 to 131
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte           16     9 (average)
  2234                           ; jumptable            260     6 (fixed)
  2235                           ;	Chosen strategy is simple_byte
  2236  0713  0020               	movlb	0	; select bank0
  2237  0714  0825               	movf	USARTInit@baud_rate+1,w
  2238  0715  3A00               	xorlw	0	; case 0
  2239  0716  1903               	skipnz
  2240  0717  2F25               	goto	l2547
  2241  0718  3A25               	xorlw	37	; case 37
  2242  0719  1903               	skipnz
  2243  071A  2F2A               	goto	l2549
  2244  071B  3A6E               	xorlw	110	; case 75
  2245  071C  1903               	skipnz
  2246  071D  2F2F               	goto	l2551
  2247  071E  3A3B               	xorlw	59	; case 112
  2248  071F  1903               	skipnz
  2249  0720  2F34               	goto	l2553
  2250  0721  3AF3               	xorlw	243	; case 131
  2251  0722  1903               	skipnz
  2252  0723  2F39               	goto	l2555
  2253  0724  2F3E               	goto	l292
  2254  0725                     l2547:	
  2255                           
  2256                           ; Switch size 1, requested type "space"
  2257                           ; Number of cases is 1, Range of values is 115 to 115
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            4     3 (average)
  2261                           ; direct_byte           11     9 (fixed)
  2262                           ; jumptable            263     9 (fixed)
  2263                           ;	Chosen strategy is simple_byte
  2264  0725  0824               	movf	USARTInit@baud_rate,w
  2265  0726  3A73               	xorlw	115	; case 115
  2266  0727  1903               	skipnz
  2267  0728  2F0F               	goto	l1823
  2268  0729  2F3E               	goto	l292
  2269  072A                     l2549:	
  2270                           
  2271                           ; Switch size 1, requested type "space"
  2272                           ; Number of cases is 1, Range of values is 128 to 128
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte            4     3 (average)
  2276                           ; direct_byte           11     9 (fixed)
  2277                           ; jumptable            263     9 (fixed)
  2278                           ;	Chosen strategy is simple_byte
  2279  072A  0824               	movf	USARTInit@baud_rate,w
  2280  072B  3A80               	xorlw	128	; case 128
  2281  072C  1903               	skipnz
  2282  072D  2F07               	goto	l1815
  2283  072E  2F3E               	goto	l292
  2284  072F                     l2551:	
  2285                           
  2286                           ; Switch size 1, requested type "space"
  2287                           ; Number of cases is 1, Range of values is 0 to 0
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            4     3 (average)
  2291                           ; direct_byte            8     6 (fixed)
  2292                           ; jumptable            260     6 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  072F  0824               	movf	USARTInit@baud_rate,w
  2295  0730  3A00               	xorlw	0	; case 0
  2296  0731  1903               	skipnz
  2297  0732  2F09               	goto	l1817
  2298  0733  2F3E               	goto	l292
  2299  0734                     l2553:	
  2300                           
  2301                           ; Switch size 1, requested type "space"
  2302                           ; Number of cases is 1, Range of values is 128 to 128
  2303                           ; switch strategies available:
  2304                           ; Name         Instructions Cycles
  2305                           ; simple_byte            4     3 (average)
  2306                           ; direct_byte           11     9 (fixed)
  2307                           ; jumptable            263     9 (fixed)
  2308                           ;	Chosen strategy is simple_byte
  2309  0734  0824               	movf	USARTInit@baud_rate,w
  2310  0735  3A80               	xorlw	128	; case 128
  2311  0736  1903               	skipnz
  2312  0737  2F0B               	goto	l1819
  2313  0738  2F3E               	goto	l292
  2314  0739                     l2555:	
  2315                           
  2316                           ; Switch size 1, requested type "space"
  2317                           ; Number of cases is 1, Range of values is 64 to 64
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            4     3 (average)
  2321                           ; direct_byte           11     9 (fixed)
  2322                           ; jumptable            263     9 (fixed)
  2323                           ;	Chosen strategy is simple_byte
  2324  0739  0824               	movf	USARTInit@baud_rate,w
  2325  073A  3A40               	xorlw	64	; case 64
  2326  073B  1903               	skipnz
  2327  073C  2F0D               	goto	l1821
  2328  073D  2F3E               	goto	l292
  2329  073E                     l292:	
  2330                           
  2331                           ;usart.c: 28: APFCON0bits.RXDTSEL=1;
  2332  073E  0022               	movlb	2	; select bank2
  2333  073F  179D               	bsf	29,7	;volatile
  2334                           
  2335                           ;usart.c: 29: APFCON0bits.TXCKSEL=1;
  2336  0740  151D               	bsf	29,2	;volatile
  2337                           
  2338                           ;usart.c: 30: BAUDCONbits.BRG16=1;
  2339  0741  0023               	movlb	3	; select bank3
  2340  0742  159F               	bsf	31,3	;volatile
  2341                           
  2342                           ;usart.c: 32: TXSTAbits.TX9=0;
  2343  0743  131E               	bcf	30,6	;volatile
  2344                           
  2345                           ;usart.c: 33: TXSTAbits.TXEN=1;
  2346  0744  169E               	bsf	30,5	;volatile
  2347                           
  2348                           ;usart.c: 34: TXSTAbits.SYNC=0;
  2349  0745  121E               	bcf	30,4	;volatile
  2350                           
  2351                           ;usart.c: 35: TXSTAbits.BRGH=1;
  2352  0746  151E               	bsf	30,2	;volatile
  2353                           
  2354                           ;usart.c: 38: RCSTAbits.SPEN=1;
  2355  0747  179D               	bsf	29,7	;volatile
  2356                           
  2357                           ;usart.c: 39: RCSTAbits.RX9=0;
  2358  0748  131D               	bcf	29,6	;volatile
  2359                           
  2360                           ;usart.c: 40: RCSTAbits.CREN=1;
  2361  0749  161D               	bsf	29,4	;volatile
  2362                           
  2363                           ;usart.c: 41: RCSTAbits.ADDEN=0;
  2364  074A  119D               	bcf	29,3	;volatile
  2365                           
  2366                           ;usart.c: 44: RCIE=1;
  2367  074B  0021               	movlb	1	; select bank1
  2368  074C  1691               	bsf	17,5	;volatile
  2369                           
  2370                           ;usart.c: 45: PEIE=1;
  2371  074D  170B               	bsf	11,6	;volatile
  2372                           
  2373                           ;usart.c: 47: (GIE = 1);
  2374  074E  178B               	bsf	11,7	;volatile
  2375  074F  0008               	return
  2376  0750                     __end_of_USARTInit:	
  2377                           
  2378                           	psect	text2
  2379  0750                     __ptext2:	
  2380 ;; *************** function _USARTClearSIM800L *****************
  2381 ;; Defined at:
  2382 ;;		line 190 in file "usart.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  i               1    8[BANK0 ] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;		None               void
  2389 ;; Registers used:
  2390 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2396 ;;      Params:         0       0       0       0
  2397 ;;      Locals:         0       1       0       0
  2398 ;;      Temps:          0       4       0       0
  2399 ;;      Totals:         0       5       0       0
  2400 ;;Total ram usage:        5 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    2
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function _USARTClearSIM800L
  2412  0750                     _USARTClearSIM800L:	
  2413                           
  2414                           ;usart.c: 192: uint8_t i;
  2415                           ;usart.c: 193: SIM800L.busy=0;
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _USARTClearSIM800L: [wreg+fsr1l+fsr1h+status,2+status,0]
  2419  0750  3052               	movlw	82
  2420  0751  0086               	movwf	6
  2421  0752  3020               	movlw	32
  2422  0753  0087               	movwf	7
  2423  0754  3000               	movlw	0
  2424  0755  3FC0               	movwi [0]fsr1
  2425                           
  2426                           ;usart.c: 194: SIM800L.uncomplete=0;
  2427  0756  3052               	movlw	82
  2428  0757  0086               	movwf	6
  2429  0758  3020               	movlw	32
  2430  0759  0087               	movwf	7
  2431  075A  3141               	addfsr 1,1
  2432  075B  0181               	clrf	1
  2433                           
  2434                           ;usart.c: 195: SIM800L.cell_lenght=0;
  2435  075C  3052               	movlw	82
  2436  075D  0086               	movwf	6
  2437  075E  3020               	movlw	32
  2438  075F  0087               	movwf	7
  2439  0760  3152               	addfsr 1,18
  2440  0761  0181               	clrf	1
  2441                           
  2442                           ;usart.c: 196: for(i=0;i<15;i++){SIM800L.cell[i]='\0';}
  2443  0762  0020               	movlb	0	; select bank0
  2444  0763  01A8               	clrf	USARTClearSIM800L@i
  2445  0764  300F               	movlw	15
  2446  0765  0228               	subwf	USARTClearSIM800L@i,w
  2447  0766  1803               	btfsc	3,0
  2448  0767  2F7E               	goto	l1965
  2449  0768                     l1959:	
  2450  0768  0828               	movf	USARTClearSIM800L@i,w
  2451  0769  00A4               	movwf	??_USARTClearSIM800L
  2452  076A  01A5               	clrf	??_USARTClearSIM800L+1
  2453  076B  3055               	movlw	85
  2454  076C  00A6               	movwf	??_USARTClearSIM800L+2
  2455  076D  3020               	movlw	32
  2456  076E  00A7               	movwf	??_USARTClearSIM800L+3
  2457  076F  0824               	movf	??_USARTClearSIM800L,w
  2458  0770  0726               	addwf	??_USARTClearSIM800L+2,w
  2459  0771  0086               	movwf	6
  2460  0772  0825               	movf	??_USARTClearSIM800L+1,w
  2461  0773  3D27               	addwfc	??_USARTClearSIM800L+3,w
  2462  0774  0087               	movwf	7
  2463  0775  0181               	clrf	1
  2464  0776  3001               	movlw	1
  2465  0777  00A4               	movwf	??_USARTClearSIM800L
  2466  0778  0824               	movf	??_USARTClearSIM800L,w
  2467  0779  07A8               	addwf	USARTClearSIM800L@i,f
  2468  077A  300F               	movlw	15
  2469  077B  0228               	subwf	USARTClearSIM800L@i,w
  2470  077C  1C03               	skipc
  2471  077D  2F68               	goto	l1959
  2472  077E                     l1965:	
  2473                           
  2474                           ;usart.c: 197: for(i=0;i<128;i++) SIM800L.buffer[i]=0;
  2475  077E  01A8               	clrf	USARTClearSIM800L@i
  2476  077F                     L6:	
  2477  077F  3080               	movlw	128
  2478  0780  0228               	subwf	USARTClearSIM800L@i,w
  2479  0781  1803               	btfsc	3,0
  2480  0782  0008               	return
  2481  0783  0828               	movf	USARTClearSIM800L@i,w
  2482  0784  00A4               	movwf	??_USARTClearSIM800L
  2483  0785  01A5               	clrf	??_USARTClearSIM800L+1
  2484  0786  306B               	movlw	107
  2485  0787  00A6               	movwf	??_USARTClearSIM800L+2
  2486  0788  3020               	movlw	32
  2487  0789  00A7               	movwf	??_USARTClearSIM800L+3
  2488  078A  0824               	movf	??_USARTClearSIM800L,w
  2489  078B  0726               	addwf	??_USARTClearSIM800L+2,w
  2490  078C  0086               	movwf	6
  2491  078D  0825               	movf	??_USARTClearSIM800L+1,w
  2492  078E  3D27               	addwfc	??_USARTClearSIM800L+3,w
  2493  078F  0087               	movwf	7
  2494  0790  0181               	clrf	1
  2495  0791  3001               	movlw	1
  2496  0792  00A4               	movwf	??_USARTClearSIM800L
  2497  0793  0824               	movf	??_USARTClearSIM800L,w
  2498  0794  07A8               	addwf	USARTClearSIM800L@i,f
  2499  0795  2F7F               	goto	L6
  2500  0796                     __end_of_USARTClearSIM800L:	
  2501                           
  2502                           	psect	text3
  2503  0F73                     __ptext3:	
  2504 ;; *************** function _SYSTEMInit *****************
  2505 ;; Defined at:
  2506 ;;		line 5 in file "system.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  freq            1    wreg     unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  freq            1    4[BANK0 ] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;		None               void
  2513 ;; Registers used:
  2514 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2520 ;;      Params:         0       0       0       0
  2521 ;;      Locals:         0       1       0       0
  2522 ;;      Temps:          0       0       0       0
  2523 ;;      Totals:         0       1       0       0
  2524 ;;Total ram usage:        1 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    2
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _SYSTEMInit
  2536  0F73                     _SYSTEMInit:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _SYSTEMInit: [wreg-fsr0h+status,2+status,0]
  2540                           ;SYSTEMInit@freq stored from wreg
  2541  0F73  0020               	movlb	0	; select bank0
  2542  0F74  00A4               	movwf	SYSTEMInit@freq
  2543                           
  2544                           ;system.c: 7: switch(freq)
  2545  0F75  2F82               	goto	l1811
  2546  0F76                     l1803:	
  2547                           ;system.c: 8: {
  2548                           ;system.c: 9: case 4:
  2549                           
  2550                           
  2551                           ;system.c: 10: OSCCON=0b01101010;
  2552  0F76  306A               	movlw	106
  2553  0F77  0021               	movlb	1	; select bank1
  2554  0F78  0099               	movwf	25	;volatile
  2555                           
  2556                           ;system.c: 11: break;
  2557  0F79  0008               	return
  2558  0F7A                     l1805:	
  2559                           ;system.c: 12: case 8:
  2560                           
  2561                           
  2562                           ;system.c: 13: OSCCON=0b01110010;
  2563  0F7A  3072               	movlw	114
  2564  0F7B  0021               	movlb	1	; select bank1
  2565  0F7C  0099               	movwf	25	;volatile
  2566                           
  2567                           ;system.c: 14: break;
  2568  0F7D  0008               	return
  2569  0F7E                     l1807:	
  2570                           ;system.c: 15: case 16:
  2571                           
  2572                           
  2573                           ;system.c: 16: OSCCON=0b01111010;
  2574  0F7E  307A               	movlw	122
  2575  0F7F  0021               	movlb	1	; select bank1
  2576  0F80  0099               	movwf	25	;volatile
  2577                           
  2578                           ;system.c: 20: }
  2579                           
  2580                           ;system.c: 19: break;
  2581                           
  2582                           ;system.c: 18: default:
  2583                           
  2584                           ;system.c: 17: break;
  2585  0F81  0008               	return
  2586  0F82                     l1811:	
  2587  0F82  0020               	movlb	0	; select bank0
  2588  0F83  0824               	movf	SYSTEMInit@freq,w
  2589                           
  2590                           ; Switch size 1, requested type "space"
  2591                           ; Number of cases is 3, Range of values is 4 to 16
  2592                           ; switch strategies available:
  2593                           ; Name         Instructions Cycles
  2594                           ; simple_byte           10     6 (average)
  2595                           ; direct_byte           35     9 (fixed)
  2596                           ; jumptable            263     9 (fixed)
  2597                           ;	Chosen strategy is simple_byte
  2598  0F84  3A04               	xorlw	4	; case 4
  2599  0F85  1903               	skipnz
  2600  0F86  2F76               	goto	l1803
  2601  0F87  3A0C               	xorlw	12	; case 8
  2602  0F88  1903               	skipnz
  2603  0F89  2F7A               	goto	l1805
  2604  0F8A  3A18               	xorlw	24	; case 16
  2605  0F8B  1903               	skipnz
  2606  0F8C  2F7E               	goto	l1807
  2607  0F8D  2F8E               	goto	l255
  2608  0F8E                     l255:	
  2609  0F8E  0008               	return
  2610  0F8F                     __end_of_SYSTEMInit:	
  2611                           
  2612                           	psect	text4
  2613  0661                     __ptext4:	
  2614 ;; *************** function _SIM800init *****************
  2615 ;; Defined at:
  2616 ;;		line 7 in file "sim800l.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      unsigned char 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2630 ;;      Params:         0       0       0       0
  2631 ;;      Locals:         0       0       0       0
  2632 ;;      Temps:          0       3       0       0
  2633 ;;      Totals:         0       3       0       0
  2634 ;;Total ram usage:        3 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    5
  2637 ;; This function calls:
  2638 ;;		_USARTWriteLine
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _SIM800init
  2646  0661                     _SIM800init:	
  2647                           
  2648                           ;sim800l.c: 9: LATCbits.LATC6=1;
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in _SIM800init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2652  0661  0022               	movlb	2	; select bank2
  2653  0662  170E               	bsf	14,6	;volatile
  2654                           
  2655                           ;sim800l.c: 10: _delay((unsigned long)((10)*(8000000/4000.0)));
  2656  0663  301A               	movlw	26
  2657  0664  0020               	movlb	0	; select bank0
  2658  0665  00AA               	movwf	??_SIM800init+1
  2659  0666  30F8               	movlw	248
  2660  0667  00A9               	movwf	??_SIM800init
  2661  0668                     u2207:	
  2662  0668  0BA9               	decfsz	??_SIM800init,f
  2663  0669  2E68               	goto	u2207
  2664  066A  0BAA               	decfsz	??_SIM800init+1,f
  2665  066B  2E68               	goto	u2207
  2666  066C  0000               	nop
  2667                           
  2668                           ;sim800l.c: 11: LATCbits.LATC6=0;
  2669  066D  0022               	movlb	2	; select bank2
  2670  066E  130E               	bcf	14,6	;volatile
  2671                           
  2672                           ;sim800l.c: 12: _delay((unsigned long)((500)*(8000000/4000.0)));
  2673  066F  3006               	movlw	6
  2674  0670  0020               	movlb	0	; select bank0
  2675  0671  00AB               	movwf	??_SIM800init+2
  2676  0672  3013               	movlw	19
  2677  0673  00AA               	movwf	??_SIM800init+1
  2678  0674  30B1               	movlw	177
  2679  0675  00A9               	movwf	??_SIM800init
  2680  0676                     u2217:	
  2681  0676  0BA9               	decfsz	??_SIM800init,f
  2682  0677  2E76               	goto	u2217
  2683  0678  0BAA               	decfsz	??_SIM800init+1,f
  2684  0679  2E76               	goto	u2217
  2685  067A  0BAB               	decfsz	??_SIM800init+2,f
  2686  067B  2E76               	goto	u2217
  2687  067C  3200               	nop2
  2688                           
  2689                           ;sim800l.c: 13: LATCbits.LATC6=1;
  2690  067D  0022               	movlb	2	; select bank2
  2691  067E  170E               	bsf	14,6	;volatile
  2692                           
  2693                           ;sim800l.c: 14: _delay((unsigned long)((10000)*(8000000/4000.0)));
  2694  067F  3066               	movlw	102
  2695  0680  0020               	movlb	0	; select bank0
  2696  0681  00AB               	movwf	??_SIM800init+2
  2697  0682  3077               	movlw	119
  2698  0683  00AA               	movwf	??_SIM800init+1
  2699  0684  3024               	movlw	36
  2700  0685  00A9               	movwf	??_SIM800init
  2701  0686                     u2227:	
  2702  0686  0BA9               	decfsz	??_SIM800init,f
  2703  0687  2E86               	goto	u2227
  2704  0688  0BAA               	decfsz	??_SIM800init+1,f
  2705  0689  2E86               	goto	u2227
  2706  068A  0BAB               	decfsz	??_SIM800init+2,f
  2707  068B  2E86               	goto	u2227
  2708  068C  0000               	nop
  2709                           
  2710                           ;sim800l.c: 15: USARTWriteLine("AT\r\n");
  2711  068D  3080               	movlw	low (STR_10| (0+32768))
  2712  068E  0020               	movlb	0	; select bank0
  2713  068F  00A7               	movwf	USARTWriteLine@str
  2714  0690  3085               	movlw	high (STR_10| (0+32768))
  2715  0691  00A8               	movwf	USARTWriteLine@str+1
  2716  0692  3184  24EE  3186   	fcall	_USARTWriteLine
  2717                           
  2718                           ;sim800l.c: 16: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2719  0695  3015               	movlw	21
  2720  0696  0020               	movlb	0	; select bank0
  2721  0697  00AB               	movwf	??_SIM800init+2
  2722  0698  304B               	movlw	75
  2723  0699  00AA               	movwf	??_SIM800init+1
  2724  069A  30D1               	movlw	209
  2725  069B  00A9               	movwf	??_SIM800init
  2726  069C                     u2237:	
  2727  069C  0BA9               	decfsz	??_SIM800init,f
  2728  069D  2E9C               	goto	u2237
  2729  069E  0BAA               	decfsz	??_SIM800init+1,f
  2730  069F  2E9C               	goto	u2237
  2731  06A0  0BAB               	decfsz	??_SIM800init+2,f
  2732  06A1  2E9C               	goto	u2237
  2733  06A2  0000               	nop
  2734                           
  2735                           ;sim800l.c: 17: USARTWriteLine("ATE0\r\n");
  2736  06A3  3073               	movlw	low (STR_11| (0+32768))
  2737  06A4  0020               	movlb	0	; select bank0
  2738  06A5  00A7               	movwf	USARTWriteLine@str
  2739  06A6  3085               	movlw	high (STR_11| (0+32768))
  2740  06A7  00A8               	movwf	USARTWriteLine@str+1
  2741  06A8  3184  24EE  3186   	fcall	_USARTWriteLine
  2742                           
  2743                           ;sim800l.c: 18: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2744  06AB  3015               	movlw	21
  2745  06AC  0020               	movlb	0	; select bank0
  2746  06AD  00AB               	movwf	??_SIM800init+2
  2747  06AE  304B               	movlw	75
  2748  06AF  00AA               	movwf	??_SIM800init+1
  2749  06B0  30D1               	movlw	209
  2750  06B1  00A9               	movwf	??_SIM800init
  2751  06B2                     u2247:	
  2752  06B2  0BA9               	decfsz	??_SIM800init,f
  2753  06B3  2EB2               	goto	u2247
  2754  06B4  0BAA               	decfsz	??_SIM800init+1,f
  2755  06B5  2EB2               	goto	u2247
  2756  06B6  0BAB               	decfsz	??_SIM800init+2,f
  2757  06B7  2EB2               	goto	u2247
  2758  06B8  0000               	nop
  2759  06B9  0008               	return
  2760  06BA                     __end_of_SIM800init:	
  2761                           ;sim800l.c: 25: return 0;
  2762                           ;	Return value of _SIM800init is never used
  2763                           
  2764                           
  2765                           	psect	text5
  2766  0592                     __ptext5:	
  2767 ;; *************** function _SIM800SendSms *****************
  2768 ;; Defined at:
  2769 ;;		line 34 in file "sim800l.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  nmbr            2    9[BANK0 ] PTR const unsigned char 
  2772 ;;		 -> STR_8(14), SIM800L.cell(15), SIM800L(158), 
  2773 ;;  msg             2   11[BANK0 ] PTR const unsigned char 
  2774 ;;		 -> STR_9(17), STR_5(22), SIM800L.csq(5), SIM800L(158), 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      unsigned char 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2786 ;;      Params:         0       4       0       0
  2787 ;;      Locals:         0       0       0       0
  2788 ;;      Temps:          0       3       0       0
  2789 ;;      Totals:         0       7       0       0
  2790 ;;Total ram usage:        7 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    5
  2793 ;; This function calls:
  2794 ;;		_USARTWriteChar
  2795 ;;		_USARTWriteLine
  2796 ;;		_USARTWriteString
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _SIM800SendSms
  2804  0592                     _SIM800SendSms:	
  2805                           
  2806                           ;sim800l.c: 36: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _SIM800SendSms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2810  0592  3015               	movlw	21
  2811  0593  0020               	movlb	0	; select bank0
  2812  0594  00AF               	movwf	??_SIM800SendSms+2
  2813  0595  304B               	movlw	75
  2814  0596  00AE               	movwf	??_SIM800SendSms+1
  2815  0597  30D1               	movlw	209
  2816  0598  00AD               	movwf	??_SIM800SendSms
  2817  0599                     u2257:	
  2818  0599  0BAD               	decfsz	??_SIM800SendSms,f
  2819  059A  2D99               	goto	u2257
  2820  059B  0BAE               	decfsz	??_SIM800SendSms+1,f
  2821  059C  2D99               	goto	u2257
  2822  059D  0BAF               	decfsz	??_SIM800SendSms+2,f
  2823  059E  2D99               	goto	u2257
  2824  059F  0000               	nop
  2825                           
  2826                           ;sim800l.c: 37: USARTWriteLine("AT+CMGF = 1\r\n");
  2827  05A0  3027               	movlw	low (STR_13| (0+32768))
  2828  05A1  0020               	movlb	0	; select bank0
  2829  05A2  00A7               	movwf	USARTWriteLine@str
  2830  05A3  3085               	movlw	high (STR_13| (0+32768))
  2831  05A4  00A8               	movwf	USARTWriteLine@str+1
  2832  05A5  3184  24EE  3185   	fcall	_USARTWriteLine
  2833                           
  2834                           ;sim800l.c: 38: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2835  05A8  3015               	movlw	21
  2836  05A9  0020               	movlb	0	; select bank0
  2837  05AA  00AF               	movwf	??_SIM800SendSms+2
  2838  05AB  304B               	movlw	75
  2839  05AC  00AE               	movwf	??_SIM800SendSms+1
  2840  05AD  30D1               	movlw	209
  2841  05AE  00AD               	movwf	??_SIM800SendSms
  2842  05AF                     u2267:	
  2843  05AF  0BAD               	decfsz	??_SIM800SendSms,f
  2844  05B0  2DAF               	goto	u2267
  2845  05B1  0BAE               	decfsz	??_SIM800SendSms+1,f
  2846  05B2  2DAF               	goto	u2267
  2847  05B3  0BAF               	decfsz	??_SIM800SendSms+2,f
  2848  05B4  2DAF               	goto	u2267
  2849  05B5  0000               	nop
  2850                           
  2851                           ;sim800l.c: 39: USARTWriteLine("AT+CMGS=\"");
  2852  05B6  304E               	movlw	low (STR_14| (0+32768))
  2853  05B7  0020               	movlb	0	; select bank0
  2854  05B8  00A7               	movwf	USARTWriteLine@str
  2855  05B9  3085               	movlw	high (STR_14| (0+32768))
  2856  05BA  00A8               	movwf	USARTWriteLine@str+1
  2857  05BB  3184  24EE  3185   	fcall	_USARTWriteLine
  2858                           
  2859                           ;sim800l.c: 40: USARTWriteString(nmbr);
  2860  05BE  0020               	movlb	0	; select bank0
  2861  05BF  082A               	movf	SIM800SendSms@nmbr+1,w
  2862  05C0  01A6               	clrf	USARTWriteString@str+1
  2863  05C1  07A6               	addwf	USARTWriteString@str+1,f
  2864  05C2  0829               	movf	SIM800SendSms@nmbr,w
  2865  05C3  01A5               	clrf	USARTWriteString@str
  2866  05C4  07A5               	addwf	USARTWriteString@str,f
  2867  05C5  318F  273F  3185   	fcall	_USARTWriteString
  2868                           
  2869                           ;sim800l.c: 41: USARTWriteString("\"\r\n");
  2870  05C8  308A               	movlw	low (STR_15| (0+32768))
  2871  05C9  0020               	movlb	0	; select bank0
  2872  05CA  00A5               	movwf	USARTWriteString@str
  2873  05CB  3085               	movlw	high (STR_15| (0+32768))
  2874  05CC  00A6               	movwf	USARTWriteString@str+1
  2875  05CD  318F  273F  3185   	fcall	_USARTWriteString
  2876                           
  2877                           ;sim800l.c: 43: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2878  05D0  3015               	movlw	21
  2879  05D1  0020               	movlb	0	; select bank0
  2880  05D2  00AF               	movwf	??_SIM800SendSms+2
  2881  05D3  304B               	movlw	75
  2882  05D4  00AE               	movwf	??_SIM800SendSms+1
  2883  05D5  30D1               	movlw	209
  2884  05D6  00AD               	movwf	??_SIM800SendSms
  2885  05D7                     u2277:	
  2886  05D7  0BAD               	decfsz	??_SIM800SendSms,f
  2887  05D8  2DD7               	goto	u2277
  2888  05D9  0BAE               	decfsz	??_SIM800SendSms+1,f
  2889  05DA  2DD7               	goto	u2277
  2890  05DB  0BAF               	decfsz	??_SIM800SendSms+2,f
  2891  05DC  2DD7               	goto	u2277
  2892  05DD  0000               	nop
  2893                           
  2894                           ;sim800l.c: 44: USARTWriteString(msg);
  2895  05DE  0020               	movlb	0	; select bank0
  2896  05DF  082C               	movf	SIM800SendSms@msg+1,w
  2897  05E0  01A6               	clrf	USARTWriteString@str+1
  2898  05E1  07A6               	addwf	USARTWriteString@str+1,f
  2899  05E2  082B               	movf	SIM800SendSms@msg,w
  2900  05E3  01A5               	clrf	USARTWriteString@str
  2901  05E4  07A5               	addwf	USARTWriteString@str,f
  2902  05E5  318F  273F  3185   	fcall	_USARTWriteString
  2903                           
  2904                           ;sim800l.c: 45: USARTWriteChar(0x1A);
  2905  05E8  301A               	movlw	26
  2906  05E9  318E  26FF  3185   	fcall	_USARTWriteChar
  2907                           
  2908                           ;sim800l.c: 46: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2909  05EC  3015               	movlw	21
  2910  05ED  0020               	movlb	0	; select bank0
  2911  05EE  00AF               	movwf	??_SIM800SendSms+2
  2912  05EF  304B               	movlw	75
  2913  05F0  00AE               	movwf	??_SIM800SendSms+1
  2914  05F1  30D1               	movlw	209
  2915  05F2  00AD               	movwf	??_SIM800SendSms
  2916  05F3                     u2287:	
  2917  05F3  0BAD               	decfsz	??_SIM800SendSms,f
  2918  05F4  2DF3               	goto	u2287
  2919  05F5  0BAE               	decfsz	??_SIM800SendSms+1,f
  2920  05F6  2DF3               	goto	u2287
  2921  05F7  0BAF               	decfsz	??_SIM800SendSms+2,f
  2922  05F8  2DF3               	goto	u2287
  2923  05F9  0000               	nop
  2924  05FA  0008               	return
  2925  05FB                     __end_of_SIM800SendSms:	
  2926                           ;sim800l.c: 48: return 1;
  2927                           ;	Return value of _SIM800SendSms is never used
  2928                           
  2929                           
  2930                           	psect	text6
  2931  0796                     __ptext6:	
  2932 ;; *************** function _SIM800ReadSms *****************
  2933 ;; Defined at:
  2934 ;;		line 50 in file "sim800l.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  mem             2    9[BANK0 ] PTR const unsigned char 
  2937 ;;		 -> SIM800L.smsmem(5), SIM800L(158), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      unsigned char 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2949 ;;      Params:         0       2       0       0
  2950 ;;      Locals:         0       0       0       0
  2951 ;;      Temps:          0       3       0       0
  2952 ;;      Totals:         0       5       0       0
  2953 ;;Total ram usage:        5 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    5
  2956 ;; This function calls:
  2957 ;;		_USARTWriteLine
  2958 ;;		_USARTWriteString
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _SIM800ReadSms
  2966  0796                     _SIM800ReadSms:	
  2967                           
  2968                           ;sim800l.c: 52: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _SIM800ReadSms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2972  0796  3015               	movlw	21
  2973  0797  0020               	movlb	0	; select bank0
  2974  0798  00AD               	movwf	??_SIM800ReadSms+2
  2975  0799  304B               	movlw	75
  2976  079A  00AC               	movwf	??_SIM800ReadSms+1
  2977  079B  30D1               	movlw	209
  2978  079C  00AB               	movwf	??_SIM800ReadSms
  2979  079D                     u2297:	
  2980  079D  0BAB               	decfsz	??_SIM800ReadSms,f
  2981  079E  2F9D               	goto	u2297
  2982  079F  0BAC               	decfsz	??_SIM800ReadSms+1,f
  2983  07A0  2F9D               	goto	u2297
  2984  07A1  0BAD               	decfsz	??_SIM800ReadSms+2,f
  2985  07A2  2F9D               	goto	u2297
  2986  07A3  0000               	nop
  2987                           
  2988                           ;sim800l.c: 53: USARTWriteLine("AT+CMGF = 1\r\n");
  2989  07A4  3027               	movlw	low (STR_13| (0+32768))
  2990  07A5  0020               	movlb	0	; select bank0
  2991  07A6  00A7               	movwf	USARTWriteLine@str
  2992  07A7  3085               	movlw	high (STR_13| (0+32768))
  2993  07A8  00A8               	movwf	USARTWriteLine@str+1
  2994  07A9  3184  24EE  3187   	fcall	_USARTWriteLine
  2995                           
  2996                           ;sim800l.c: 54: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2997  07AC  3015               	movlw	21
  2998  07AD  0020               	movlb	0	; select bank0
  2999  07AE  00AD               	movwf	??_SIM800ReadSms+2
  3000  07AF  304B               	movlw	75
  3001  07B0  00AC               	movwf	??_SIM800ReadSms+1
  3002  07B1  30D1               	movlw	209
  3003  07B2  00AB               	movwf	??_SIM800ReadSms
  3004  07B3                     u2307:	
  3005  07B3  0BAB               	decfsz	??_SIM800ReadSms,f
  3006  07B4  2FB3               	goto	u2307
  3007  07B5  0BAC               	decfsz	??_SIM800ReadSms+1,f
  3008  07B6  2FB3               	goto	u2307
  3009  07B7  0BAD               	decfsz	??_SIM800ReadSms+2,f
  3010  07B8  2FB3               	goto	u2307
  3011  07B9  0000               	nop
  3012                           
  3013                           ;sim800l.c: 55: USARTWriteLine("AT+CMGR=");
  3014  07BA  3061               	movlw	low (STR_17| (0+32768))
  3015  07BB  0020               	movlb	0	; select bank0
  3016  07BC  00A7               	movwf	USARTWriteLine@str
  3017  07BD  3085               	movlw	high (STR_17| (0+32768))
  3018  07BE  00A8               	movwf	USARTWriteLine@str+1
  3019  07BF  3184  24EE  3187   	fcall	_USARTWriteLine
  3020                           
  3021                           ;sim800l.c: 56: USARTWriteString(mem);
  3022  07C2  0020               	movlb	0	; select bank0
  3023  07C3  082A               	movf	SIM800ReadSms@mem+1,w
  3024  07C4  01A6               	clrf	USARTWriteString@str+1
  3025  07C5  07A6               	addwf	USARTWriteString@str+1,f
  3026  07C6  0829               	movf	SIM800ReadSms@mem,w
  3027  07C7  01A5               	clrf	USARTWriteString@str
  3028  07C8  07A5               	addwf	USARTWriteString@str,f
  3029  07C9  318F  273F  3187   	fcall	_USARTWriteString
  3030                           
  3031                           ;sim800l.c: 57: USARTWriteString("\r\n");
  3032  07CC  308B               	movlw	low ((STR_15+1)| (0+32768))
  3033  07CD  0020               	movlb	0	; select bank0
  3034  07CE  00A5               	movwf	USARTWriteString@str
  3035  07CF  3085               	movlw	high ((STR_15+1)| (0+32768))
  3036  07D0  00A6               	movwf	USARTWriteString@str+1
  3037  07D1  318F  273F         	fcall	_USARTWriteString
  3038  07D3  0008               	return
  3039  07D4                     __end_of_SIM800ReadSms:	
  3040                           ;sim800l.c: 58: return 1;
  3041                           ;	Return value of _SIM800ReadSms is never used
  3042                           
  3043                           
  3044                           	psect	text7
  3045  06BA                     __ptext7:	
  3046 ;; *************** function _SIM800DeleteSms *****************
  3047 ;; Defined at:
  3048 ;;		line 60 in file "sim800l.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  index           2    9[BANK0 ] PTR const unsigned char 
  3051 ;;		 -> STR_6(2), 
  3052 ;;  flag            2   11[BANK0 ] PTR const unsigned char 
  3053 ;;		 -> STR_7(2), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      unsigned char 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3065 ;;      Params:         0       4       0       0
  3066 ;;      Locals:         0       0       0       0
  3067 ;;      Temps:          0       3       0       0
  3068 ;;      Totals:         0       7       0       0
  3069 ;;Total ram usage:        7 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    5
  3072 ;; This function calls:
  3073 ;;		_USARTWriteChar
  3074 ;;		_USARTWriteLine
  3075 ;;		_USARTWriteString
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _SIM800DeleteSms
  3083  06BA                     _SIM800DeleteSms:	
  3084                           
  3085                           ;sim800l.c: 62: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3086                           
  3087                           ;incstack = 0
  3088                           ; Regs used in _SIM800DeleteSms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3089  06BA  3015               	movlw	21
  3090  06BB  0020               	movlb	0	; select bank0
  3091  06BC  00AF               	movwf	??_SIM800DeleteSms+2
  3092  06BD  304B               	movlw	75
  3093  06BE  00AE               	movwf	??_SIM800DeleteSms+1
  3094  06BF  30D1               	movlw	209
  3095  06C0  00AD               	movwf	??_SIM800DeleteSms
  3096  06C1                     u2317:	
  3097  06C1  0BAD               	decfsz	??_SIM800DeleteSms,f
  3098  06C2  2EC1               	goto	u2317
  3099  06C3  0BAE               	decfsz	??_SIM800DeleteSms+1,f
  3100  06C4  2EC1               	goto	u2317
  3101  06C5  0BAF               	decfsz	??_SIM800DeleteSms+2,f
  3102  06C6  2EC1               	goto	u2317
  3103  06C7  0000               	nop
  3104                           
  3105                           ;sim800l.c: 63: USARTWriteLine("AT+CMGF = 1\r\n");
  3106  06C8  3027               	movlw	low (STR_13| (0+32768))
  3107  06C9  0020               	movlb	0	; select bank0
  3108  06CA  00A7               	movwf	USARTWriteLine@str
  3109  06CB  3085               	movlw	high (STR_13| (0+32768))
  3110  06CC  00A8               	movwf	USARTWriteLine@str+1
  3111  06CD  3184  24EE  3186   	fcall	_USARTWriteLine
  3112                           
  3113                           ;sim800l.c: 64: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3114  06D0  3015               	movlw	21
  3115  06D1  0020               	movlb	0	; select bank0
  3116  06D2  00AF               	movwf	??_SIM800DeleteSms+2
  3117  06D3  304B               	movlw	75
  3118  06D4  00AE               	movwf	??_SIM800DeleteSms+1
  3119  06D5  30D1               	movlw	209
  3120  06D6  00AD               	movwf	??_SIM800DeleteSms
  3121  06D7                     u2327:	
  3122  06D7  0BAD               	decfsz	??_SIM800DeleteSms,f
  3123  06D8  2ED7               	goto	u2327
  3124  06D9  0BAE               	decfsz	??_SIM800DeleteSms+1,f
  3125  06DA  2ED7               	goto	u2327
  3126  06DB  0BAF               	decfsz	??_SIM800DeleteSms+2,f
  3127  06DC  2ED7               	goto	u2327
  3128  06DD  0000               	nop
  3129                           
  3130                           ;sim800l.c: 65: USARTWriteLine("AT+CMGD=");
  3131  06DE  3058               	movlw	low (STR_20| (0+32768))
  3132  06DF  0020               	movlb	0	; select bank0
  3133  06E0  00A7               	movwf	USARTWriteLine@str
  3134  06E1  3085               	movlw	high (STR_20| (0+32768))
  3135  06E2  00A8               	movwf	USARTWriteLine@str+1
  3136  06E3  3184  24EE  3186   	fcall	_USARTWriteLine
  3137                           
  3138                           ;sim800l.c: 66: USARTWriteString(index);
  3139  06E6  0020               	movlb	0	; select bank0
  3140  06E7  082A               	movf	SIM800DeleteSms@index+1,w
  3141  06E8  01A6               	clrf	USARTWriteString@str+1
  3142  06E9  07A6               	addwf	USARTWriteString@str+1,f
  3143  06EA  0829               	movf	SIM800DeleteSms@index,w
  3144  06EB  01A5               	clrf	USARTWriteString@str
  3145  06EC  07A5               	addwf	USARTWriteString@str,f
  3146  06ED  318F  273F  3186   	fcall	_USARTWriteString
  3147                           
  3148                           ;sim800l.c: 67: USARTWriteChar(',');
  3149  06F0  302C               	movlw	44
  3150  06F1  318E  26FF  3186   	fcall	_USARTWriteChar
  3151                           
  3152                           ;sim800l.c: 68: USARTWriteString(flag);
  3153  06F4  0020               	movlb	0	; select bank0
  3154  06F5  082C               	movf	SIM800DeleteSms@flag+1,w
  3155  06F6  01A6               	clrf	USARTWriteString@str+1
  3156  06F7  07A6               	addwf	USARTWriteString@str+1,f
  3157  06F8  082B               	movf	SIM800DeleteSms@flag,w
  3158  06F9  01A5               	clrf	USARTWriteString@str
  3159  06FA  07A5               	addwf	USARTWriteString@str,f
  3160  06FB  318F  273F  3186   	fcall	_USARTWriteString
  3161                           
  3162                           ;sim800l.c: 69: USARTWriteString("\r\n");
  3163  06FE  308B               	movlw	low ((STR_15+1)| (0+32768))
  3164  06FF  0020               	movlb	0	; select bank0
  3165  0700  00A5               	movwf	USARTWriteString@str
  3166  0701  3085               	movlw	high ((STR_15+1)| (0+32768))
  3167  0702  00A6               	movwf	USARTWriteString@str+1
  3168  0703  318F  273F         	fcall	_USARTWriteString
  3169  0705  0008               	return
  3170  0706                     __end_of_SIM800DeleteSms:	
  3171                           ;sim800l.c: 70: return 1;
  3172                           ;	Return value of _SIM800DeleteSms is never used
  3173                           
  3174                           
  3175                           	psect	text8
  3176  04EE                     __ptext8:	
  3177 ;; *************** function _USARTWriteLine *****************
  3178 ;; Defined at:
  3179 ;;		line 66 in file "usart.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  str             2    7[BANK0 ] PTR const unsigned char 
  3182 ;;		 -> STR_20(9), STR_19(14), STR_17(9), STR_16(14), 
  3183 ;;		 -> STR_14(10), STR_13(14), STR_12(5), STR_11(7), 
  3184 ;;		 -> STR_10(5), STR_4(6), STR_3(9), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;		None               void
  3189 ;; Registers used:
  3190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3196 ;;      Params:         0       2       0       0
  3197 ;;      Locals:         0       0       0       0
  3198 ;;      Temps:          0       0       0       0
  3199 ;;      Totals:         0       2       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    4
  3203 ;; This function calls:
  3204 ;;		_USARTWriteChar
  3205 ;;		_USARTWriteString
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;;		_SIM800init
  3209 ;;		_SIM800SendSms
  3210 ;;		_SIM800ReadSms
  3211 ;;		_SIM800DeleteSms
  3212 ;;		_SIM800sendCommand
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _USARTWriteLine
  3218  04EE                     _USARTWriteLine:	
  3219                           
  3220                           ;usart.c: 68: USARTWriteChar('\r');
  3221                           
  3222                           ;incstack = 0
  3223                           ; Regs used in _USARTWriteLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3224  04EE  300D               	movlw	13
  3225  04EF  318E  26FF  3184   	fcall	_USARTWriteChar
  3226                           
  3227                           ;usart.c: 69: USARTWriteChar('\n');
  3228  04F2  300A               	movlw	10
  3229  04F3  318E  26FF  3184   	fcall	_USARTWriteChar
  3230                           
  3231                           ;usart.c: 70: USARTWriteString(str);
  3232  04F6  0020               	movlb	0	; select bank0
  3233  04F7  0828               	movf	USARTWriteLine@str+1,w
  3234  04F8  01A6               	clrf	USARTWriteString@str+1
  3235  04F9  07A6               	addwf	USARTWriteString@str+1,f
  3236  04FA  0827               	movf	USARTWriteLine@str,w
  3237  04FB  01A5               	clrf	USARTWriteString@str
  3238  04FC  07A5               	addwf	USARTWriteString@str,f
  3239  04FD  318F  273F         	fcall	_USARTWriteString
  3240  04FF  0008               	return
  3241  0500                     __end_of_USARTWriteLine:	
  3242                           
  3243                           	psect	text9
  3244  0F3F                     __ptext9:	
  3245 ;; *************** function _USARTWriteString *****************
  3246 ;; Defined at:
  3247 ;;		line 57 in file "usart.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  str             2    5[BANK0 ] PTR const unsigned char 
  3250 ;;		 -> STR_21(3), STR_20(9), STR_19(14), STR_18(3), 
  3251 ;;		 -> STR_17(9), STR_16(14), STR_15(4), STR_14(10), 
  3252 ;;		 -> STR_13(14), STR_12(5), STR_11(7), STR_10(5), 
  3253 ;;		 -> STR_9(17), STR_8(14), STR_7(2), STR_6(2), 
  3254 ;;		 -> SIM800L.smsmem(5), STR_5(22), SIM800L.csq(5), SIM800L.cell(15), 
  3255 ;;		 -> STR_4(6), SIM800L(158), STR_3(9), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3267 ;;      Params:         0       2       0       0
  3268 ;;      Locals:         0       0       0       0
  3269 ;;      Temps:          0       0       0       0
  3270 ;;      Totals:         0       2       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    3
  3274 ;; This function calls:
  3275 ;;		_USARTWriteChar
  3276 ;; This function is called by:
  3277 ;;		_SIM800SendSms
  3278 ;;		_SIM800ReadSms
  3279 ;;		_SIM800DeleteSms
  3280 ;;		_USARTWriteLine
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function _USARTWriteString
  3286  0F3F                     _USARTWriteString:	
  3287  0F3F                     l1767:	
  3288                           ;usart.c: 59: while(*str!='\0')
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3292                           
  3293  0F3F  0020               	movlb	0	; select bank0
  3294  0F40  0825               	movf	USARTWriteString@str,w
  3295  0F41  0084               	movwf	4
  3296  0F42  0826               	movf	USARTWriteString@str+1,w
  3297  0F43  0085               	movwf	5
  3298  0F44  0800               	movf	0,w	;code access
  3299  0F45  3800               	iorlw	0
  3300  0F46  1903               	btfsc	3,2
  3301  0F47  0008               	return
  3302                           
  3303                           ;usart.c: 60: {
  3304                           ;usart.c: 61: USARTWriteChar(*str);
  3305  0F48  0020               	movlb	0	; select bank0
  3306  0F49  0825               	movf	USARTWriteString@str,w
  3307  0F4A  0084               	movwf	4
  3308  0F4B  0826               	movf	USARTWriteString@str+1,w
  3309  0F4C  0085               	movwf	5
  3310  0F4D  0800               	movf	0,w	;code access
  3311  0F4E  318E  26FF  318F   	fcall	_USARTWriteChar
  3312                           
  3313                           ;usart.c: 62: str++;
  3314  0F51  3001               	movlw	1
  3315  0F52  0020               	movlb	0	; select bank0
  3316  0F53  07A5               	addwf	USARTWriteString@str,f
  3317  0F54  3000               	movlw	0
  3318  0F55  3DA6               	addwfc	USARTWriteString@str+1,f
  3319  0F56  2F3F               	goto	l1767
  3320  0F57                     __end_of_USARTWriteString:	
  3321                           
  3322                           	psect	text10
  3323  0EFF                     __ptext10:	
  3324 ;; *************** function _USARTWriteChar *****************
  3325 ;; Defined at:
  3326 ;;		line 51 in file "usart.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  ch              1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  ch              1    4[BANK0 ] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3340 ;;      Params:         0       0       0       0
  3341 ;;      Locals:         0       1       0       0
  3342 ;;      Temps:          0       0       0       0
  3343 ;;      Totals:         0       1       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    2
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_SIM800SendSms
  3351 ;;		_SIM800DeleteSms
  3352 ;;		_USARTWriteString
  3353 ;;		_USARTWriteLine
  3354 ;;		_USARTWriteInt
  3355 ;;		_USARTGotoNewLine
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _USARTWriteChar
  3361  0EFF                     _USARTWriteChar:	
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _USARTWriteChar: [wreg]
  3365                           ;USARTWriteChar@ch stored from wreg
  3366  0EFF  0020               	movlb	0	; select bank0
  3367  0F00  00A4               	movwf	USARTWriteChar@ch
  3368  0F01                     l300:	
  3369                           ;usart.c: 53: while(!PIR1bits.TXIF);
  3370                           
  3371  0F01  1E11               	btfss	17,4	;volatile
  3372  0F02  2F01               	goto	l300
  3373                           
  3374                           ;usart.c: 54: TXREG=ch;
  3375  0F03  0824               	movf	USARTWriteChar@ch,w
  3376  0F04  0023               	movlb	3	; select bank3
  3377  0F05  009A               	movwf	26	;volatile
  3378  0F06  0008               	return
  3379  0F07                     __end_of_USARTWriteChar:	
  3380                           
  3381                           	psect	text11
  3382  04C0                     __ptext11:	
  3383 ;; *************** function _GPIORedLedBlink *****************
  3384 ;; Defined at:
  3385 ;;		line 26 in file "gpio.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  times           1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  times           1    7[BANK0 ] unsigned char 
  3390 ;;  i               1    8[BANK0 ] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3400 ;;      Params:         0       0       0       0
  3401 ;;      Locals:         0       2       0       0
  3402 ;;      Temps:          0       3       0       0
  3403 ;;      Totals:         0       5       0       0
  3404 ;;Total ram usage:        5 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    2
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           
  3415                           ;psect for function _GPIORedLedBlink
  3416  04C0                     _GPIORedLedBlink:	
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _GPIORedLedBlink: [wreg+status,2+status,0]
  3420                           ;GPIORedLedBlink@times stored from wreg
  3421  04C0  0020               	movlb	0	; select bank0
  3422  04C1  00A7               	movwf	GPIORedLedBlink@times
  3423                           
  3424                           ;gpio.c: 28: uint8_t i=0;
  3425  04C2  01A8               	clrf	GPIORedLedBlink@i
  3426                           
  3427                           ;gpio.c: 29: for(i=0;i<times;i++)
  3428  04C3  01A8               	clrf	GPIORedLedBlink@i
  3429  04C4                     l2061:	
  3430  04C4  0827               	movf	GPIORedLedBlink@times,w
  3431  04C5  0228               	subwf	GPIORedLedBlink@i,w
  3432  04C6  1803               	btfsc	3,0
  3433  04C7  0008               	return
  3434                           
  3435                           ;gpio.c: 30: {
  3436                           ;gpio.c: 31: LATCbits.LATC0=1;
  3437  04C8  0022               	movlb	2	; select bank2
  3438  04C9  140E               	bsf	14,0	;volatile
  3439                           
  3440                           ;gpio.c: 32: _delay((unsigned long)((100)*(8000000/4000.0)));
  3441  04CA  3002               	movlw	2
  3442  04CB  0020               	movlb	0	; select bank0
  3443  04CC  00A6               	movwf	??_GPIORedLedBlink+2
  3444  04CD  3004               	movlw	4
  3445  04CE  00A5               	movwf	??_GPIORedLedBlink+1
  3446  04CF  30BA               	movlw	186
  3447  04D0  00A4               	movwf	??_GPIORedLedBlink
  3448  04D1                     u2337:	
  3449  04D1  0BA4               	decfsz	??_GPIORedLedBlink,f
  3450  04D2  2CD1               	goto	u2337
  3451  04D3  0BA5               	decfsz	??_GPIORedLedBlink+1,f
  3452  04D4  2CD1               	goto	u2337
  3453  04D5  0BA6               	decfsz	??_GPIORedLedBlink+2,f
  3454  04D6  2CD1               	goto	u2337
  3455  04D7  0000               	nop
  3456                           
  3457                           ;gpio.c: 33: LATCbits.LATC0=0;
  3458  04D8  0022               	movlb	2	; select bank2
  3459  04D9  100E               	bcf	14,0	;volatile
  3460                           
  3461                           ;gpio.c: 34: _delay((unsigned long)((100)*(8000000/4000.0)));
  3462  04DA  3002               	movlw	2
  3463  04DB  0020               	movlb	0	; select bank0
  3464  04DC  00A6               	movwf	??_GPIORedLedBlink+2
  3465  04DD  3004               	movlw	4
  3466  04DE  00A5               	movwf	??_GPIORedLedBlink+1
  3467  04DF  30BA               	movlw	186
  3468  04E0  00A4               	movwf	??_GPIORedLedBlink
  3469  04E1                     u2347:	
  3470  04E1  0BA4               	decfsz	??_GPIORedLedBlink,f
  3471  04E2  2CE1               	goto	u2347
  3472  04E3  0BA5               	decfsz	??_GPIORedLedBlink+1,f
  3473  04E4  2CE1               	goto	u2347
  3474  04E5  0BA6               	decfsz	??_GPIORedLedBlink+2,f
  3475  04E6  2CE1               	goto	u2347
  3476  04E7  0000               	nop
  3477  04E8  3001               	movlw	1
  3478  04E9  0020               	movlb	0	; select bank0
  3479  04EA  00A4               	movwf	??_GPIORedLedBlink
  3480  04EB  0824               	movf	??_GPIORedLedBlink,w
  3481  04EC  07A8               	addwf	GPIORedLedBlink@i,f
  3482  04ED  2CC4               	goto	l2061
  3483  04EE                     __end_of_GPIORedLedBlink:	
  3484                           
  3485                           	psect	text12
  3486  0F1C                     __ptext12:	
  3487 ;; *************** function _GPIOPortInit *****************
  3488 ;; Defined at:
  3489 ;;		line 5 in file "gpio.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		status,2
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3503 ;;      Params:         0       0       0       0
  3504 ;;      Locals:         0       0       0       0
  3505 ;;      Temps:          0       0       0       0
  3506 ;;      Totals:         0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    2
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _GPIOPortInit
  3519  0F1C                     _GPIOPortInit:	
  3520                           
  3521                           ;gpio.c: 8: TRISB7=0;
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _GPIOPortInit: [status,2]
  3525  0F1C  0021               	movlb	1	; select bank1
  3526  0F1D  138D               	bcf	13,7	;volatile
  3527                           
  3528                           ;gpio.c: 9: TRISB6=0;
  3529  0F1E  130D               	bcf	13,6	;volatile
  3530                           
  3531                           ;gpio.c: 10: TRISC7=0;
  3532  0F1F  138E               	bcf	14,7	;volatile
  3533                           
  3534                           ;gpio.c: 11: TRISB4=1;
  3535  0F20  160D               	bsf	13,4	;volatile
  3536                           
  3537                           ;gpio.c: 12: ANSELB=0x00;
  3538  0F21  0023               	movlb	3	; select bank3
  3539  0F22  018D               	clrf	13	;volatile
  3540                           
  3541                           ;gpio.c: 14: TRISC0=0;
  3542  0F23  0021               	movlb	1	; select bank1
  3543  0F24  100E               	bcf	14,0	;volatile
  3544                           
  3545                           ;gpio.c: 15: TRISC1=0;
  3546  0F25  108E               	bcf	14,1	;volatile
  3547                           
  3548                           ;gpio.c: 16: TRISC2=0;
  3549  0F26  110E               	bcf	14,2	;volatile
  3550                           
  3551                           ;gpio.c: 18: TRISC4=0;
  3552  0F27  120E               	bcf	14,4	;volatile
  3553                           
  3554                           ;gpio.c: 19: TRISC5=1;
  3555  0F28  168E               	bsf	14,5	;volatile
  3556                           
  3557                           ;gpio.c: 21: TRISC6=0;
  3558  0F29  130E               	bcf	14,6	;volatile
  3559                           
  3560                           ;gpio.c: 23: TRISA4=0;
  3561  0F2A  120C               	bcf	12,4	;volatile
  3562  0F2B  0008               	return
  3563  0F2C                     __end_of_GPIOPortInit:	
  3564                           
  3565                           	psect	text13
  3566  0339                     __ptext13:	
  3567 ;; *************** function _EEPROMSearchNumber *****************
  3568 ;; Defined at:
  3569 ;;		line 139 in file "eeprom.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  nmbr            2   15[BANK0 ] PTR const unsigned char 
  3572 ;;		 -> SIM800L.cell(15), SIM800L(158), 
  3573 ;;  nmbrLenght      1   17[BANK0 ] unsigned char 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  convNmbr        5   22[BANK0 ] unsigned char [5]
  3576 ;;  aux             2   28[BANK0 ] unsigned int 
  3577 ;;  count           1   31[BANK0 ] unsigned char 
  3578 ;;  result          1   30[BANK0 ] unsigned char 
  3579 ;;  value           1   27[BANK0 ] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      unsigned char 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3589 ;;      Params:         0       3       0       0
  3590 ;;      Locals:         0      10       0       0
  3591 ;;      Temps:          0       4       0       0
  3592 ;;      Totals:         0      17       0       0
  3593 ;;Total ram usage:       17 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    4
  3596 ;; This function calls:
  3597 ;;		_EepromRead
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _EEPROMSearchNumber
  3605  0339                     _EEPROMSearchNumber:	
  3606                           
  3607                           ;eeprom.c: 141: char convNmbr[5];
  3608                           ;eeprom.c: 142: uint16_t aux=0;
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in _EEPROMSearchNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3612  0339  0020               	movlb	0	; select bank0
  3613  033A  01BC               	clrf	EEPROMSearchNumber@aux
  3614  033B  01BD               	clrf	EEPROMSearchNumber@aux+1
  3615                           
  3616                           ;eeprom.c: 143: uint8_t value=0,count=0, result=0;
  3617  033C  01BB               	clrf	EEPROMSearchNumber@value
  3618  033D  01BF               	clrf	EEPROMSearchNumber@count
  3619  033E  01BE               	clrf	EEPROMSearchNumber@result
  3620                           
  3621                           ;eeprom.c: 144: for(count=5;count>0;count--)
  3622  033F  3005               	movlw	5
  3623  0340  00B2               	movwf	??_EEPROMSearchNumber
  3624  0341  0832               	movf	??_EEPROMSearchNumber,w
  3625  0342  00BF               	movwf	EEPROMSearchNumber@count
  3626  0343  08BF               	movf	EEPROMSearchNumber@count,f
  3627  0344  1903               	btfsc	3,2
  3628  0345  2B9E               	goto	l2011
  3629  0346                     l1985:	
  3630                           
  3631                           ;eeprom.c: 145: {
  3632                           ;eeprom.c: 146: if(nmbrLenght)
  3633  0346  0831               	movf	EEPROMSearchNumber@nmbrLenght,w
  3634  0347  1903               	btfsc	3,2
  3635  0348  2B8E               	goto	l2001
  3636                           
  3637                           ;eeprom.c: 147: {
  3638                           ;eeprom.c: 148: nmbrLenght--;
  3639  0349  3001               	movlw	1
  3640  034A  02B1               	subwf	EEPROMSearchNumber@nmbrLenght,f
  3641                           
  3642                           ;eeprom.c: 149: if(*(nmbr+nmbrLenght)>='0')
  3643  034B  0831               	movf	EEPROMSearchNumber@nmbrLenght,w
  3644  034C  00B2               	movwf	??_EEPROMSearchNumber
  3645  034D  01B3               	clrf	??_EEPROMSearchNumber+1
  3646  034E  0832               	movf	??_EEPROMSearchNumber,w
  3647  034F  072F               	addwf	EEPROMSearchNumber@nmbr,w
  3648  0350  0086               	movwf	6
  3649  0351  0833               	movf	??_EEPROMSearchNumber+1,w
  3650  0352  3D30               	addwfc	EEPROMSearchNumber@nmbr+1,w
  3651  0353  0087               	movwf	7
  3652  0354  3030               	movlw	48
  3653  0355  0201               	subwf	1,w
  3654  0356  1C03               	skipc
  3655  0357  2B66               	goto	l1993
  3656                           
  3657                           ;eeprom.c: 150: {value=*(nmbr+nmbrLenght)-'0';}
  3658  0358  0831               	movf	EEPROMSearchNumber@nmbrLenght,w
  3659  0359  00B2               	movwf	??_EEPROMSearchNumber
  3660  035A  01B3               	clrf	??_EEPROMSearchNumber+1
  3661  035B  0832               	movf	??_EEPROMSearchNumber,w
  3662  035C  072F               	addwf	EEPROMSearchNumber@nmbr,w
  3663  035D  0086               	movwf	6
  3664  035E  0833               	movf	??_EEPROMSearchNumber+1,w
  3665  035F  3D30               	addwfc	EEPROMSearchNumber@nmbr+1,w
  3666  0360  0087               	movwf	7
  3667  0361  0801               	movf	1,w
  3668  0362  3ED0               	addlw	208
  3669  0363  00B4               	movwf	??_EEPROMSearchNumber+2
  3670  0364  0834               	movf	??_EEPROMSearchNumber+2,w
  3671  0365  00BB               	movwf	EEPROMSearchNumber@value
  3672  0366                     l1993:	
  3673                           
  3674                           ;eeprom.c: 151: if(nmbrLenght)
  3675  0366  0831               	movf	EEPROMSearchNumber@nmbrLenght,w
  3676  0367  1903               	btfsc	3,2
  3677  0368  2B8F               	goto	l2003
  3678                           
  3679                           ;eeprom.c: 152: {
  3680                           ;eeprom.c: 153: nmbrLenght--;
  3681  0369  3001               	movlw	1
  3682  036A  02B1               	subwf	EEPROMSearchNumber@nmbrLenght,f
  3683                           
  3684                           ;eeprom.c: 154: if(*(nmbr+nmbrLenght)>='0')
  3685  036B  0831               	movf	EEPROMSearchNumber@nmbrLenght,w
  3686  036C  00B2               	movwf	??_EEPROMSearchNumber
  3687  036D  01B3               	clrf	??_EEPROMSearchNumber+1
  3688  036E  0832               	movf	??_EEPROMSearchNumber,w
  3689  036F  072F               	addwf	EEPROMSearchNumber@nmbr,w
  3690  0370  0086               	movwf	6
  3691  0371  0833               	movf	??_EEPROMSearchNumber+1,w
  3692  0372  3D30               	addwfc	EEPROMSearchNumber@nmbr+1,w
  3693  0373  0087               	movwf	7
  3694  0374  3030               	movlw	48
  3695  0375  0201               	subwf	1,w
  3696  0376  1C03               	skipc
  3697  0377  2B8F               	goto	l2003
  3698                           
  3699                           ;eeprom.c: 155: {value=value+((*(nmbr+nmbrLenght)-'0')<<4);}
  3700  0378  0831               	movf	EEPROMSearchNumber@nmbrLenght,w
  3701  0379  00B2               	movwf	??_EEPROMSearchNumber
  3702  037A  01B3               	clrf	??_EEPROMSearchNumber+1
  3703  037B  0832               	movf	??_EEPROMSearchNumber,w
  3704  037C  072F               	addwf	EEPROMSearchNumber@nmbr,w
  3705  037D  0086               	movwf	6
  3706  037E  0833               	movf	??_EEPROMSearchNumber+1,w
  3707  037F  3D30               	addwfc	EEPROMSearchNumber@nmbr+1,w
  3708  0380  0087               	movwf	7
  3709  0381  0801               	movf	1,w
  3710  0382  00B4               	movwf	??_EEPROMSearchNumber+2
  3711  0383  3003               	movlw	3
  3712  0384                     u1315:	
  3713  0384  35B4               	lslf	??_EEPROMSearchNumber+2,f
  3714  0385  3EFF               	addlw	-1
  3715  0386  1D03               	skipz
  3716  0387  2B84               	goto	u1315
  3717  0388  3534               	lslf	??_EEPROMSearchNumber+2,w
  3718  0389  073B               	addwf	EEPROMSearchNumber@value,w
  3719  038A  00B5               	movwf	??_EEPROMSearchNumber+3
  3720  038B  0835               	movf	??_EEPROMSearchNumber+3,w
  3721  038C  00BB               	movwf	EEPROMSearchNumber@value
  3722                           
  3723                           ;eeprom.c: 156: }
  3724                           ;eeprom.c: 157: }
  3725  038D  2B8F               	goto	l2003
  3726  038E                     l2001:	
  3727                           
  3728                           ;eeprom.c: 158: else
  3729                           ;eeprom.c: 159: {value='\0';}
  3730  038E  01BB               	clrf	EEPROMSearchNumber@value
  3731  038F                     l2003:	
  3732                           
  3733                           ;eeprom.c: 161: convNmbr[count-1]=value;
  3734  038F  083B               	movf	EEPROMSearchNumber@value,w
  3735  0390  00B2               	movwf	??_EEPROMSearchNumber
  3736  0391  083F               	movf	EEPROMSearchNumber@count,w
  3737  0392  3EFF               	addlw	255
  3738  0393  3E36               	addlw	EEPROMSearchNumber@convNmbr& (0+255)
  3739  0394  0086               	movwf	6
  3740  0395  0187               	clrf	7
  3741  0396  0832               	movf	??_EEPROMSearchNumber,w
  3742  0397  0081               	movwf	1
  3743                           
  3744                           ;eeprom.c: 162: value=0;
  3745  0398  01BB               	clrf	EEPROMSearchNumber@value
  3746  0399  3001               	movlw	1
  3747  039A  02BF               	subwf	EEPROMSearchNumber@count,f
  3748  039B  08BF               	movf	EEPROMSearchNumber@count,f
  3749  039C  1D03               	skipz
  3750  039D  2B46               	goto	l1985
  3751  039E                     l2011:	
  3752                           
  3753                           ;eeprom.c: 163: }
  3754                           ;eeprom.c: 164: aux=5-1;
  3755  039E  3004               	movlw	4
  3756  039F  00BC               	movwf	EEPROMSearchNumber@aux
  3757  03A0  3000               	movlw	0
  3758  03A1  2BD5               	goto	L7
  3759  03A2                     l2013:	
  3760                           ;eeprom.c: 166: while(!result && aux<(600-5))
  3761                           
  3762                           
  3763                           ;eeprom.c: 167: {
  3764                           ;eeprom.c: 168: count=0;
  3765  03A2  01BF               	clrf	EEPROMSearchNumber@count
  3766  03A3                     l2015:	
  3767                           ;eeprom.c: 169: do{
  3768                           
  3769                           
  3770                           ;eeprom.c: 170: if(EepromRead(aux-count)==convNmbr[5-(count+1)])
  3771  03A3  083F               	movf	EEPROMSearchNumber@count,w
  3772  03A4  3E01               	addlw	1
  3773  03A5  3AFF               	xorlw	255
  3774  03A6  3E01               	addlw	1
  3775  03A7  3E05               	addlw	5
  3776  03A8  3E36               	addlw	EEPROMSearchNumber@convNmbr& (0+255)
  3777  03A9  0086               	movwf	6
  3778  03AA  0187               	clrf	7
  3779  03AB  083F               	movf	EEPROMSearchNumber@count,w
  3780  03AC  00B2               	movwf	??_EEPROMSearchNumber
  3781  03AD  01B3               	clrf	??_EEPROMSearchNumber+1
  3782  03AE  09B2               	comf	??_EEPROMSearchNumber,f
  3783  03AF  09B3               	comf	??_EEPROMSearchNumber+1,f
  3784  03B0  0AB2               	incf	??_EEPROMSearchNumber,f
  3785  03B1  1903               	skipnz
  3786  03B2  0AB3               	incf	??_EEPROMSearchNumber+1,f
  3787  03B3  083C               	movf	EEPROMSearchNumber@aux,w
  3788  03B4  0732               	addwf	??_EEPROMSearchNumber,w
  3789  03B5  00AB               	movwf	EepromRead@address
  3790  03B6  083D               	movf	EEPROMSearchNumber@aux+1,w
  3791  03B7  3D33               	addwfc	??_EEPROMSearchNumber+1,w
  3792  03B8  00AC               	movwf	EepromRead@address+1
  3793  03B9  318F  2757  3183   	fcall	_EepromRead
  3794  03BC  0601               	xorwf	1,w
  3795  03BD  1D03               	skipz
  3796  03BE  2BC3               	goto	l2019
  3797                           
  3798                           ;eeprom.c: 171: {result=1;}
  3799  03BF  0020               	movlb	0	; select bank0
  3800  03C0  01BE               	clrf	EEPROMSearchNumber@result
  3801  03C1  0ABE               	incf	EEPROMSearchNumber@result,f
  3802  03C2  2BC5               	goto	l2021
  3803  03C3                     l2019:	
  3804                           
  3805                           ;eeprom.c: 172: else
  3806                           ;eeprom.c: 173: {result=0;}
  3807  03C3  0020               	movlb	0	; select bank0
  3808  03C4  01BE               	clrf	EEPROMSearchNumber@result
  3809  03C5                     l2021:	
  3810                           
  3811                           ;eeprom.c: 174: count++;
  3812  03C5  3001               	movlw	1
  3813  03C6  00B2               	movwf	??_EEPROMSearchNumber
  3814  03C7  0832               	movf	??_EEPROMSearchNumber,w
  3815  03C8  07BF               	addwf	EEPROMSearchNumber@count,f
  3816                           
  3817                           ;eeprom.c: 175: }while(result && count<(5));
  3818  03C9  083E               	movf	EEPROMSearchNumber@result,w
  3819  03CA  1903               	btfsc	3,2
  3820  03CB  2BD0               	goto	l2027
  3821  03CC  3005               	movlw	5
  3822  03CD  023F               	subwf	EEPROMSearchNumber@count,w
  3823  03CE  1C03               	skipc
  3824  03CF  2BA3               	goto	l2015
  3825  03D0                     l2027:	
  3826                           
  3827                           ;eeprom.c: 176: aux=aux+5;
  3828  03D0  083C               	movf	EEPROMSearchNumber@aux,w
  3829  03D1  3E05               	addlw	5
  3830  03D2  00BC               	movwf	EEPROMSearchNumber@aux
  3831  03D3  3000               	movlw	0
  3832  03D4  3D3D               	addwfc	EEPROMSearchNumber@aux+1,w
  3833  03D5                     L7:	
  3834  03D5  00BD               	movwf	EEPROMSearchNumber@aux+1
  3835  03D6  08BE               	movf	EEPROMSearchNumber@result,f
  3836  03D7  1D03               	skipz
  3837  03D8  2BE0               	goto	l2033
  3838  03D9  3002               	movlw	2
  3839  03DA  023D               	subwf	EEPROMSearchNumber@aux+1,w
  3840  03DB  3053               	movlw	83
  3841  03DC  1903               	skipnz
  3842  03DD  023C               	subwf	EEPROMSearchNumber@aux,w
  3843  03DE  1C03               	skipc
  3844  03DF  2BA2               	goto	l2013
  3845  03E0                     l2033:	
  3846                           
  3847                           ;eeprom.c: 177: }
  3848                           ;eeprom.c: 178: return result;
  3849  03E0  083E               	movf	EEPROMSearchNumber@result,w
  3850  03E1  0008               	return
  3851  03E2                     __end_of_EEPROMSearchNumber:	
  3852                           
  3853                           	psect	text14
  3854  0F57                     __ptext14:	
  3855 ;; *************** function _EepromRead *****************
  3856 ;; Defined at:
  3857 ;;		line 94 in file "eeprom.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  address         2   11[BANK0 ] unsigned int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  data            1   14[BANK0 ] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      unsigned char 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3871 ;;      Params:         0       2       0       0
  3872 ;;      Locals:         0       1       0       0
  3873 ;;      Temps:          0       1       0       0
  3874 ;;      Totals:         0       4       0       0
  3875 ;;Total ram usage:        4 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    3
  3878 ;; This function calls:
  3879 ;;		_EepromEnd
  3880 ;;		_EepromOpCode
  3881 ;;		_EepromReceive
  3882 ;;		_EepromStart
  3883 ;; This function is called by:
  3884 ;;		_EEPROMSearchNumber
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _EepromRead
  3890  0F57                     _EepromRead:	
  3891                           
  3892                           ;eeprom.c: 96: uint8_t data=0;
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _EepromRead: [wreg+status,2+status,0+pclath+cstack]
  3896  0F57  0020               	movlb	0	; select bank0
  3897  0F58  01AE               	clrf	EepromRead@data
  3898                           
  3899                           ;eeprom.c: 98: EepromStart();
  3900  0F59  318F  272C  318F   	fcall	_EepromStart
  3901                           
  3902                           ;eeprom.c: 99: EepromOpCode(0b00000110, address);
  3903  0F5C  0020               	movlb	0	; select bank0
  3904  0F5D  082C               	movf	EepromRead@address+1,w
  3905  0F5E  01A5               	clrf	EepromOpCode@address+1
  3906  0F5F  07A5               	addwf	EepromOpCode@address+1,f
  3907  0F60  082B               	movf	EepromRead@address,w
  3908  0F61  01A4               	clrf	EepromOpCode@address
  3909  0F62  07A4               	addwf	EepromOpCode@address,f
  3910  0F63  3006               	movlw	6
  3911  0F64  3185  25FB  318F   	fcall	_EepromOpCode
  3912                           
  3913                           ;eeprom.c: 100: data=EepromReceive();
  3914  0F67  3187  27D4  318F   	fcall	_EepromReceive
  3915  0F6A  0020               	movlb	0	; select bank0
  3916  0F6B  00AD               	movwf	??_EepromRead
  3917  0F6C  082D               	movf	??_EepromRead,w
  3918  0F6D  00AE               	movwf	EepromRead@data
  3919                           
  3920                           ;eeprom.c: 101: EepromEnd();
  3921  0F6E  318F  2707         	fcall	_EepromEnd
  3922                           
  3923                           ;eeprom.c: 102: return data;
  3924  0F70  0020               	movlb	0	; select bank0
  3925  0F71  082E               	movf	EepromRead@data,w
  3926  0F72  0008               	return
  3927  0F73                     __end_of_EepromRead:	
  3928                           
  3929                           	psect	text15
  3930  07D4                     __ptext15:	
  3931 ;; *************** function _EepromReceive *****************
  3932 ;; Defined at:
  3933 ;;		line 39 in file "eeprom.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  i               1    7[BANK0 ] char 
  3938 ;;  b               1    6[BANK0 ] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      unsigned char 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3948 ;;      Params:         0       0       0       0
  3949 ;;      Locals:         0       2       0       0
  3950 ;;      Temps:          0       2       0       0
  3951 ;;      Totals:         0       4       0       0
  3952 ;;Total ram usage:        4 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    2
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_EepromRead
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _EepromReceive
  3964  07D4                     _EepromReceive:	
  3965                           
  3966                           ;eeprom.c: 41: uint8_t b=0;
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _EepromReceive: [wreg+status,2+status,0]
  3970  07D4  0020               	movlb	0	; select bank0
  3971  07D5  01A6               	clrf	EepromReceive@b
  3972                           
  3973                           ;eeprom.c: 42: int8_t i=0;
  3974  07D6  01A7               	clrf	EepromReceive@i
  3975                           
  3976                           ;eeprom.c: 43: for(i=7;i>=0;i--)
  3977  07D7  3007               	movlw	7
  3978  07D8  00A4               	movwf	??_EepromReceive
  3979  07D9  0824               	movf	??_EepromReceive,w
  3980  07DA  00A7               	movwf	EepromReceive@i
  3981  07DB  1BA7               	btfsc	EepromReceive@i,7
  3982  07DC  2FFE               	goto	l1709
  3983  07DD                     l90:	
  3984                           
  3985                           ;eeprom.c: 44: {
  3986                           ;eeprom.c: 45: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  3987  07DD  3200               	nop2	;2 cycle nop
  3988  07DE  3200               	nop2	;2 cycle nop
  3989                           
  3990                           ;eeprom.c: 46: LATBbits.LATB6=1;
  3991  07DF  0022               	movlb	2	; select bank2
  3992  07E0  170D               	bsf	13,6	;volatile
  3993                           
  3994                           ;eeprom.c: 47: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  3995  07E1  3200               	nop2	;2 cycle nop
  3996  07E2  3200               	nop2	;2 cycle nop
  3997                           
  3998                           ;eeprom.c: 48: b=b+(PORTBbits.RB4<<i);
  3999  07E3  0020               	movlb	0	; select bank0
  4000  07E4  0E0D               	swapf	13,w	;volatile
  4001  07E5  3901               	andlw	1
  4002  07E6  00A4               	movwf	??_EepromReceive
  4003  07E7  0A27               	incf	EepromReceive@i,w
  4004  07E8  2FEA               	goto	u1054
  4005  07E9                     u1055:	
  4006  07E9  35A4               	lslf	??_EepromReceive,f
  4007  07EA                     u1054:	
  4008  07EA  0B89               	decfsz	9,f
  4009  07EB  2FE9               	goto	u1055
  4010  07EC  0824               	movf	??_EepromReceive,w
  4011  07ED  0726               	addwf	EepromReceive@b,w
  4012  07EE  00A5               	movwf	??_EepromReceive+1
  4013  07EF  0825               	movf	??_EepromReceive+1,w
  4014  07F0  00A6               	movwf	EepromReceive@b
  4015                           
  4016                           ;eeprom.c: 49: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4017  07F1  3200               	nop2	;2 cycle nop
  4018  07F2  3200               	nop2	;2 cycle nop
  4019                           
  4020                           ;eeprom.c: 50: LATBbits.LATB6=0;
  4021  07F3  0022               	movlb	2	; select bank2
  4022  07F4  130D               	bcf	13,6	;volatile
  4023                           
  4024                           ;eeprom.c: 51: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4025  07F5  3200               	nop2	;2 cycle nop
  4026  07F6  3200               	nop2	;2 cycle nop
  4027  07F7  30FF               	movlw	-1
  4028  07F8  0020               	movlb	0	; select bank0
  4029  07F9  00A4               	movwf	??_EepromReceive
  4030  07FA  0824               	movf	??_EepromReceive,w
  4031  07FB  07A7               	addwf	EepromReceive@i,f
  4032  07FC  1FA7               	btfss	EepromReceive@i,7
  4033  07FD  2FDD               	goto	l90
  4034  07FE                     l1709:	
  4035                           
  4036                           ;eeprom.c: 52: }
  4037                           ;eeprom.c: 53: return b;
  4038  07FE  0826               	movf	EepromReceive@b,w
  4039  07FF  0008               	return
  4040  0800                     __end_of_EepromReceive:	
  4041                           
  4042                           	psect	text16
  4043  03E2                     __ptext16:	
  4044 ;; *************** function _EEPROMSaveNumber *****************
  4045 ;; Defined at:
  4046 ;;		line 105 in file "eeprom.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  nmbr            2   14[BANK0 ] PTR const unsigned char 
  4049 ;;		 -> STR_2(11), STR_1(11), 
  4050 ;;  nmbrLenght      1   16[BANK0 ] unsigned char 
  4051 ;;  position        2   17[BANK0 ] unsigned int 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  address         2   24[BANK0 ] unsigned int 
  4054 ;;  value           1   27[BANK0 ] unsigned char 
  4055 ;;  count           1   26[BANK0 ] unsigned char 
  4056 ;;  result          1   23[BANK0 ] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      unsigned char 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4066 ;;      Params:         0       5       0       0
  4067 ;;      Locals:         0       5       0       0
  4068 ;;      Temps:          0       4       0       0
  4069 ;;      Totals:         0      14       0       0
  4070 ;;Total ram usage:       14 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    4
  4073 ;; This function calls:
  4074 ;;		_EepromWrite
  4075 ;;		___wmul
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function _EEPROMSaveNumber
  4083  03E2                     _EEPROMSaveNumber:	
  4084                           
  4085                           ;eeprom.c: 107: uint8_t count=0, value=0,result=1;
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in _EEPROMSaveNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4089  03E2  0020               	movlb	0	; select bank0
  4090  03E3  01BA               	clrf	EEPROMSaveNumber@count
  4091  03E4  01BB               	clrf	EEPROMSaveNumber@value
  4092  03E5  01B7               	clrf	EEPROMSaveNumber@result
  4093  03E6  0AB7               	incf	EEPROMSaveNumber@result,f
  4094                           
  4095                           ;eeprom.c: 108: uint16_t address=0;
  4096  03E7  01B8               	clrf	EEPROMSaveNumber@address
  4097  03E8  01B9               	clrf	EEPROMSaveNumber@address+1
  4098                           
  4099                           ;eeprom.c: 109: address=position*5;
  4100  03E9  0832               	movf	EEPROMSaveNumber@position+1,w
  4101  03EA  01A5               	clrf	___wmul@multiplier+1
  4102  03EB  07A5               	addwf	___wmul@multiplier+1,f
  4103  03EC  0831               	movf	EEPROMSaveNumber@position,w
  4104  03ED  01A4               	clrf	___wmul@multiplier
  4105  03EE  07A4               	addwf	___wmul@multiplier,f
  4106  03EF  3005               	movlw	5
  4107  03F0  00A6               	movwf	___wmul@multiplicand
  4108  03F1  3000               	movlw	0
  4109  03F2  00A7               	movwf	___wmul@multiplicand+1
  4110  03F3  318F  278F  3183   	fcall	___wmul
  4111  03F6  0020               	movlb	0	; select bank0
  4112  03F7  0825               	movf	?___wmul+1,w
  4113  03F8  01B9               	clrf	EEPROMSaveNumber@address+1
  4114  03F9  07B9               	addwf	EEPROMSaveNumber@address+1,f
  4115  03FA  0824               	movf	?___wmul,w
  4116  03FB  01B8               	clrf	EEPROMSaveNumber@address
  4117  03FC  07B8               	addwf	EEPROMSaveNumber@address,f
  4118                           
  4119                           ;eeprom.c: 110: address=address+(5-1);
  4120  03FD  0838               	movf	EEPROMSaveNumber@address,w
  4121  03FE  3E04               	addlw	4
  4122  03FF  00B8               	movwf	EEPROMSaveNumber@address
  4123  0400  3000               	movlw	0
  4124  0401  3D39               	addwfc	EEPROMSaveNumber@address+1,w
  4125  0402  00B9               	movwf	EEPROMSaveNumber@address+1
  4126                           
  4127                           ;eeprom.c: 112: for(count=5;count>0;count--)
  4128  0403  3005               	movlw	5
  4129  0404  00B3               	movwf	??_EEPROMSaveNumber
  4130  0405  0833               	movf	??_EEPROMSaveNumber,w
  4131  0406  00BA               	movwf	EEPROMSaveNumber@count
  4132  0407                     L8:	
  4133  0407  08BA               	movf	EEPROMSaveNumber@count,f
  4134  0408  1903               	btfsc	3,2
  4135  0409  0008               	return
  4136                           
  4137                           ;eeprom.c: 113: {
  4138                           ;eeprom.c: 114: if(nmbrLenght)
  4139  040A  0830               	movf	EEPROMSaveNumber@nmbrLenght,w
  4140  040B  1903               	btfsc	3,2
  4141  040C  2C62               	goto	l1933
  4142                           
  4143                           ;eeprom.c: 115: {
  4144                           ;eeprom.c: 116: nmbrLenght--;
  4145  040D  3001               	movlw	1
  4146  040E  02B0               	subwf	EEPROMSaveNumber@nmbrLenght,f
  4147                           
  4148                           ;eeprom.c: 117: if(*(nmbr+nmbrLenght)>='0')
  4149  040F  082F               	movf	EEPROMSaveNumber@nmbr+1,w
  4150  0410  00B4               	movwf	??_EEPROMSaveNumber+1
  4151  0411  082E               	movf	EEPROMSaveNumber@nmbr,w
  4152  0412  00B3               	movwf	??_EEPROMSaveNumber
  4153  0413  0830               	movf	EEPROMSaveNumber@nmbrLenght,w
  4154  0414  0733               	addwf	??_EEPROMSaveNumber,w
  4155  0415  0084               	movwf	4
  4156  0416  0834               	movf	??_EEPROMSaveNumber+1,w
  4157  0417  1803               	skipnc
  4158  0418  0A34               	incf	??_EEPROMSaveNumber+1,w
  4159  0419  0085               	movwf	5
  4160  041A  0800               	movf	0,w	;code access
  4161  041B  00B5               	movwf	??_EEPROMSaveNumber+2
  4162  041C  3030               	movlw	48
  4163  041D  0235               	subwf	??_EEPROMSaveNumber+2,w
  4164  041E  1C03               	skipc
  4165  041F  2C31               	goto	l1921
  4166                           
  4167                           ;eeprom.c: 118: {value=*(nmbr+nmbrLenght)-'0';}
  4168  0420  082F               	movf	EEPROMSaveNumber@nmbr+1,w
  4169  0421  00B4               	movwf	??_EEPROMSaveNumber+1
  4170  0422  082E               	movf	EEPROMSaveNumber@nmbr,w
  4171  0423  00B3               	movwf	??_EEPROMSaveNumber
  4172  0424  0830               	movf	EEPROMSaveNumber@nmbrLenght,w
  4173  0425  0733               	addwf	??_EEPROMSaveNumber,w
  4174  0426  0084               	movwf	4
  4175  0427  0834               	movf	??_EEPROMSaveNumber+1,w
  4176  0428  1803               	skipnc
  4177  0429  0A34               	incf	??_EEPROMSaveNumber+1,w
  4178  042A  0085               	movwf	5
  4179  042B  0800               	movf	0,w	;code access
  4180  042C  3ED0               	addlw	208
  4181  042D  00B5               	movwf	??_EEPROMSaveNumber+2
  4182  042E  0835               	movf	??_EEPROMSaveNumber+2,w
  4183  042F  00BB               	movwf	EEPROMSaveNumber@value
  4184  0430  2C32               	goto	l1923
  4185  0431                     l1921:	
  4186                           
  4187                           ;eeprom.c: 119: else result=0;
  4188  0431  01B7               	clrf	EEPROMSaveNumber@result
  4189  0432                     l1923:	
  4190                           
  4191                           ;eeprom.c: 120: if(nmbrLenght)
  4192  0432  0830               	movf	EEPROMSaveNumber@nmbrLenght,w
  4193  0433  1903               	btfsc	3,2
  4194  0434  2C63               	goto	l1935
  4195                           
  4196                           ;eeprom.c: 121: {
  4197                           ;eeprom.c: 122: nmbrLenght--;
  4198  0435  3001               	movlw	1
  4199  0436  02B0               	subwf	EEPROMSaveNumber@nmbrLenght,f
  4200                           
  4201                           ;eeprom.c: 123: if(*(nmbr+nmbrLenght)>='0')
  4202  0437  082F               	movf	EEPROMSaveNumber@nmbr+1,w
  4203  0438  00B4               	movwf	??_EEPROMSaveNumber+1
  4204  0439  082E               	movf	EEPROMSaveNumber@nmbr,w
  4205  043A  00B3               	movwf	??_EEPROMSaveNumber
  4206  043B  0830               	movf	EEPROMSaveNumber@nmbrLenght,w
  4207  043C  0733               	addwf	??_EEPROMSaveNumber,w
  4208  043D  0084               	movwf	4
  4209  043E  0834               	movf	??_EEPROMSaveNumber+1,w
  4210  043F  1803               	skipnc
  4211  0440  0A34               	incf	??_EEPROMSaveNumber+1,w
  4212  0441  0085               	movwf	5
  4213  0442  0800               	movf	0,w	;code access
  4214  0443  00B5               	movwf	??_EEPROMSaveNumber+2
  4215  0444  3030               	movlw	48
  4216  0445  0235               	subwf	??_EEPROMSaveNumber+2,w
  4217  0446  1C03               	skipc
  4218  0447  2C60               	goto	l1931
  4219                           
  4220                           ;eeprom.c: 124: {value=value+((*(nmbr+nmbrLenght)-'0')<<4);}
  4221  0448  082F               	movf	EEPROMSaveNumber@nmbr+1,w
  4222  0449  00B4               	movwf	??_EEPROMSaveNumber+1
  4223  044A  082E               	movf	EEPROMSaveNumber@nmbr,w
  4224  044B  00B3               	movwf	??_EEPROMSaveNumber
  4225  044C  0830               	movf	EEPROMSaveNumber@nmbrLenght,w
  4226  044D  0733               	addwf	??_EEPROMSaveNumber,w
  4227  044E  0084               	movwf	4
  4228  044F  0834               	movf	??_EEPROMSaveNumber+1,w
  4229  0450  1803               	skipnc
  4230  0451  0A34               	incf	??_EEPROMSaveNumber+1,w
  4231  0452  0085               	movwf	5
  4232  0453  0800               	movf	0,w	;code access
  4233  0454  00B5               	movwf	??_EEPROMSaveNumber+2
  4234  0455  3003               	movlw	3
  4235  0456                     u1205:	
  4236  0456  35B5               	lslf	??_EEPROMSaveNumber+2,f
  4237  0457  3EFF               	addlw	-1
  4238  0458  1D03               	skipz
  4239  0459  2C56               	goto	u1205
  4240  045A  3535               	lslf	??_EEPROMSaveNumber+2,w
  4241  045B  073B               	addwf	EEPROMSaveNumber@value,w
  4242  045C  00B6               	movwf	??_EEPROMSaveNumber+3
  4243  045D  0836               	movf	??_EEPROMSaveNumber+3,w
  4244  045E  00BB               	movwf	EEPROMSaveNumber@value
  4245  045F  2C63               	goto	l1935
  4246  0460                     l1931:	
  4247                           
  4248                           ;eeprom.c: 125: else result=0;
  4249  0460  01B7               	clrf	EEPROMSaveNumber@result
  4250                           
  4251                           ;eeprom.c: 126: }
  4252                           ;eeprom.c: 127: }
  4253  0461  2C63               	goto	l1935
  4254  0462                     l1933:	
  4255                           
  4256                           ;eeprom.c: 128: else
  4257                           ;eeprom.c: 129: {value='\0';}
  4258  0462  01BB               	clrf	EEPROMSaveNumber@value
  4259  0463                     l1935:	
  4260                           
  4261                           ;eeprom.c: 131: EepromWrite(address,value);
  4262  0463  0839               	movf	EEPROMSaveNumber@address+1,w
  4263  0464  01AC               	clrf	EepromWrite@address+1
  4264  0465  07AC               	addwf	EepromWrite@address+1,f
  4265  0466  0838               	movf	EEPROMSaveNumber@address,w
  4266  0467  01AB               	clrf	EepromWrite@address
  4267  0468  07AB               	addwf	EepromWrite@address,f
  4268  0469  083B               	movf	EEPROMSaveNumber@value,w
  4269  046A  00B3               	movwf	??_EEPROMSaveNumber
  4270  046B  0833               	movf	??_EEPROMSaveNumber,w
  4271  046C  00AD               	movwf	EepromWrite@data
  4272  046D  318F  27AD  3183   	fcall	_EepromWrite
  4273                           
  4274                           ;eeprom.c: 132: address--;
  4275  0470  3001               	movlw	1
  4276  0471  0020               	movlb	0	; select bank0
  4277  0472  02B8               	subwf	EEPROMSaveNumber@address,f
  4278  0473  3000               	movlw	0
  4279  0474  3BB9               	subwfb	EEPROMSaveNumber@address+1,f
  4280                           
  4281                           ;eeprom.c: 133: _delay((unsigned long)((5)*(8000000/4000.0)));
  4282  0475  300D               	movlw	13
  4283  0476  00B4               	movwf	??_EEPROMSaveNumber+1
  4284  0477  30FB               	movlw	251
  4285  0478  00B3               	movwf	??_EEPROMSaveNumber
  4286  0479                     u2357:	
  4287  0479  0BB3               	decfsz	??_EEPROMSaveNumber,f
  4288  047A  2C79               	goto	u2357
  4289  047B  0BB4               	decfsz	??_EEPROMSaveNumber+1,f
  4290  047C  2C79               	goto	u2357
  4291  047D  3200               	nop2
  4292                           
  4293                           ;eeprom.c: 134: value=0;
  4294  047E  0020               	movlb	0	; select bank0
  4295  047F  01BB               	clrf	EEPROMSaveNumber@value
  4296  0480  3001               	movlw	1
  4297  0481  02BA               	subwf	EEPROMSaveNumber@count,f
  4298  0482  2C07               	goto	L8
  4299  0483                     __end_of_EEPROMSaveNumber:	
  4300                           ;eeprom.c: 135: }
  4301                           ;eeprom.c: 136: return result;
  4302                           ;	Return value of _EEPROMSaveNumber is never used
  4303                           
  4304                           
  4305                           	psect	text17
  4306  0F8F                     __ptext17:	
  4307 ;; *************** function ___wmul *****************
  4308 ;; Defined at:
  4309 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  multiplier      2    4[BANK0 ] unsigned int 
  4312 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  product         2    8[BANK0 ] unsigned int 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  2    4[BANK0 ] unsigned int 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4324 ;;      Params:         0       4       0       0
  4325 ;;      Locals:         0       2       0       0
  4326 ;;      Temps:          0       0       0       0
  4327 ;;      Totals:         0       6       0       0
  4328 ;;Total ram usage:        6 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    2
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_EEPROMSaveNumber
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function ___wmul
  4340  0F8F                     ___wmul:	
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4344  0F8F  0020               	movlb	0	; select bank0
  4345  0F90  01A8               	clrf	___wmul@product
  4346  0F91  01A9               	clrf	___wmul@product+1
  4347  0F92                     l1791:	
  4348  0F92  1C24               	btfss	___wmul@multiplier,0
  4349  0F93  2F98               	goto	l456
  4350  0F94  0826               	movf	___wmul@multiplicand,w
  4351  0F95  07A8               	addwf	___wmul@product,f
  4352  0F96  0827               	movf	___wmul@multiplicand+1,w
  4353  0F97  3DA9               	addwfc	___wmul@product+1,f
  4354  0F98                     l456:	
  4355  0F98  3001               	movlw	1
  4356  0F99                     u1125:	
  4357  0F99  35A6               	lslf	___wmul@multiplicand,f
  4358  0F9A  0DA7               	rlf	___wmul@multiplicand+1,f
  4359  0F9B  0B89               	decfsz	9,f
  4360  0F9C  2F99               	goto	u1125
  4361  0F9D  3001               	movlw	1
  4362  0F9E                     u1135:	
  4363  0F9E  36A5               	lsrf	___wmul@multiplier+1,f
  4364  0F9F  0CA4               	rrf	___wmul@multiplier,f
  4365  0FA0  0B89               	decfsz	9,f
  4366  0FA1  2F9E               	goto	u1135
  4367  0FA2  0825               	movf	___wmul@multiplier+1,w
  4368  0FA3  0424               	iorwf	___wmul@multiplier,w
  4369  0FA4  1D03               	skipz
  4370  0FA5  2F92               	goto	l1791
  4371  0FA6  0829               	movf	___wmul@product+1,w
  4372  0FA7  01A5               	clrf	?___wmul+1
  4373  0FA8  07A5               	addwf	?___wmul+1,f
  4374  0FA9  0828               	movf	___wmul@product,w
  4375  0FAA  01A4               	clrf	?___wmul
  4376  0FAB  07A4               	addwf	?___wmul,f
  4377  0FAC  0008               	return
  4378  0FAD                     __end_of___wmul:	
  4379                           
  4380                           	psect	text18
  4381  0FAD                     __ptext18:	
  4382 ;; *************** function _EepromWrite *****************
  4383 ;; Defined at:
  4384 ;;		line 82 in file "eeprom.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  address         2   11[BANK0 ] unsigned int 
  4387 ;;  data            1   13[BANK0 ] unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;		None               void
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4399 ;;      Params:         0       3       0       0
  4400 ;;      Locals:         0       0       0       0
  4401 ;;      Temps:          0       0       0       0
  4402 ;;      Totals:         0       3       0       0
  4403 ;;Total ram usage:        3 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    3
  4406 ;; This function calls:
  4407 ;;		_EepromEnd
  4408 ;;		_EepromOpCode
  4409 ;;		_EepromSend
  4410 ;;		_EepromStart
  4411 ;; This function is called by:
  4412 ;;		_EEPROMSaveNumber
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _EepromWrite
  4418  0FAD                     _EepromWrite:	
  4419                           
  4420                           ;eeprom.c: 84: EepromStart();
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _EepromWrite: [wreg+status,2+status,0+pclath+cstack]
  4424  0FAD  318F  272C  318F   	fcall	_EepromStart
  4425                           
  4426                           ;eeprom.c: 85: EepromOpCode(0b00000100, 0x600);
  4427  0FB0  3000               	movlw	0
  4428  0FB1  0020               	movlb	0	; select bank0
  4429  0FB2  00A4               	movwf	EepromOpCode@address
  4430  0FB3  3006               	movlw	6
  4431  0FB4  00A5               	movwf	EepromOpCode@address+1
  4432  0FB5  3004               	movlw	4
  4433  0FB6  3185  25FB  318F   	fcall	_EepromOpCode
  4434                           
  4435                           ;eeprom.c: 86: EepromEnd();
  4436  0FB9  318F  2707  318F   	fcall	_EepromEnd
  4437                           
  4438                           ;eeprom.c: 88: EepromStart();
  4439  0FBC  318F  272C  318F   	fcall	_EepromStart
  4440                           
  4441                           ;eeprom.c: 89: EepromOpCode(0b00000101, address);
  4442  0FBF  0020               	movlb	0	; select bank0
  4443  0FC0  082C               	movf	EepromWrite@address+1,w
  4444  0FC1  01A5               	clrf	EepromOpCode@address+1
  4445  0FC2  07A5               	addwf	EepromOpCode@address+1,f
  4446  0FC3  082B               	movf	EepromWrite@address,w
  4447  0FC4  01A4               	clrf	EepromOpCode@address
  4448  0FC5  07A4               	addwf	EepromOpCode@address,f
  4449  0FC6  3005               	movlw	5
  4450  0FC7  3185  25FB  318F   	fcall	_EepromOpCode
  4451                           
  4452                           ;eeprom.c: 90: EepromSend(data);
  4453  0FCA  0020               	movlb	0	; select bank0
  4454  0FCB  082D               	movf	EepromWrite@data,w
  4455  0FCC  318F  27D2  318F   	fcall	_EepromSend
  4456                           
  4457                           ;eeprom.c: 91: EepromEnd();
  4458  0FCF  318F  2707         	fcall	_EepromEnd
  4459  0FD1  0008               	return
  4460  0FD2                     __end_of_EepromWrite:	
  4461                           
  4462                           	psect	text19
  4463  0FD2                     __ptext19:	
  4464 ;; *************** function _EepromSend *****************
  4465 ;; Defined at:
  4466 ;;		line 26 in file "eeprom.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  b               1    wreg     unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  b               1    6[BANK0 ] unsigned char 
  4471 ;;  i               1    7[BANK0 ] char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4481 ;;      Params:         0       0       0       0
  4482 ;;      Locals:         0       2       0       0
  4483 ;;      Temps:          0       2       0       0
  4484 ;;      Totals:         0       4       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    2
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_EepromWrite
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _EepromSend
  4497  0FD2                     _EepromSend:	
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _EepromSend: [wreg+status,2+status,0]
  4501                           ;EepromSend@b stored from wreg
  4502  0FD2  0020               	movlb	0	; select bank0
  4503  0FD3  00A6               	movwf	EepromSend@b
  4504                           
  4505                           ;eeprom.c: 28: int8_t i=0;
  4506  0FD4  01A7               	clrf	EepromSend@i
  4507                           
  4508                           ;eeprom.c: 29: for(i=7;i>=0;i--)
  4509  0FD5  3007               	movlw	7
  4510  0FD6  00A4               	movwf	??_EepromSend
  4511  0FD7  0824               	movf	??_EepromSend,w
  4512  0FD8  00A7               	movwf	EepromSend@i
  4513  0FD9                     L9:	
  4514  0FD9  1BA7               	btfsc	EepromSend@i,7
  4515  0FDA  0008               	return
  4516                           
  4517                           ;eeprom.c: 30: {
  4518                           ;eeprom.c: 31: LATCbits.LATC7=b>>i;
  4519  0FDB  0826               	movf	EepromSend@b,w
  4520  0FDC  00A4               	movwf	??_EepromSend
  4521  0FDD  0A27               	incf	EepromSend@i,w
  4522  0FDE  2FE0               	goto	u1024
  4523  0FDF                     u1025:	
  4524  0FDF  36A4               	lsrf	??_EepromSend,f
  4525  0FE0                     u1024:	
  4526  0FE0  0B89               	decfsz	9,f
  4527  0FE1  2FDF               	goto	u1025
  4528  0FE2  0824               	movf	??_EepromSend,w
  4529  0FE3  00A5               	movwf	??_EepromSend+1
  4530  0FE4  0CA5               	rrf	??_EepromSend+1,f
  4531  0FE5  0CA5               	rrf	??_EepromSend+1,f
  4532  0FE6  0022               	movlb	2	; select bank2
  4533  0FE7  080E               	movf	14,w	;volatile
  4534  0FE8  0020               	movlb	0	; select bank0
  4535  0FE9  0625               	xorwf	??_EepromSend+1,w
  4536  0FEA  397F               	andlw	-129
  4537  0FEB  0625               	xorwf	??_EepromSend+1,w
  4538  0FEC  0022               	movlb	2	; select bank2
  4539  0FED  008E               	movwf	14	;volatile
  4540                           
  4541                           ;eeprom.c: 32: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4542  0FEE  3200               	nop2	;2 cycle nop
  4543  0FEF  3200               	nop2	;2 cycle nop
  4544                           
  4545                           ;eeprom.c: 33: LATBbits.LATB6=1;
  4546  0FF0  0022               	movlb	2	; select bank2
  4547  0FF1  170D               	bsf	13,6	;volatile
  4548                           
  4549                           ;eeprom.c: 34: _delay((unsigned long)((4)*(8000000/4000000.0)));
  4550  0FF2  3200               	nop2	;2 cycle nop
  4551  0FF3  3200               	nop2	;2 cycle nop
  4552  0FF4  3200               	nop2	;2 cycle nop
  4553  0FF5  3200               	nop2	;2 cycle nop
  4554                           
  4555                           ;eeprom.c: 35: LATBbits.LATB6=0;
  4556  0FF6  0022               	movlb	2	; select bank2
  4557  0FF7  130D               	bcf	13,6	;volatile
  4558                           
  4559                           ;eeprom.c: 36: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4560  0FF8  3200               	nop2	;2 cycle nop
  4561  0FF9  3200               	nop2	;2 cycle nop
  4562  0FFA  30FF               	movlw	-1
  4563  0FFB  0020               	movlb	0	; select bank0
  4564  0FFC  00A4               	movwf	??_EepromSend
  4565  0FFD  0824               	movf	??_EepromSend,w
  4566  0FFE  07A7               	addwf	EepromSend@i,f
  4567  0FFF  2FD9               	goto	L9
  4568  1000                     __end_of_EepromSend:	
  4569                           
  4570                           	psect	text20
  4571  0483                     __ptext20:	
  4572 ;; *************** function _EEPROMEraseAll *****************
  4573 ;; Defined at:
  4574 ;;		line 181 in file "eeprom.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;		None               void
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4588 ;;      Params:         0       0       0       0
  4589 ;;      Locals:         0       0       0       0
  4590 ;;      Temps:          0       3       0       0
  4591 ;;      Totals:         0       3       0       0
  4592 ;;Total ram usage:        3 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    3
  4595 ;; This function calls:
  4596 ;;		_EepromEnd
  4597 ;;		_EepromOpCode
  4598 ;;		_EepromStart
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function _EEPROMEraseAll
  4606  0483                     _EEPROMEraseAll:	
  4607                           
  4608                           ;eeprom.c: 183: LATBbits.LATB7=0;
  4609                           
  4610                           ;incstack = 0
  4611                           ; Regs used in _EEPROMEraseAll: [wreg+status,2+status,0+pclath+cstack]
  4612  0483  0022               	movlb	2	; select bank2
  4613  0484  138D               	bcf	13,7	;volatile
  4614                           
  4615                           ;eeprom.c: 184: _delay((unsigned long)((100)*(8000000/4000.0)));
  4616  0485  3002               	movlw	2
  4617  0486  0020               	movlb	0	; select bank0
  4618  0487  00AD               	movwf	??_EEPROMEraseAll+2
  4619  0488  3004               	movlw	4
  4620  0489  00AC               	movwf	??_EEPROMEraseAll+1
  4621  048A  30BA               	movlw	186
  4622  048B  00AB               	movwf	??_EEPROMEraseAll
  4623  048C                     u2367:	
  4624  048C  0BAB               	decfsz	??_EEPROMEraseAll,f
  4625  048D  2C8C               	goto	u2367
  4626  048E  0BAC               	decfsz	??_EEPROMEraseAll+1,f
  4627  048F  2C8C               	goto	u2367
  4628  0490  0BAD               	decfsz	??_EEPROMEraseAll+2,f
  4629  0491  2C8C               	goto	u2367
  4630  0492  0000               	nop
  4631                           
  4632                           ;eeprom.c: 185: EepromStart();
  4633  0493  318F  272C  3184   	fcall	_EepromStart
  4634                           
  4635                           ;eeprom.c: 186: EepromOpCode(0b00000100, 0x600);
  4636  0496  3000               	movlw	0
  4637  0497  0020               	movlb	0	; select bank0
  4638  0498  00A4               	movwf	EepromOpCode@address
  4639  0499  3006               	movlw	6
  4640  049A  00A5               	movwf	EepromOpCode@address+1
  4641  049B  3004               	movlw	4
  4642  049C  3185  25FB  3184   	fcall	_EepromOpCode
  4643                           
  4644                           ;eeprom.c: 187: EepromEnd();
  4645  049F  318F  2707  3184   	fcall	_EepromEnd
  4646                           
  4647                           ;eeprom.c: 189: EepromStart();
  4648  04A2  318F  272C  3184   	fcall	_EepromStart
  4649                           
  4650                           ;eeprom.c: 190: EepromOpCode(0b00000100, 0x400);
  4651  04A5  3000               	movlw	0
  4652  04A6  0020               	movlb	0	; select bank0
  4653  04A7  00A4               	movwf	EepromOpCode@address
  4654  04A8  3004               	movlw	4
  4655  04A9  00A5               	movwf	EepromOpCode@address+1
  4656  04AA  3004               	movlw	4
  4657  04AB  3185  25FB  3184   	fcall	_EepromOpCode
  4658                           
  4659                           ;eeprom.c: 191: EepromEnd();
  4660  04AE  318F  2707  3184   	fcall	_EepromEnd
  4661                           
  4662                           ;eeprom.c: 192: _delay((unsigned long)((500)*(8000000/4000.0)));
  4663  04B1  3006               	movlw	6
  4664  04B2  0020               	movlb	0	; select bank0
  4665  04B3  00AD               	movwf	??_EEPROMEraseAll+2
  4666  04B4  3013               	movlw	19
  4667  04B5  00AC               	movwf	??_EEPROMEraseAll+1
  4668  04B6  30B1               	movlw	177
  4669  04B7  00AB               	movwf	??_EEPROMEraseAll
  4670  04B8                     u2377:	
  4671  04B8  0BAB               	decfsz	??_EEPROMEraseAll,f
  4672  04B9  2CB8               	goto	u2377
  4673  04BA  0BAC               	decfsz	??_EEPROMEraseAll+1,f
  4674  04BB  2CB8               	goto	u2377
  4675  04BC  0BAD               	decfsz	??_EEPROMEraseAll+2,f
  4676  04BD  2CB8               	goto	u2377
  4677  04BE  3200               	nop2
  4678  04BF  0008               	return
  4679  04C0                     __end_of_EEPROMEraseAll:	
  4680                           
  4681                           	psect	text21
  4682  0F2C                     __ptext21:	
  4683 ;; *************** function _EepromStart *****************
  4684 ;; Defined at:
  4685 ;;		line 5 in file "eeprom.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;		None               void
  4692 ;; Registers used:
  4693 ;;		wreg
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4699 ;;      Params:         0       0       0       0
  4700 ;;      Locals:         0       0       0       0
  4701 ;;      Temps:          0       1       0       0
  4702 ;;      Totals:         0       1       0       0
  4703 ;;Total ram usage:        1 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    2
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_EepromWrite
  4710 ;;		_EepromRead
  4711 ;;		_EEPROMEraseAll
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           
  4716                           ;psect for function _EepromStart
  4717  0F2C                     _EepromStart:	
  4718                           
  4719                           ;eeprom.c: 10: LATBbits.LATB6=0;
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in _EepromStart: [wreg]
  4723  0F2C  0022               	movlb	2	; select bank2
  4724  0F2D  130D               	bcf	13,6	;volatile
  4725                           
  4726                           ;eeprom.c: 11: LATBbits.LATB7=1;
  4727  0F2E  178D               	bsf	13,7	;volatile
  4728                           
  4729                           ;eeprom.c: 12: LATCbits.LATC7=1;
  4730  0F2F  178E               	bsf	14,7	;volatile
  4731                           
  4732                           ;eeprom.c: 13: _delay((unsigned long)((4)*(8000000/4000000.0)));
  4733  0F30  3200               	nop2	;2 cycle nop
  4734  0F31  3200               	nop2	;2 cycle nop
  4735  0F32  3200               	nop2	;2 cycle nop
  4736  0F33  3200               	nop2	;2 cycle nop
  4737                           
  4738                           ;eeprom.c: 14: LATBbits.LATB6=1;
  4739  0F34  0022               	movlb	2	; select bank2
  4740  0F35  170D               	bsf	13,6	;volatile
  4741                           
  4742                           ;eeprom.c: 15: _delay((unsigned long)((4)*(8000000/4000000.0)));
  4743  0F36  3200               	nop2	;2 cycle nop
  4744  0F37  3200               	nop2	;2 cycle nop
  4745  0F38  3200               	nop2	;2 cycle nop
  4746  0F39  3200               	nop2	;2 cycle nop
  4747                           
  4748                           ;eeprom.c: 16: LATBbits.LATB6=0;
  4749  0F3A  0022               	movlb	2	; select bank2
  4750  0F3B  130D               	bcf	13,6	;volatile
  4751                           
  4752                           ;eeprom.c: 17: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4753  0F3C  3200               	nop2	;2 cycle nop
  4754  0F3D  3200               	nop2	;2 cycle nop
  4755  0F3E  0008               	return
  4756  0F3F                     __end_of_EepromStart:	
  4757                           
  4758                           	psect	text22
  4759  05FB                     __ptext22:	
  4760 ;; *************** function _EepromOpCode *****************
  4761 ;; Defined at:
  4762 ;;		line 55 in file "eeprom.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  opcode          1    wreg     unsigned char 
  4765 ;;  address         2    4[BANK0 ] unsigned int 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  opcode          1    9[BANK0 ] unsigned char 
  4768 ;;  i               1   10[BANK0 ] char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;		None               void
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4778 ;;      Params:         0       2       0       0
  4779 ;;      Locals:         0       2       0       0
  4780 ;;      Temps:          0       3       0       0
  4781 ;;      Totals:         0       7       0       0
  4782 ;;Total ram usage:        7 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    2
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_EepromWrite
  4789 ;;		_EepromRead
  4790 ;;		_EEPROMEraseAll
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _EepromOpCode
  4796  05FB                     _EepromOpCode:	
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _EepromOpCode: [wreg+status,2+status,0]
  4800                           ;EepromOpCode@opcode stored from wreg
  4801  05FB  0020               	movlb	0	; select bank0
  4802  05FC  00A9               	movwf	EepromOpCode@opcode
  4803                           
  4804                           ;eeprom.c: 57: int8_t i=0;
  4805  05FD  01AA               	clrf	EepromOpCode@i
  4806                           
  4807                           ;eeprom.c: 58: LATCbits.LATC7=opcode>>1&0b00000001;
  4808  05FE  3629               	lsrf	EepromOpCode@opcode,w
  4809  05FF  3901               	andlw	1
  4810  0600  00A6               	movwf	??_EepromOpCode
  4811  0601  0CA6               	rrf	??_EepromOpCode,f
  4812  0602  0CA6               	rrf	??_EepromOpCode,f
  4813  0603  0022               	movlb	2	; select bank2
  4814  0604  080E               	movf	14,w	;volatile
  4815  0605  0020               	movlb	0	; select bank0
  4816  0606  0626               	xorwf	??_EepromOpCode,w
  4817  0607  397F               	andlw	-129
  4818  0608  0626               	xorwf	??_EepromOpCode,w
  4819  0609  0022               	movlb	2	; select bank2
  4820  060A  008E               	movwf	14	;volatile
  4821                           
  4822                           ;eeprom.c: 59: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4823  060B  3200               	nop2	;2 cycle nop
  4824  060C  3200               	nop2	;2 cycle nop
  4825                           
  4826                           ;eeprom.c: 60: LATBbits.LATB6=1;
  4827  060D  0022               	movlb	2	; select bank2
  4828  060E  170D               	bsf	13,6	;volatile
  4829                           
  4830                           ;eeprom.c: 61: _delay((unsigned long)((4)*(8000000/4000000.0)));
  4831  060F  3200               	nop2	;2 cycle nop
  4832  0610  3200               	nop2	;2 cycle nop
  4833  0611  3200               	nop2	;2 cycle nop
  4834  0612  3200               	nop2	;2 cycle nop
  4835                           
  4836                           ;eeprom.c: 62: LATBbits.LATB6=0;
  4837  0613  0022               	movlb	2	; select bank2
  4838  0614  130D               	bcf	13,6	;volatile
  4839                           
  4840                           ;eeprom.c: 63: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4841  0615  3200               	nop2	;2 cycle nop
  4842  0616  3200               	nop2	;2 cycle nop
  4843                           
  4844                           ;eeprom.c: 65: LATCbits.LATC7=opcode&0b00000001;
  4845  0617  0020               	movlb	0	; select bank0
  4846  0618  0829               	movf	EepromOpCode@opcode,w
  4847  0619  3901               	andlw	1
  4848  061A  00A6               	movwf	??_EepromOpCode
  4849  061B  0CA6               	rrf	??_EepromOpCode,f
  4850  061C  0CA6               	rrf	??_EepromOpCode,f
  4851  061D  0022               	movlb	2	; select bank2
  4852  061E  080E               	movf	14,w	;volatile
  4853  061F  0020               	movlb	0	; select bank0
  4854  0620  0626               	xorwf	??_EepromOpCode,w
  4855  0621  397F               	andlw	-129
  4856  0622  0626               	xorwf	??_EepromOpCode,w
  4857  0623  0022               	movlb	2	; select bank2
  4858  0624  008E               	movwf	14	;volatile
  4859                           
  4860                           ;eeprom.c: 66: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4861  0625  3200               	nop2	;2 cycle nop
  4862  0626  3200               	nop2	;2 cycle nop
  4863                           
  4864                           ;eeprom.c: 67: LATBbits.LATB6=1;
  4865  0627  0022               	movlb	2	; select bank2
  4866  0628  170D               	bsf	13,6	;volatile
  4867                           
  4868                           ;eeprom.c: 68: _delay((unsigned long)((4)*(8000000/4000000.0)));
  4869  0629  3200               	nop2	;2 cycle nop
  4870  062A  3200               	nop2	;2 cycle nop
  4871  062B  3200               	nop2	;2 cycle nop
  4872  062C  3200               	nop2	;2 cycle nop
  4873                           
  4874                           ;eeprom.c: 69: LATBbits.LATB6=0;
  4875  062D  0022               	movlb	2	; select bank2
  4876  062E  130D               	bcf	13,6	;volatile
  4877                           
  4878                           ;eeprom.c: 70: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4879  062F  3200               	nop2	;2 cycle nop
  4880  0630  3200               	nop2	;2 cycle nop
  4881                           
  4882                           ;eeprom.c: 72: for(i=10;i>=0;i--)
  4883  0631  300A               	movlw	10
  4884  0632  0020               	movlb	0	; select bank0
  4885  0633  00A6               	movwf	??_EepromOpCode
  4886  0634  0826               	movf	??_EepromOpCode,w
  4887  0635  00AA               	movwf	EepromOpCode@i
  4888  0636                     L10:	
  4889  0636  1BAA               	btfsc	EepromOpCode@i,7
  4890  0637  0008               	return
  4891                           
  4892                           ;eeprom.c: 73: {
  4893                           ;eeprom.c: 74: LATCbits.LATC7=address>>i&0b00000001;
  4894  0638  0825               	movf	EepromOpCode@address+1,w
  4895  0639  00A7               	movwf	??_EepromOpCode+1
  4896  063A  0824               	movf	EepromOpCode@address,w
  4897  063B  00A6               	movwf	??_EepromOpCode
  4898  063C  0A2A               	incf	EepromOpCode@i,w
  4899  063D  2E40               	goto	u1084
  4900  063E                     u1085:	
  4901  063E  36A7               	lsrf	??_EepromOpCode+1,f
  4902  063F  0CA6               	rrf	??_EepromOpCode,f
  4903  0640                     u1084:	
  4904  0640  0B89               	decfsz	9,f
  4905  0641  2E3E               	goto	u1085
  4906  0642  0826               	movf	??_EepromOpCode,w
  4907  0643  3901               	andlw	1
  4908  0644  00A8               	movwf	??_EepromOpCode+2
  4909  0645  0CA8               	rrf	??_EepromOpCode+2,f
  4910  0646  0CA8               	rrf	??_EepromOpCode+2,f
  4911  0647  0022               	movlb	2	; select bank2
  4912  0648  080E               	movf	14,w	;volatile
  4913  0649  0020               	movlb	0	; select bank0
  4914  064A  0628               	xorwf	??_EepromOpCode+2,w
  4915  064B  397F               	andlw	-129
  4916  064C  0628               	xorwf	??_EepromOpCode+2,w
  4917  064D  0022               	movlb	2	; select bank2
  4918  064E  008E               	movwf	14	;volatile
  4919                           
  4920                           ;eeprom.c: 75: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4921  064F  3200               	nop2	;2 cycle nop
  4922  0650  3200               	nop2	;2 cycle nop
  4923                           
  4924                           ;eeprom.c: 76: LATBbits.LATB6=1;
  4925  0651  0022               	movlb	2	; select bank2
  4926  0652  170D               	bsf	13,6	;volatile
  4927                           
  4928                           ;eeprom.c: 77: _delay((unsigned long)((4)*(8000000/4000000.0)));
  4929  0653  3200               	nop2	;2 cycle nop
  4930  0654  3200               	nop2	;2 cycle nop
  4931  0655  3200               	nop2	;2 cycle nop
  4932  0656  3200               	nop2	;2 cycle nop
  4933                           
  4934                           ;eeprom.c: 78: LATBbits.LATB6=0;
  4935  0657  0022               	movlb	2	; select bank2
  4936  0658  130D               	bcf	13,6	;volatile
  4937                           
  4938                           ;eeprom.c: 79: _delay((unsigned long)((4/2)*(8000000/4000000.0)));
  4939  0659  3200               	nop2	;2 cycle nop
  4940  065A  3200               	nop2	;2 cycle nop
  4941  065B  30FF               	movlw	-1
  4942  065C  0020               	movlb	0	; select bank0
  4943  065D  00A6               	movwf	??_EepromOpCode
  4944  065E  0826               	movf	??_EepromOpCode,w
  4945  065F  07AA               	addwf	EepromOpCode@i,f
  4946  0660  2E36               	goto	L10
  4947  0661                     __end_of_EepromOpCode:	
  4948                           
  4949                           	psect	text23
  4950  0F07                     __ptext23:	
  4951 ;; *************** function _EepromEnd *****************
  4952 ;; Defined at:
  4953 ;;		line 19 in file "eeprom.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;		None               void
  4960 ;; Registers used:
  4961 ;;		wreg
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4967 ;;      Params:         0       0       0       0
  4968 ;;      Locals:         0       0       0       0
  4969 ;;      Temps:          0       1       0       0
  4970 ;;      Totals:         0       1       0       0
  4971 ;;Total ram usage:        1 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    2
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_EepromWrite
  4978 ;;		_EepromRead
  4979 ;;		_EEPROMEraseAll
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _EepromEnd
  4985  0F07                     _EepromEnd:	
  4986                           
  4987                           ;eeprom.c: 21: LATBbits.LATB6=0;
  4988                           
  4989                           ;incstack = 0
  4990                           ; Regs used in _EepromEnd: [wreg]
  4991  0F07  0022               	movlb	2	; select bank2
  4992  0F08  130D               	bcf	13,6	;volatile
  4993                           
  4994                           ;eeprom.c: 22: LATBbits.LATB7=0;
  4995  0F09  138D               	bcf	13,7	;volatile
  4996                           
  4997                           ;eeprom.c: 23: LATCbits.LATC7=0;
  4998  0F0A  138E               	bcf	14,7	;volatile
  4999                           
  5000                           ;eeprom.c: 24: _delay((unsigned long)((4)*(8000000/4000000.0)));
  5001  0F0B  3200               	nop2	;2 cycle nop
  5002  0F0C  3200               	nop2	;2 cycle nop
  5003  0F0D  3200               	nop2	;2 cycle nop
  5004  0F0E  3200               	nop2	;2 cycle nop
  5005  0F0F  0008               	return
  5006  0F10                     __end_of_EepromEnd:	
  5007                           
  5008                           	psect	intentry
  5009  0004                     __pintentry:	
  5010 ;; *************** function _ISR *****************
  5011 ;; Defined at:
  5012 ;;		line 6 in file "isr.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5026 ;;      Params:         0       0       0       0
  5027 ;;      Locals:         0       0       0       0
  5028 ;;      Temps:          1       0       0       0
  5029 ;;      Totals:         1       0       0       0
  5030 ;;Total ram usage:        1 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    1
  5033 ;; This function calls:
  5034 ;;		_USARTHandleRxInt
  5035 ;; This function is called by:
  5036 ;;		Interrupt level 1
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040  0004                     _ISR:	
  5041                           
  5042                           ;incstack = 0
  5043                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5044  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5045  0005  3180               	pagesel	$
  5046  0006  0020               	movlb	0	; select bank0
  5047  0007  087F               	movf	127,w
  5048  0008  00FB               	movwf	??_ISR
  5049                           
  5050                           ;isr.c: 8: if (RCIE && RCIF) {
  5051  0009  0021               	movlb	1	; select bank1
  5052  000A  1E91               	btfss	17,5	;volatile
  5053  000B  2811               	goto	i1l190
  5054  000C  0020               	movlb	0	; select bank0
  5055  000D  1E91               	btfss	17,5	;volatile
  5056  000E  2811               	goto	i1l190
  5057                           
  5058                           ;isr.c: 9: USARTHandleRxInt();
  5059  000F  3180  202E         	fcall	_USARTHandleRxInt
  5060  0011                     i1l190:	
  5061                           ;isr.c: 10: return;
  5062                           
  5063  0011  087B               	movf	??_ISR,w
  5064  0012  0020               	movlb	0	; select bank0
  5065  0013  00FF               	movwf	127
  5066  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  5067  0015  0009               	retfie
  5068  0016                     __end_of_ISR:	
  5069                           
  5070                           	psect	text25
  5071  002E                     __ptext25:	
  5072 ;; *************** function _USARTHandleRxInt *****************
  5073 ;; Defined at:
  5074 ;;		line 73 in file "usart.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  ci              1    3[BANK0 ] unsigned char 
  5079 ;;  ci              1    2[BANK0 ] unsigned char 
  5080 ;;  ci              1    1[BANK0 ] unsigned char 
  5081 ;;  data            1    0[BANK0 ] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;		None               void
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5091 ;;      Params:         0       0       0       0
  5092 ;;      Locals:         0       4       0       0
  5093 ;;      Temps:         11       0       0       0
  5094 ;;      Totals:        11       4       0       0
  5095 ;;Total ram usage:       15 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_ISR
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           
  5105                           ;psect for function _USARTHandleRxInt
  5106  002E                     _USARTHandleRxInt:	
  5107                           
  5108                           ;usart.c: 75: LATCbits.LATC1=1;
  5109                           
  5110                           ;incstack = 0
  5111                           ; Regs used in _USARTHandleRxInt: [wreg-fsr1h+status,2+status,0]
  5112  002E  0022               	movlb	2	; select bank2
  5113  002F  148E               	bsf	14,1	;volatile
  5114                           
  5115                           ;usart.c: 77: char data=RCREG;
  5116  0030  0023               	movlb	3	; select bank3
  5117  0031  0819               	movf	25,w	;volatile
  5118  0032  00F0               	movwf	??_USARTHandleRxInt
  5119  0033  0870               	movf	??_USARTHandleRxInt,w
  5120  0034  0020               	movlb	0	; select bank0
  5121  0035  00A0               	movwf	USARTHandleRxInt@data
  5122                           
  5123                           ;usart.c: 78: SIM800L.busy=1;
  5124  0036  3052               	movlw	82
  5125  0037  0086               	movwf	6
  5126  0038  3020               	movlw	32
  5127  0039  0087               	movwf	7
  5128  003A  3001               	movlw	1
  5129  003B  3FC0               	movwi [0]fsr1
  5130                           
  5131                           ;usart.c: 79: switch(data)
  5132  003C  2A3B               	goto	i1l2187
  5133  003D                     i1l2091:	
  5134                           ;usart.c: 80: {
  5135                           ;usart.c: 81: case '\r':
  5136                           
  5137                           
  5138                           ;usart.c: 82: if(SIM800L.uncomplete==1 && bufque==0){SIM800L.uncomplete=0;}
  5139  003D  3052               	movlw	82
  5140  003E  0086               	movwf	6
  5141  003F  3020               	movlw	32
  5142  0040  0087               	movwf	7
  5143  0041  3141               	addfsr 1,1
  5144  0042  0801               	movf	1,w
  5145  0043  3A01               	xorlw	1
  5146  0044  1D03               	skipz
  5147  0045  2A43               	goto	i1l318
  5148  0046  08C8               	movf	_bufque,f
  5149  0047  1D03               	skipz
  5150  0048  2A43               	goto	i1l318
  5151  0049  3052               	movlw	82
  5152  004A  0086               	movwf	6
  5153  004B  3020               	movlw	32
  5154  004C  0087               	movwf	7
  5155  004D  3141               	addfsr 1,1
  5156  004E  0181               	clrf	1
  5157                           
  5158                           ;usart.c: 83: break;
  5159  004F  2A43               	goto	i1l318
  5160  0050                     i1l2097:	
  5161                           ;usart.c: 84: case '\n':
  5162                           
  5163                           
  5164                           ;usart.c: 85: if(SIM800L.uncomplete==0) SIM800L.uncomplete=1;
  5165  0050  3052               	movlw	82
  5166  0051  0086               	movwf	6
  5167  0052  3020               	movlw	32
  5168  0053  0087               	movwf	7
  5169  0054  3141               	addfsr 1,1
  5170  0055  0801               	movf	1,w
  5171  0056  1D03               	skipz
  5172  0057  285F               	goto	i1l2101
  5173  0058  3053               	movlw	83
  5174  0059  0086               	movwf	6
  5175  005A  3020               	movlw	32
  5176  005B  0087               	movwf	7
  5177  005C  3001               	movlw	1
  5178  005D  0081               	movwf	1
  5179  005E  2A18               	goto	i1l2177
  5180  005F                     i1l2101:	
  5181                           
  5182                           ;usart.c: 86: else
  5183                           ;usart.c: 87: {
  5184                           ;usart.c: 88: SIM800L.buffer[bufque]=0;
  5185  005F  0848               	movf	_bufque,w
  5186  0060  00F0               	movwf	??_USARTHandleRxInt
  5187  0061  01F1               	clrf	??_USARTHandleRxInt+1
  5188  0062  306B               	movlw	107
  5189  0063  00F2               	movwf	??_USARTHandleRxInt+2
  5190  0064  3020               	movlw	32
  5191  0065  00F3               	movwf	??_USARTHandleRxInt+3
  5192  0066  0870               	movf	??_USARTHandleRxInt,w
  5193  0067  0772               	addwf	??_USARTHandleRxInt+2,w
  5194  0068  0086               	movwf	6
  5195  0069  0871               	movf	??_USARTHandleRxInt+1,w
  5196  006A  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5197  006B  0087               	movwf	7
  5198  006C  0181               	clrf	1
  5199                           
  5200                           ;usart.c: 90: SIM800L.uncomplete=0;
  5201  006D  3052               	movlw	82
  5202  006E  0086               	movwf	6
  5203  006F  3020               	movlw	32
  5204  0070  0087               	movwf	7
  5205  0071  3141               	addfsr 1,1
  5206  0072  0181               	clrf	1
  5207                           
  5208                           ;usart.c: 91: if(SIM800L.buffer[0]=='+')
  5209  0073  3052               	movlw	82
  5210  0074  0086               	movwf	6
  5211  0075  3020               	movlw	32
  5212  0076  0087               	movwf	7
  5213  0077  3159               	addfsr 1,25
  5214  0078  0801               	movf	1,w
  5215  0079  3A2B               	xorlw	43
  5216  007A  1D03               	skipz
  5217  007B  2A17               	goto	i1l2175
  5218                           
  5219                           ;usart.c: 92: {
  5220                           ;usart.c: 93: if(SIM800L.buffer[1]=='C' && SIM800L.buffer[2]=='L' && SIM800L.buffer[3]==
      +                          'I' )
  5221  007C  3052               	movlw	82
  5222  007D  0086               	movwf	6
  5223  007E  3020               	movlw	32
  5224  007F  0087               	movwf	7
  5225  0080  315A               	addfsr 1,26
  5226  0081  0801               	movf	1,w
  5227  0082  3A43               	xorlw	67
  5228  0083  1D03               	skipz
  5229  0084  28F6               	goto	i1l2125
  5230  0085  3052               	movlw	82
  5231  0086  0086               	movwf	6
  5232  0087  3020               	movlw	32
  5233  0088  0087               	movwf	7
  5234  0089  315B               	addfsr 1,27
  5235  008A  0801               	movf	1,w
  5236  008B  3A4C               	xorlw	76
  5237  008C  1D03               	skipz
  5238  008D  28F6               	goto	i1l2125
  5239  008E  3052               	movlw	82
  5240  008F  0086               	movwf	6
  5241  0090  3020               	movlw	32
  5242  0091  0087               	movwf	7
  5243  0092  315C               	addfsr 1,28
  5244  0093  0801               	movf	1,w
  5245  0094  3A49               	xorlw	73
  5246  0095  1D03               	skipz
  5247  0096  28F6               	goto	i1l2125
  5248                           
  5249                           ;usart.c: 94: {
  5250                           ;usart.c: 95: uint8_t ci=8;
  5251  0097  3008               	movlw	8
  5252  0098  00F0               	movwf	??_USARTHandleRxInt
  5253  0099  0870               	movf	??_USARTHandleRxInt,w
  5254  009A  00A1               	movwf	USARTHandleRxInt@ci
  5255                           
  5256                           ;usart.c: 96: while(SIM800L.buffer[ci]!='\"' && (ci-8)<15)
  5257  009B  28E2               	goto	i1l2121
  5258  009C                     i1l2123:	
  5259  009C  0821               	movf	USARTHandleRxInt@ci,w
  5260  009D  3EF8               	addlw	248
  5261  009E  00F0               	movwf	??_USARTHandleRxInt
  5262  009F  30FF               	movlw	255
  5263  00A0  1803               	skipnc
  5264  00A1  3000               	movlw	0
  5265  00A2  00F1               	movwf	??_USARTHandleRxInt+1
  5266  00A3  0871               	movf	??_USARTHandleRxInt+1,w
  5267  00A4  3A80               	xorlw	128
  5268  00A5  00F2               	movwf	??_USARTHandleRxInt+2
  5269  00A6  3080               	movlw	128
  5270  00A7  0272               	subwf	??_USARTHandleRxInt+2,w
  5271  00A8  1D03               	skipz
  5272  00A9  28AC               	goto	u147_25
  5273  00AA  300F               	movlw	15
  5274  00AB  0270               	subwf	??_USARTHandleRxInt,w
  5275  00AC                     u147_25:	
  5276  00AC  1803               	btfsc	3,0
  5277  00AD  28F3               	goto	i1l328
  5278                           
  5279                           ;usart.c: 97: {
  5280                           ;usart.c: 98: SIM800L.cell[ci-8]=SIM800L.buffer[ci];
  5281  00AE  0020               	movlb	0	; select bank0
  5282  00AF  0821               	movf	USARTHandleRxInt@ci,w
  5283  00B0  00F0               	movwf	??_USARTHandleRxInt
  5284  00B1  01F1               	clrf	??_USARTHandleRxInt+1
  5285  00B2  306B               	movlw	107
  5286  00B3  00F2               	movwf	??_USARTHandleRxInt+2
  5287  00B4  3020               	movlw	32
  5288  00B5  00F3               	movwf	??_USARTHandleRxInt+3
  5289  00B6  0870               	movf	??_USARTHandleRxInt,w
  5290  00B7  0772               	addwf	??_USARTHandleRxInt+2,w
  5291  00B8  0086               	movwf	6
  5292  00B9  0871               	movf	??_USARTHandleRxInt+1,w
  5293  00BA  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5294  00BB  0087               	movwf	7
  5295  00BC  0801               	movf	1,w
  5296  00BD  00F4               	movwf	??_USARTHandleRxInt+4
  5297  00BE  0821               	movf	USARTHandleRxInt@ci,w
  5298  00BF  3EF8               	addlw	248
  5299  00C0  00F5               	movwf	??_USARTHandleRxInt+5
  5300  00C1  30FF               	movlw	255
  5301  00C2  1803               	skipnc
  5302  00C3  3000               	movlw	0
  5303  00C4  00F6               	movwf	??_USARTHandleRxInt+6
  5304  00C5  3055               	movlw	85
  5305  00C6  00F7               	movwf	??_USARTHandleRxInt+7
  5306  00C7  3020               	movlw	32
  5307  00C8  00F8               	movwf	??_USARTHandleRxInt+8
  5308  00C9  0875               	movf	??_USARTHandleRxInt+5,w
  5309  00CA  0777               	addwf	??_USARTHandleRxInt+7,w
  5310  00CB  00F9               	movwf	??_USARTHandleRxInt+9
  5311  00CC  0876               	movf	??_USARTHandleRxInt+6,w
  5312  00CD  3D78               	addwfc	??_USARTHandleRxInt+8,w
  5313  00CE  00FA               	movwf	??_USARTHandleRxInt+10
  5314  00CF  0879               	movf	??_USARTHandleRxInt+9,w
  5315  00D0  0086               	movwf	6
  5316  00D1  087A               	movf	??_USARTHandleRxInt+10,w
  5317  00D2  0087               	movwf	7
  5318  00D3  0874               	movf	??_USARTHandleRxInt+4,w
  5319  00D4  0081               	movwf	1
  5320                           
  5321                           ;usart.c: 99: ci++;
  5322  00D5  3001               	movlw	1
  5323  00D6  00F0               	movwf	??_USARTHandleRxInt
  5324  00D7  0870               	movf	??_USARTHandleRxInt,w
  5325  00D8  07A1               	addwf	USARTHandleRxInt@ci,f
  5326                           
  5327                           ;usart.c: 100: SIM800L.cell_lenght++;
  5328  00D9  3001               	movlw	1
  5329  00DA  00F0               	movwf	??_USARTHandleRxInt
  5330  00DB  3052               	movlw	82
  5331  00DC  0086               	movwf	6
  5332  00DD  3020               	movlw	32
  5333  00DE  0087               	movwf	7
  5334  00DF  3152               	addfsr 1,18
  5335  00E0  0870               	movf	??_USARTHandleRxInt,w
  5336  00E1  0781               	addwf	1,f
  5337  00E2                     i1l2121:	
  5338  00E2  0821               	movf	USARTHandleRxInt@ci,w
  5339  00E3  00F0               	movwf	??_USARTHandleRxInt
  5340  00E4  01F1               	clrf	??_USARTHandleRxInt+1
  5341  00E5  306B               	movlw	107
  5342  00E6  00F2               	movwf	??_USARTHandleRxInt+2
  5343  00E7  3020               	movlw	32
  5344  00E8  00F3               	movwf	??_USARTHandleRxInt+3
  5345  00E9  0870               	movf	??_USARTHandleRxInt,w
  5346  00EA  0772               	addwf	??_USARTHandleRxInt+2,w
  5347  00EB  0086               	movwf	6
  5348  00EC  0871               	movf	??_USARTHandleRxInt+1,w
  5349  00ED  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5350  00EE  0087               	movwf	7
  5351  00EF  0801               	movf	1,w
  5352  00F0  3A22               	xorlw	34
  5353  00F1  1D03               	btfss	3,2
  5354  00F2  289C               	goto	i1l2123
  5355  00F3                     i1l328:	
  5356                           
  5357                           ;usart.c: 101: }
  5358                           ;usart.c: 102: task=1;
  5359  00F3  0020               	movlb	0	; select bank0
  5360  00F4  01CA               	clrf	_task
  5361  00F5  0ACA               	incf	_task,f
  5362  00F6                     i1l2125:	
  5363                           
  5364                           ;usart.c: 103: }
  5365                           ;usart.c: 104: if(SIM800L.buffer[1]=='C' && SIM800L.buffer[2]=='M' && SIM800L.buffer[3]=
      +                          ='T' && SIM800L.buffer[4]=='I' )
  5366  00F6  3052               	movlw	82
  5367  00F7  0086               	movwf	6
  5368  00F8  3020               	movlw	32
  5369  00F9  0087               	movwf	7
  5370  00FA  315A               	addfsr 1,26
  5371  00FB  0801               	movf	1,w
  5372  00FC  3A43               	xorlw	67
  5373  00FD  1D03               	skipz
  5374  00FE  2987               	goto	i1l2149
  5375  00FF  3052               	movlw	82
  5376  0100  0086               	movwf	6
  5377  0101  3020               	movlw	32
  5378  0102  0087               	movwf	7
  5379  0103  315B               	addfsr 1,27
  5380  0104  0801               	movf	1,w
  5381  0105  3A4D               	xorlw	77
  5382  0106  1D03               	skipz
  5383  0107  2987               	goto	i1l2149
  5384  0108  3052               	movlw	82
  5385  0109  0086               	movwf	6
  5386  010A  3020               	movlw	32
  5387  010B  0087               	movwf	7
  5388  010C  315C               	addfsr 1,28
  5389  010D  0801               	movf	1,w
  5390  010E  3A54               	xorlw	84
  5391  010F  1D03               	skipz
  5392  0110  2987               	goto	i1l2149
  5393  0111  3052               	movlw	82
  5394  0112  0086               	movwf	6
  5395  0113  3020               	movlw	32
  5396  0114  0087               	movwf	7
  5397  0115  315D               	addfsr 1,29
  5398  0116  0801               	movf	1,w
  5399  0117  3A49               	xorlw	73
  5400  0118  1D03               	skipz
  5401  0119  2987               	goto	i1l2149
  5402                           
  5403                           ;usart.c: 105: {
  5404                           ;usart.c: 106: uint8_t ci=12;
  5405  011A  300C               	movlw	12
  5406  011B  00F0               	movwf	??_USARTHandleRxInt
  5407  011C  0870               	movf	??_USARTHandleRxInt,w
  5408  011D  00A2               	movwf	USARTHandleRxInt@ci_575
  5409                           
  5410                           ;usart.c: 107: while(SIM800L.buffer[ci]>='0' && SIM800L.buffer[ci]<='9' )
  5411  011E  2949               	goto	i1l2139
  5412  011F                     i1l2135:	
  5413                           
  5414                           ;usart.c: 108: {
  5415                           ;usart.c: 109: SIM800L.smsmem[ci-12]=SIM800L.buffer[ci];
  5416  011F  0822               	movf	USARTHandleRxInt@ci_575,w
  5417  0120  00F0               	movwf	??_USARTHandleRxInt
  5418  0121  01F1               	clrf	??_USARTHandleRxInt+1
  5419  0122  306B               	movlw	107
  5420  0123  00F2               	movwf	??_USARTHandleRxInt+2
  5421  0124  3020               	movlw	32
  5422  0125  00F3               	movwf	??_USARTHandleRxInt+3
  5423  0126  0870               	movf	??_USARTHandleRxInt,w
  5424  0127  0772               	addwf	??_USARTHandleRxInt+2,w
  5425  0128  0086               	movwf	6
  5426  0129  0871               	movf	??_USARTHandleRxInt+1,w
  5427  012A  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5428  012B  0087               	movwf	7
  5429  012C  0801               	movf	1,w
  5430  012D  00F4               	movwf	??_USARTHandleRxInt+4
  5431  012E  0822               	movf	USARTHandleRxInt@ci_575,w
  5432  012F  3EF4               	addlw	244
  5433  0130  00F5               	movwf	??_USARTHandleRxInt+5
  5434  0131  30FF               	movlw	255
  5435  0132  1803               	skipnc
  5436  0133  3000               	movlw	0
  5437  0134  00F6               	movwf	??_USARTHandleRxInt+6
  5438  0135  3066               	movlw	102
  5439  0136  00F7               	movwf	??_USARTHandleRxInt+7
  5440  0137  3020               	movlw	32
  5441  0138  00F8               	movwf	??_USARTHandleRxInt+8
  5442  0139  0875               	movf	??_USARTHandleRxInt+5,w
  5443  013A  0777               	addwf	??_USARTHandleRxInt+7,w
  5444  013B  00F9               	movwf	??_USARTHandleRxInt+9
  5445  013C  0876               	movf	??_USARTHandleRxInt+6,w
  5446  013D  3D78               	addwfc	??_USARTHandleRxInt+8,w
  5447  013E  00FA               	movwf	??_USARTHandleRxInt+10
  5448  013F  0879               	movf	??_USARTHandleRxInt+9,w
  5449  0140  0086               	movwf	6
  5450  0141  087A               	movf	??_USARTHandleRxInt+10,w
  5451  0142  0087               	movwf	7
  5452  0143  0874               	movf	??_USARTHandleRxInt+4,w
  5453  0144  0081               	movwf	1
  5454                           
  5455                           ;usart.c: 110: ci++;
  5456  0145  3001               	movlw	1
  5457  0146  00F0               	movwf	??_USARTHandleRxInt
  5458  0147  0870               	movf	??_USARTHandleRxInt,w
  5459  0148  07A2               	addwf	USARTHandleRxInt@ci_575,f
  5460  0149                     i1l2139:	
  5461  0149  0822               	movf	USARTHandleRxInt@ci_575,w
  5462  014A  00F0               	movwf	??_USARTHandleRxInt
  5463  014B  01F1               	clrf	??_USARTHandleRxInt+1
  5464  014C  306B               	movlw	107
  5465  014D  00F2               	movwf	??_USARTHandleRxInt+2
  5466  014E  3020               	movlw	32
  5467  014F  00F3               	movwf	??_USARTHandleRxInt+3
  5468  0150  0870               	movf	??_USARTHandleRxInt,w
  5469  0151  0772               	addwf	??_USARTHandleRxInt+2,w
  5470  0152  0086               	movwf	6
  5471  0153  0871               	movf	??_USARTHandleRxInt+1,w
  5472  0154  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5473  0155  0087               	movwf	7
  5474  0156  3030               	movlw	48
  5475  0157  0201               	subwf	1,w
  5476  0158  1C03               	skipc
  5477  0159  296B               	goto	i1l2143
  5478  015A  0822               	movf	USARTHandleRxInt@ci_575,w
  5479  015B  00F0               	movwf	??_USARTHandleRxInt
  5480  015C  01F1               	clrf	??_USARTHandleRxInt+1
  5481  015D  306B               	movlw	107
  5482  015E  00F2               	movwf	??_USARTHandleRxInt+2
  5483  015F  3020               	movlw	32
  5484  0160  00F3               	movwf	??_USARTHandleRxInt+3
  5485  0161  0870               	movf	??_USARTHandleRxInt,w
  5486  0162  0772               	addwf	??_USARTHandleRxInt+2,w
  5487  0163  0086               	movwf	6
  5488  0164  0871               	movf	??_USARTHandleRxInt+1,w
  5489  0165  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5490  0166  0087               	movwf	7
  5491  0167  303A               	movlw	58
  5492  0168  0201               	subwf	1,w
  5493  0169  1C03               	skipc
  5494  016A  291F               	goto	i1l2135
  5495  016B                     i1l2143:	
  5496                           
  5497                           ;usart.c: 111: }
  5498                           ;usart.c: 112: SIM800L.smsmem[ci-12]=0;
  5499  016B  0822               	movf	USARTHandleRxInt@ci_575,w
  5500  016C  3EF4               	addlw	244
  5501  016D  00F0               	movwf	??_USARTHandleRxInt
  5502  016E  30FF               	movlw	255
  5503  016F  1803               	skipnc
  5504  0170  3000               	movlw	0
  5505  0171  00F1               	movwf	??_USARTHandleRxInt+1
  5506  0172  3066               	movlw	102
  5507  0173  00F2               	movwf	??_USARTHandleRxInt+2
  5508  0174  3020               	movlw	32
  5509  0175  00F3               	movwf	??_USARTHandleRxInt+3
  5510  0176  0870               	movf	??_USARTHandleRxInt,w
  5511  0177  0772               	addwf	??_USARTHandleRxInt+2,w
  5512  0178  0086               	movwf	6
  5513  0179  0871               	movf	??_USARTHandleRxInt+1,w
  5514  017A  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5515  017B  0087               	movwf	7
  5516  017C  0181               	clrf	1
  5517                           
  5518                           ;usart.c: 113: SIM800L.unreadsms=1;
  5519  017D  3065               	movlw	101
  5520  017E  0086               	movwf	6
  5521  017F  3020               	movlw	32
  5522  0180  0087               	movwf	7
  5523  0181  3001               	movlw	1
  5524  0182  0081               	movwf	1
  5525                           
  5526                           ;usart.c: 114: task=2;
  5527  0183  3002               	movlw	2
  5528  0184  00F0               	movwf	??_USARTHandleRxInt
  5529  0185  0870               	movf	??_USARTHandleRxInt,w
  5530  0186  00CA               	movwf	_task
  5531  0187                     i1l2149:	
  5532                           
  5533                           ;usart.c: 115: }
  5534                           ;usart.c: 116: if(SIM800L.buffer[1]=='C' && SIM800L.buffer[2]=='S' && SIM800L.buffer[3]=
      +                          ='Q')
  5535  0187  3052               	movlw	82
  5536  0188  0086               	movwf	6
  5537  0189  3020               	movlw	32
  5538  018A  0087               	movwf	7
  5539  018B  315A               	addfsr 1,26
  5540  018C  0801               	movf	1,w
  5541  018D  3A43               	xorlw	67
  5542  018E  1D03               	skipz
  5543  018F  29F8               	goto	i1l2167
  5544  0190  3052               	movlw	82
  5545  0191  0086               	movwf	6
  5546  0192  3020               	movlw	32
  5547  0193  0087               	movwf	7
  5548  0194  315B               	addfsr 1,27
  5549  0195  0801               	movf	1,w
  5550  0196  3A53               	xorlw	83
  5551  0197  1D03               	skipz
  5552  0198  29F8               	goto	i1l2167
  5553  0199  3052               	movlw	82
  5554  019A  0086               	movwf	6
  5555  019B  3020               	movlw	32
  5556  019C  0087               	movwf	7
  5557  019D  315C               	addfsr 1,28
  5558  019E  0801               	movf	1,w
  5559  019F  3A51               	xorlw	81
  5560  01A0  1D03               	skipz
  5561  01A1  29F8               	goto	i1l2167
  5562                           
  5563                           ;usart.c: 117: {
  5564                           ;usart.c: 118: uint8_t ci=6;
  5565  01A2  3006               	movlw	6
  5566  01A3  00F0               	movwf	??_USARTHandleRxInt
  5567  01A4  0870               	movf	??_USARTHandleRxInt,w
  5568  01A5  00A3               	movwf	USARTHandleRxInt@ci_576
  5569                           
  5570                           ;usart.c: 119: while(SIM800L.buffer[ci]!=',' && (ci)<8)
  5571  01A6  29D1               	goto	i1l2161
  5572  01A7                     i1l2157:	
  5573                           
  5574                           ;usart.c: 120: {
  5575                           ;usart.c: 121: SIM800L.csq[ci-6]=SIM800L.buffer[ci];
  5576  01A7  0823               	movf	USARTHandleRxInt@ci_576,w
  5577  01A8  00F0               	movwf	??_USARTHandleRxInt
  5578  01A9  01F1               	clrf	??_USARTHandleRxInt+1
  5579  01AA  306B               	movlw	107
  5580  01AB  00F2               	movwf	??_USARTHandleRxInt+2
  5581  01AC  3020               	movlw	32
  5582  01AD  00F3               	movwf	??_USARTHandleRxInt+3
  5583  01AE  0870               	movf	??_USARTHandleRxInt,w
  5584  01AF  0772               	addwf	??_USARTHandleRxInt+2,w
  5585  01B0  0086               	movwf	6
  5586  01B1  0871               	movf	??_USARTHandleRxInt+1,w
  5587  01B2  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5588  01B3  0087               	movwf	7
  5589  01B4  0801               	movf	1,w
  5590  01B5  00F4               	movwf	??_USARTHandleRxInt+4
  5591  01B6  0823               	movf	USARTHandleRxInt@ci_576,w
  5592  01B7  3EFA               	addlw	250
  5593  01B8  00F5               	movwf	??_USARTHandleRxInt+5
  5594  01B9  30FF               	movlw	255
  5595  01BA  1803               	skipnc
  5596  01BB  3000               	movlw	0
  5597  01BC  00F6               	movwf	??_USARTHandleRxInt+6
  5598  01BD  30EB               	movlw	235
  5599  01BE  00F7               	movwf	??_USARTHandleRxInt+7
  5600  01BF  3020               	movlw	32
  5601  01C0  00F8               	movwf	??_USARTHandleRxInt+8
  5602  01C1  0875               	movf	??_USARTHandleRxInt+5,w
  5603  01C2  0777               	addwf	??_USARTHandleRxInt+7,w
  5604  01C3  00F9               	movwf	??_USARTHandleRxInt+9
  5605  01C4  0876               	movf	??_USARTHandleRxInt+6,w
  5606  01C5  3D78               	addwfc	??_USARTHandleRxInt+8,w
  5607  01C6  00FA               	movwf	??_USARTHandleRxInt+10
  5608  01C7  0879               	movf	??_USARTHandleRxInt+9,w
  5609  01C8  0086               	movwf	6
  5610  01C9  087A               	movf	??_USARTHandleRxInt+10,w
  5611  01CA  0087               	movwf	7
  5612  01CB  0874               	movf	??_USARTHandleRxInt+4,w
  5613  01CC  0081               	movwf	1
  5614                           
  5615                           ;usart.c: 122: ci++;
  5616  01CD  3001               	movlw	1
  5617  01CE  00F0               	movwf	??_USARTHandleRxInt
  5618  01CF  0870               	movf	??_USARTHandleRxInt,w
  5619  01D0  07A3               	addwf	USARTHandleRxInt@ci_576,f
  5620  01D1                     i1l2161:	
  5621  01D1  0823               	movf	USARTHandleRxInt@ci_576,w
  5622  01D2  00F0               	movwf	??_USARTHandleRxInt
  5623  01D3  01F1               	clrf	??_USARTHandleRxInt+1
  5624  01D4  306B               	movlw	107
  5625  01D5  00F2               	movwf	??_USARTHandleRxInt+2
  5626  01D6  3020               	movlw	32
  5627  01D7  00F3               	movwf	??_USARTHandleRxInt+3
  5628  01D8  0870               	movf	??_USARTHandleRxInt,w
  5629  01D9  0772               	addwf	??_USARTHandleRxInt+2,w
  5630  01DA  0086               	movwf	6
  5631  01DB  0871               	movf	??_USARTHandleRxInt+1,w
  5632  01DC  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5633  01DD  0087               	movwf	7
  5634  01DE  0801               	movf	1,w
  5635  01DF  3A2C               	xorlw	44
  5636  01E0  1903               	skipnz
  5637  01E1  29E6               	goto	i1l2165
  5638  01E2  3008               	movlw	8
  5639  01E3  0223               	subwf	USARTHandleRxInt@ci_576,w
  5640  01E4  1C03               	skipc
  5641  01E5  29A7               	goto	i1l2157
  5642  01E6                     i1l2165:	
  5643                           
  5644                           ;usart.c: 123: }
  5645                           ;usart.c: 124: SIM800L.csq[ci-6]=0;
  5646  01E6  0823               	movf	USARTHandleRxInt@ci_576,w
  5647  01E7  3EFA               	addlw	250
  5648  01E8  00F0               	movwf	??_USARTHandleRxInt
  5649  01E9  30FF               	movlw	255
  5650  01EA  1803               	skipnc
  5651  01EB  3000               	movlw	0
  5652  01EC  00F1               	movwf	??_USARTHandleRxInt+1
  5653  01ED  30EB               	movlw	235
  5654  01EE  00F2               	movwf	??_USARTHandleRxInt+2
  5655  01EF  3020               	movlw	32
  5656  01F0  00F3               	movwf	??_USARTHandleRxInt+3
  5657  01F1  0870               	movf	??_USARTHandleRxInt,w
  5658  01F2  0772               	addwf	??_USARTHandleRxInt+2,w
  5659  01F3  0086               	movwf	6
  5660  01F4  0871               	movf	??_USARTHandleRxInt+1,w
  5661  01F5  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5662  01F6  0087               	movwf	7
  5663  01F7  0181               	clrf	1
  5664  01F8                     i1l2167:	
  5665                           
  5666                           ;usart.c: 125: }
  5667                           ;usart.c: 126: if(SIM800L.buffer[1]=='T' && SIM800L.buffer[2]=='E' && SIM800L.buffer[3]=
      +                          ='L')
  5668  01F8  3052               	movlw	82
  5669  01F9  0086               	movwf	6
  5670  01FA  3020               	movlw	32
  5671  01FB  0087               	movwf	7
  5672  01FC  315A               	addfsr 1,26
  5673  01FD  0801               	movf	1,w
  5674  01FE  3A54               	xorlw	84
  5675  01FF  1D03               	skipz
  5676  0200  2A17               	goto	i1l2175
  5677  0201  3052               	movlw	82
  5678  0202  0086               	movwf	6
  5679  0203  3020               	movlw	32
  5680  0204  0087               	movwf	7
  5681  0205  315B               	addfsr 1,27
  5682  0206  0801               	movf	1,w
  5683  0207  3A45               	xorlw	69
  5684  0208  1D03               	skipz
  5685  0209  2A17               	goto	i1l2175
  5686  020A  3052               	movlw	82
  5687  020B  0086               	movwf	6
  5688  020C  3020               	movlw	32
  5689  020D  0087               	movwf	7
  5690  020E  315C               	addfsr 1,28
  5691  020F  0801               	movf	1,w
  5692  0210  3A4C               	xorlw	76
  5693  0211  1D03               	skipz
  5694  0212  2A17               	goto	i1l2175
  5695                           
  5696                           ;usart.c: 127: {
  5697                           ;usart.c: 128: task=3;
  5698  0213  3003               	movlw	3
  5699  0214  00F0               	movwf	??_USARTHandleRxInt
  5700  0215  0870               	movf	??_USARTHandleRxInt,w
  5701  0216  00CA               	movwf	_task
  5702  0217                     i1l2175:	
  5703                           
  5704                           ;usart.c: 129: }
  5705                           ;usart.c: 130: }
  5706                           ;usart.c: 131: bufque=0;
  5707  0217  01C8               	clrf	_bufque
  5708  0218                     i1l2177:	
  5709                           
  5710                           ;usart.c: 132: }
  5711                           ;usart.c: 133: SIM800L.busy=0;
  5712  0218  3052               	movlw	82
  5713  0219  0086               	movwf	6
  5714  021A  3020               	movlw	32
  5715  021B  0087               	movwf	7
  5716  021C  3000               	movlw	0
  5717  021D  3FC0               	movwi [0]fsr1
  5718                           
  5719                           ;usart.c: 134: break;
  5720  021E  2A43               	goto	i1l318
  5721  021F                     i1l2179:	
  5722                           ;usart.c: 135: default:
  5723                           
  5724                           
  5725                           ;usart.c: 136: if(bufque<(128-1))
  5726  021F  307F               	movlw	127
  5727  0220  0248               	subwf	_bufque,w
  5728  0221  1803               	skipnc
  5729  0222  2A43               	goto	i1l318
  5730                           
  5731                           ;usart.c: 137: {
  5732                           ;usart.c: 138: SIM800L.buffer[bufque]=data;
  5733  0223  0848               	movf	_bufque,w
  5734  0224  00F0               	movwf	??_USARTHandleRxInt
  5735  0225  01F1               	clrf	??_USARTHandleRxInt+1
  5736  0226  306B               	movlw	107
  5737  0227  00F2               	movwf	??_USARTHandleRxInt+2
  5738  0228  3020               	movlw	32
  5739  0229  00F3               	movwf	??_USARTHandleRxInt+3
  5740  022A  0870               	movf	??_USARTHandleRxInt,w
  5741  022B  0772               	addwf	??_USARTHandleRxInt+2,w
  5742  022C  00F4               	movwf	??_USARTHandleRxInt+4
  5743  022D  0871               	movf	??_USARTHandleRxInt+1,w
  5744  022E  3D73               	addwfc	??_USARTHandleRxInt+3,w
  5745  022F  00F5               	movwf	??_USARTHandleRxInt+5
  5746  0230  0874               	movf	??_USARTHandleRxInt+4,w
  5747  0231  0086               	movwf	6
  5748  0232  0875               	movf	??_USARTHandleRxInt+5,w
  5749  0233  0087               	movwf	7
  5750  0234  0820               	movf	USARTHandleRxInt@data,w
  5751  0235  0081               	movwf	1
  5752                           
  5753                           ;usart.c: 139: bufque++;
  5754  0236  3001               	movlw	1
  5755  0237  00F0               	movwf	??_USARTHandleRxInt
  5756  0238  0870               	movf	??_USARTHandleRxInt,w
  5757  0239  07C8               	addwf	_bufque,f
  5758                           
  5759                           ;usart.c: 142: }
  5760                           
  5761                           ;usart.c: 140: }
  5762                           ;usart.c: 141: break;
  5763  023A  2A43               	goto	i1l318
  5764  023B                     i1l2187:	
  5765  023B  0820               	movf	USARTHandleRxInt@data,w
  5766                           
  5767                           ; Switch size 1, requested type "space"
  5768                           ; Number of cases is 2, Range of values is 10 to 13
  5769                           ; switch strategies available:
  5770                           ; Name         Instructions Cycles
  5771                           ; simple_byte            7     4 (average)
  5772                           ; direct_byte           17     9 (fixed)
  5773                           ; jumptable            263     9 (fixed)
  5774                           ;	Chosen strategy is simple_byte
  5775  023C  3A0A               	xorlw	10	; case 10
  5776  023D  1903               	skipnz
  5777  023E  2850               	goto	i1l2097
  5778  023F  3A07               	xorlw	7	; case 13
  5779  0240  1903               	skipnz
  5780  0241  283D               	goto	i1l2091
  5781  0242  2A1F               	goto	i1l2179
  5782  0243                     i1l318:	
  5783                           
  5784                           ;usart.c: 143: LATCbits.LATC1=0;
  5785  0243  0022               	movlb	2	; select bank2
  5786  0244  108E               	bcf	14,1	;volatile
  5787  0245  0008               	return
  5788  0246                     __end_of_USARTHandleRxInt:	
  5789  007E                     btemp	set	126	;btemp
  5790  007E                     pic14e$flags	set	126
  5791  007E                     wtemp	set	126
  5792  007E                     wtemp0	set	126
  5793  0080                     wtemp1	set	128
  5794  0082                     wtemp2	set	130
  5795  0084                     wtemp3	set	132
  5796  0086                     wtemp4	set	134
  5797  0088                     wtemp5	set	136
  5798  007F                     wtemp6	set	127
  5799  007E                     ttemp	set	126
  5800  007E                     ttemp0	set	126
  5801  0081                     ttemp1	set	129
  5802  0084                     ttemp2	set	132
  5803  0087                     ttemp3	set	135
  5804  007F                     ttemp4	set	127
  5805  007E                     ltemp	set	126
  5806  007E                     ltemp0	set	126
  5807  0082                     ltemp1	set	130
  5808  0086                     ltemp2	set	134
  5809  0080                     ltemp3	set	128


Data Sizes:
    Strings     146
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     35      43
    BANK1             2      0       0
    BANK2             0      0       0

Pointer List with Targets:

    USARTWriteLine@str	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_20(CODE[9]), STR_19(CODE[14]), STR_17(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[10]), STR_13(CODE[14]), STR_12(CODE[5]), STR_11(CODE[7]), 
		 -> STR_10(CODE[5]), STR_4(CODE[6]), STR_3(CODE[9]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 158
		 -> STR_21(CODE[3]), STR_20(CODE[9]), STR_19(CODE[14]), STR_18(CODE[3]), 
		 -> STR_17(CODE[9]), STR_16(CODE[14]), STR_15(CODE[4]), STR_14(CODE[10]), 
		 -> STR_13(CODE[14]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[5]), 
		 -> STR_9(CODE[17]), STR_8(CODE[14]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> SIM800L.smsmem(BIGRAM[5]), STR_5(CODE[22]), SIM800L.csq(BIGRAM[5]), SIM800L.cell(BIGRAM[15]), 
		 -> STR_4(CODE[6]), SIM800L(BIGRAM[158]), STR_3(CODE[9]), 

    SIM800DeleteSms@flag	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_7(CODE[2]), 

    SIM800DeleteSms@index	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_6(CODE[2]), 

    SIM800ReadSms@mem	PTR const unsigned char  size(2) Largest target is 158
		 -> SIM800L.smsmem(BIGRAM[5]), SIM800L(BIGRAM[158]), 

    SIM800SendSms@msg	PTR const unsigned char  size(2) Largest target is 158
		 -> STR_9(CODE[17]), STR_5(CODE[22]), SIM800L.csq(BIGRAM[5]), SIM800L(BIGRAM[158]), 

    SIM800SendSms@nmbr	PTR const unsigned char  size(2) Largest target is 158
		 -> STR_8(CODE[14]), SIM800L.cell(BIGRAM[15]), SIM800L(BIGRAM[158]), 

    EEPROMSearchNumber@nmbr	PTR const unsigned char  size(2) Largest target is 158
		 -> SIM800L.cell(BIGRAM[15]), SIM800L(BIGRAM[158]), 

    EEPROMSaveNumber@nmbr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    _main->_EEPROMSearchNumber
    _SIM800init->_USARTWriteLine
    _SIM800SendSms->_USARTWriteLine
    _SIM800ReadSms->_USARTWriteLine
    _SIM800DeleteSms->_USARTWriteLine
    _USARTWriteLine->_USARTWriteString
    _USARTWriteString->_USARTWriteChar
    _EEPROMSearchNumber->_EepromRead
    _EepromRead->_EepromOpCode
    _EEPROMSaveNumber->_EepromWrite
    _EepromWrite->_EepromOpCode
    _EEPROMEraseAll->_EepromOpCode

Critical Paths under _ISR in BANK0

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13480
                                             32 BANK0      3     3      0
                     _EEPROMEraseAll
                   _EEPROMSaveNumber
                 _EEPROMSearchNumber
                       _GPIOPortInit
                    _GPIORedLedBlink
                    _SIM800DeleteSms
                      _SIM800ReadSms
                      _SIM800SendSms
                         _SIM800init
                         _SYSTEMInit
                  _USARTClearSIM800L
                          _USARTInit
                     _USARTWriteLine
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            2     0      2      86
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USARTClearSIM800L                                    5     5      0     136
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEMInit                                           1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SIM800init                                           3     3      0    1391
                                              9 BANK0      3     3      0
                     _USARTWriteLine
 ---------------------------------------------------------------------------------
 (1) _SIM800SendSms                                        7     3      4    2484
                                              9 BANK0      7     3      4
                     _USARTWriteChar
                     _USARTWriteLine
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (1) _SIM800ReadSms                                        5     3      2    2120
                                              9 BANK0      5     3      2
                     _USARTWriteLine
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (1) _SIM800DeleteSms                                      7     3      4    2228
                                              9 BANK0      7     3      4
                     _USARTWriteChar
                     _USARTWriteLine
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (1) _USARTWriteLine                                       2     0      2    1391
                                              7 BANK0      2     0      2
                     _USARTWriteChar
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (2) _USARTWriteString                                     2     0      2     643
                                              5 BANK0      2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (3) _USARTWriteChar                                       1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPIORedLedBlink                                      5     5      0      47
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GPIOPortInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROMSearchNumber                                  17    14      3    1401
                                             15 BANK0     17    14      3
                         _EepromRead
 ---------------------------------------------------------------------------------
 (2) _EepromRead                                           4     2      2     680
                                             11 BANK0      4     2      2
                          _EepromEnd
                       _EepromOpCode
                      _EepromReceive
                        _EepromStart
 ---------------------------------------------------------------------------------
 (3) _EepromReceive                                        4     4      0     115
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMSaveNumber                                    14     9      5    1719
                                             14 BANK0     14     9      5
                        _EepromWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EepromWrite                                          3     0      3     718
                                             11 BANK0      3     0      3
                          _EepromEnd
                       _EepromOpCode
                         _EepromSend
                        _EepromStart
 ---------------------------------------------------------------------------------
 (3) _EepromSend                                           4     4      0      91
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMEraseAll                                       3     3      0     455
                                             11 BANK0      3     3      0
                          _EepromEnd
                       _EepromOpCode
                        _EepromStart
 ---------------------------------------------------------------------------------
 (3) _EepromStart                                          1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EepromOpCode                                         7     5      2     455
                                              4 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _EepromEnd                                            1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0     359
                                             11 COMMON     1     1      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (6) _USARTHandleRxInt                                    15    15      0     359
                                              0 COMMON    11    11      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMEraseAll
     _EepromEnd
     _EepromOpCode
     _EepromStart
   _EEPROMSaveNumber
     _EepromWrite
       _EepromEnd
       _EepromOpCode
       _EepromSend
       _EepromStart
     ___wmul
   _EEPROMSearchNumber
     _EepromRead
       _EepromEnd
       _EepromOpCode
       _EepromReceive
       _EepromStart
   _GPIOPortInit
   _GPIORedLedBlink
   _SIM800DeleteSms
     _USARTWriteChar
     _USARTWriteLine
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar
   _SIM800ReadSms
     _USARTWriteLine
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar
   _SIM800SendSms
     _USARTWriteChar
     _USARTWriteLine
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar
   _SIM800init
     _USARTWriteLine
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
   _SYSTEMInit
   _USARTClearSIM800L
   _USARTInit
   _USARTWriteLine
     _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      37       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1                2      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      37      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Apr 05 08:02:31 2016

                           _i 0049                   __CFG_CP$OFF 0000                            l90 07DD  
                          l58 02C6       __size_of_EEPROMEraseAll 003D           ___wmul@multiplicand 0026  
          USARTInit@baud_rate 0024   __size_of_EEPROMSearchNumber 00A9                   __CFG_LVP$ON 0000  
                         l300 0F01                           l255 0F8E                           l292 073E  
                         l456 0F98                           _GIE 005F                  __CFG_CPD$OFF 0000  
                         _ISR 0004                  __CFG_BORV$LO 0000                           wreg 0009  
                __CFG_IESO$ON 0000                    _SYSTEMInit 0F73                          ?_ISR 0070  
                 ?_SIM800init 0070                          l2001 038E                          l2003 038F  
                        l2011 039E                          l2021 03C5                          l2013 03A2  
                        l2015 03A3                          l2033 03E0                          l2201 0305  
                        l2027 03D0                          l2019 03C3                          l2211 027C  
                        l2061 04C4                          l2221 02B4                          l2213 0280  
                        l2233 02CE                          l2209 031E                          l2243 02F8  
                        l2227 02C1                          l2219 02AB                          l2245 0303  
                        l2239 02E4                          l1803 0F76                          l1811 0F82  
                        l1709 07FE                          l1805 0F7A                          l1821 070D  
                        l1807 0F7E                          l2551 072F                          l1823 070F  
                        l1815 0707                          l1921 0431                          l2553 0734  
                        l1817 0709                          l1931 0460                          l1923 0432  
                        l2555 0739                          l2547 0725                          l1819 070B  
                        l1827 0713                          l1933 0462                          l2549 072A  
                        l1791 0F92                          l1935 0463                          l1767 0F3F  
                        l1965 077E                          l1959 0768                          l1993 0366  
                        l1985 0346                          STR_1 0538                          STR_2 0543  
                        STR_3 056A                          STR_4 057A                          STR_5 0500  
                        STR_6 058E                          STR_7 0590                          STR_8 0535  
                        STR_9 0516                          u1024 0FE0                          u1025 0FDF  
          EepromWrite@address 002B                          u1125 0F99                          u1205 0456  
                        u1054 07EA                          u1135 0F9E                          u1055 07E9  
                        u1315 0384                          u1084 0640                          u1085 063E  
                        u2207 0668                          u2217 0676                          u2307 07B3  
                        u2227 0686                          u1700 02CC                          u2317 06C1  
                        u2237 069C                          u2327 06D7                          u2247 06B2  
                        u2337 04D1                          u2257 0599                          u1650 02A2  
                        u2347 04E1                          u2267 05AF                          u2187 0317  
                        u2357 0479                          u2277 05D7                          u2197 02D5  
                        u1670 02A9                          u2367 048C                          u2287 05F3  
                        u1664 02A4                          u2377 04B8                          u2297 079D  
                        _PEIE 005E                          _RCIE 048D                          _RCIF 008D  
           _USARTClearSIM800L 0750                  __CFG_WRT$OFF 0000        __end_of_USARTWriteChar 0F07  
               __CFG_FCMEN$ON 0000        __end_of_USARTWriteLine 0500                          _main 0246  
                        _task 004A                          fsr0h 0005                          fsr1h 0007  
          ?_USARTClearSIM800L 0070                          fsr0l 0004                          indf0 0000  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
                        ltemp 007E                          start 0016                          ttemp 007E  
                        wtemp 007E           __end_of_EepromStart 0F3F           __end_of_EepromWrite 0FD2  
         ??_USARTClearSIM800L 0024                         ??_ISR 007B                 ?_GPIOPortInit 0070  
           ?_USARTHandleRxInt 0070       EEPROMSearchNumber@count 003F       EEPROMSearchNumber@value 003B  
                       ?_main 0070            ??_USARTHandleRxInt 0070                         STR_10 0580  
                       STR_11 0573                         STR_12 0585                         STR_20 0558  
                       STR_21 058B                         STR_13 0527                         STR_14 054E  
                       STR_15 058A                         STR_16 0527                         STR_17 0561  
               __CFG_WDTE$OFF 0000                         STR_18 058B                         STR_19 0527  
            USARTWriteChar@ch 0024                    _EepromRead 0F57                    _EepromSend 0FD2  
                       i1l318 0243                         i1l190 0011                         i1l328 00F3  
                       _RCREG 0199                         _SPBRG 019B                         _TXREG 019A  
   __end_of_USARTClearSIM800L 0796                __CFG_BOREN$OFF 0000                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
          __size_of_USARTInit 004A               ?_USARTWriteChar 0070          __end_of_EepromOpCode 0661  
             ?_USARTWriteLine 0027                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F        __size_of_SIM800ReadSms 003E              ?_SIM800DeleteSms 0029  
              __CFG_MCLRE$OFF 0000               __initialization 0018        __size_of_SIM800SendSms 0069  
                __end_of_main 0339                ??_GPIOPortInit 0024           __size_of_SIM800init 0059  
    __end_of_EEPROMSaveNumber 0483                        ??_main 0040                __CFG_PLLEN$OFF 0000  
          __size_of_EepromEnd 0009                   ?_SYSTEMInit 0070      EEPROMSearchNumber@result 003E  
             _GPIORedLedBlink 04C0                        _ANSELB 018D                        i1l2101 005F  
                      i1l2121 00E2                        i1l2123 009C                        i1l2125 00F6  
                      i1l2143 016B                        i1l2135 011F                        i1l2161 01D1  
                      i1l2139 0149                        i1l2091 003D                        i1l2165 01E6  
                      i1l2157 01A7                        i1l2149 0187                        i1l2167 01F8  
                      i1l2175 0217                        i1l2177 0218                        i1l2097 0050  
                      i1l2179 021F                        i1l2187 023B                   _EepromStart 0F2C  
                      u147_25 00AC                   _EepromWrite 0FAD                        _OSCCON 0099  
                      _TRISC0 0470                        _TRISA4 0464                        _TRISC1 0471  
                      _TRISC2 0472                        _TRISB4 046C                        _TRISC4 0474  
                      _TRISB6 046E                        _TRISC5 0475                        _TRISB7 046F  
                      _TRISC6 0476                        _TRISC7 0477                __CFG_PWRTE$OFF 0000  
           USARTWriteLine@str 0027                        ___wmul 0F8F                __CFG_STVREN$ON 0000  
              _EEPROMEraseAll 0483                        _bufque 0048      __end_of_USARTWriteString 0F57  
           __end_of_USARTInit 0750                   ?_EepromRead 002B                   ?_EepromSend 0070  
               _SIM800ReadSms 0796                 _SIM800SendSms 0592    __size_of_USARTClearSIM800L 0046  
       __end_of_EepromReceive 0800            USARTHandleRxInt@ci 0021       __end_of__initialization 002A  
           __end_of_EepromEnd 0F10        __end_of_EEPROMEraseAll 04C0                __pcstackCOMMON 0070  
       EEPROMSearchNumber@aux 003C           __size_of_SYSTEMInit 001C       EEPROMSaveNumber@address 0038  
     __end_of_GPIORedLedBlink 04EE                ?_SIM800ReadSms 0029                ?_SIM800SendSms 0029  
       __size_of_EepromOpCode 0066                  ??_SIM800init 0029          __end_of_GPIOPortInit 0F2C  
                  __pbssBANK0 0043           __size_of_EepromRead 001C           __size_of_EepromSend 002E  
                  __pmaintext 0246               ?_EEPROMEraseAll 0070  EEPROMSearchNumber@nmbrLenght 0031  
                     ?___wmul 0024    __end_of_EEPROMSearchNumber 03E2                    __pintentry 0004  
          __end_of_SIM800init 06BA                  _EepromOpCode 05FB                       _SIM800L 2052  
            ??_USARTWriteChar 0024                EepromRead@data 002E              ??_USARTWriteLine 0029  
          USARTWriteInt@F3213 0043     __size_of_USARTHandleRxInt 0218                EepromReceive@b 0026  
              EepromReceive@i 0027               __size_of___wmul 001E                       __ptext1 0706  
                     __ptext2 0750                       __ptext3 0F73                       __ptext4 0661  
                     __ptext5 0592                       __ptext6 0796                       __ptext7 06BA  
             ??_SIM800ReadSms 002B                       __ptext8 04EE                       __ptext9 0F3F  
           ?_EEPROMSaveNumber 002E           SIM800DeleteSms@flag 002B                  __size_of_ISR 0012  
             ??_SIM800SendSms 002D              ?_GPIORedLedBlink 0070            ??_EEPROMSaveNumber 0033  
                ??_SYSTEMInit 0024                       clrloop0 0F11          end_of_initialization 002A  
                ?_EepromStart 0070                  ?_EepromWrite 002B                     _RCSTAbits 019D  
          __end_of_SYSTEMInit 0F8F                  __pstringtext 0500             ?_USARTWriteString 0025  
    __size_of_SIM800DeleteSms 004C                     _PORTBbits 000D                  ??_EepromRead 002D  
                ??_EepromSend 0024            ??_USARTWriteString 0027              __CFG_FOSC$INTOSC 0000  
       __size_of_GPIOPortInit 0010                     _USARTInit 0706                     _TXSTAbits 019E  
          __end_of_EepromRead 0F73            __end_of_EepromSend 1000        EEPROMSearchNumber@nmbr 002F  
                   _EepromEnd 0F07                  _GPIOPortInit 0F1C                __end_of___wmul 0FAD  
                 _BAUDCONbits 019F           start_initialization 0018                    ?_USARTInit 0024  
                 __end_of_ISR 0016           EepromOpCode@address 0024                SYSTEMInit@freq 0024  
            _USARTHandleRxInt 002E              ??_EEPROMEraseAll 002B                   _APFCON0bits 011D  
                    ??___wmul 0028                    ?_EepromEnd 0070        __size_of_EepromReceive 002C  
  EEPROMSaveNumber@nmbrLenght 0030                   __pbssBIGRAM 2052      EEPROMSaveNumber@position 0031  
                   ___latbits 0001          GPIORedLedBlink@times 0027                 __pcstackBANK0 0020  
          _EEPROMSearchNumber 0339           __end_of__stringdata 0592             ??_SIM800DeleteSms 002D  
         ?_EEPROMSearchNumber 002F          __size_of_EepromStart 0013        EEPROMSaveNumber@result 0037  
        __size_of_EepromWrite 0025                 EepromOpCode@i 002A          ??_EEPROMSearchNumber 0032  
                 ??_USARTInit 0026                 _EepromReceive 07D4     __size_of_EEPROMSaveNumber 00A1  
              ___wmul@product 0028                      _LATAbits 010C                      _LATBbits 010D  
                    _LATCbits 010E                     clear_ram0 0F10                      _PIR1bits 0011  
                 ??_EepromEnd 0024                   __stringdata 0500             ___wmul@multiplier 0024  
       __end_of_SIM800ReadSms 07D4         __end_of_SIM800SendSms 05FB                ?_EepromReceive 0070  
    __size_of_GPIORedLedBlink 002E     __size_of_USARTWriteString 0018       __size_of_USARTWriteChar 0008  
     __size_of_USARTWriteLine 0012            EepromOpCode@opcode 0029      __end_of_USARTHandleRxInt 0246  
  EEPROMSearchNumber@convNmbr 0036             SIM800SendSms@nmbr 0029         EEPROMSaveNumber@count 003A  
       EEPROMSaveNumber@value 003B            USARTClearSIM800L@i 0028                      __ptext10 0EFF  
                    __ptext11 04C0                      __ptext20 0483                      __ptext12 0F1C  
                    __ptext21 0F2C                      __ptext13 0339                      __ptext22 05FB  
                    __ptext14 0F57                      __ptext23 0F07                      __ptext15 07D4  
                    __ptext16 03E2                      __ptext25 002E                      __ptext17 0F8F  
                    __ptext18 0FAD                      __ptext19 0FD2              SIM800ReadSms@mem 0029  
        SIM800DeleteSms@index 0029        USARTHandleRxInt@ci_575 0022        USARTHandleRxInt@ci_576 0023  
            GPIORedLedBlink@i 0028                 __size_of_main 00F3               _SIM800DeleteSms 06BA  
             EepromWrite@data 002D                 ?_EepromOpCode 0024               ??_EepromReceive 0024  
                 pic14e$flags 007E                    _SIM800init 0661              SIM800SendSms@msg 002B  
                    intlevel1 0000          EEPROMSaveNumber@nmbr 002E              _EEPROMSaveNumber 03E2  
           __CFG_CLKOUTEN$OFF 0000                   EepromSend@b 0026                   EepromSend@i 0027  
           ??_GPIORedLedBlink 0024           USARTWriteString@str 0025                ??_EepromOpCode 0026  
           EepromRead@address 002B          USARTHandleRxInt@data 0020                 ??_EepromStart 0024  
            _USARTWriteString 0F3F                 ??_EepromWrite 002E                _USARTWriteChar 0EFF  
              _USARTWriteLine 04EE       __end_of_SIM800DeleteSms 0706  
