

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 03 08:59:04 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1828
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x120,80
    24                           	dabs	1,0xC0,48
    25                           	dabs	1,0x2070,0,_URBuff
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  0111                     	;# 
    77  0112                     	;# 
    78  0113                     	;# 
    79  0114                     	;# 
    80  0115                     	;# 
    81  0116                     	;# 
    82  0117                     	;# 
    83  0118                     	;# 
    84  0119                     	;# 
    85  011A                     	;# 
    86  011B                     	;# 
    87  011D                     	;# 
    88  011E                     	;# 
    89  018C                     	;# 
    90  018D                     	;# 
    91  018E                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0194                     	;# 
    99  0195                     	;# 
   100  0196                     	;# 
   101  0199                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019E                     	;# 
   111  019F                     	;# 
   112  020C                     	;# 
   113  020D                     	;# 
   114  020E                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0291                     	;# 
   132  0291                     	;# 
   133  0292                     	;# 
   134  0293                     	;# 
   135  0294                     	;# 
   136  0295                     	;# 
   137  0295                     	;# 
   138  0296                     	;# 
   139  0298                     	;# 
   140  0298                     	;# 
   141  0299                     	;# 
   142  029A                     	;# 
   143  029B                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029E                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0318                     	;# 
   153  0318                     	;# 
   154  0319                     	;# 
   155  031A                     	;# 
   156  038C                     	;# 
   157  038D                     	;# 
   158  038E                     	;# 
   159  0391                     	;# 
   160  0392                     	;# 
   161  0393                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  039A                     	;# 
   166  039C                     	;# 
   167  039D                     	;# 
   168  039E                     	;# 
   169  039F                     	;# 
   170  0415                     	;# 
   171  0416                     	;# 
   172  0417                     	;# 
   173  041C                     	;# 
   174  041D                     	;# 
   175  041E                     	;# 
   176  0FE4                     	;# 
   177  0FE5                     	;# 
   178  0FE6                     	;# 
   179  0FE7                     	;# 
   180  0FE8                     	;# 
   181  0FE9                     	;# 
   182  0FEA                     	;# 
   183  0FEB                     	;# 
   184  0FED                     	;# 
   185  0FEE                     	;# 
   186  0FEF                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011D                     	;# 
   248  011E                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020D                     	;# 
   274  020E                     	;# 
   275  0211                     	;# 
   276  0211                     	;# 
   277  0212                     	;# 
   278  0212                     	;# 
   279  0213                     	;# 
   280  0213                     	;# 
   281  0214                     	;# 
   282  0214                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0216                     	;# 
   288  0216                     	;# 
   289  0217                     	;# 
   290  0217                     	;# 
   291  0291                     	;# 
   292  0291                     	;# 
   293  0292                     	;# 
   294  0293                     	;# 
   295  0294                     	;# 
   296  0295                     	;# 
   297  0295                     	;# 
   298  0296                     	;# 
   299  0298                     	;# 
   300  0298                     	;# 
   301  0299                     	;# 
   302  029A                     	;# 
   303  029B                     	;# 
   304  029C                     	;# 
   305  029D                     	;# 
   306  029E                     	;# 
   307  029E                     	;# 
   308  0311                     	;# 
   309  0311                     	;# 
   310  0312                     	;# 
   311  0313                     	;# 
   312  0318                     	;# 
   313  0318                     	;# 
   314  0319                     	;# 
   315  031A                     	;# 
   316  038C                     	;# 
   317  038D                     	;# 
   318  038E                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  0393                     	;# 
   322  0394                     	;# 
   323  0395                     	;# 
   324  0396                     	;# 
   325  039A                     	;# 
   326  039C                     	;# 
   327  039D                     	;# 
   328  039E                     	;# 
   329  039F                     	;# 
   330  0415                     	;# 
   331  0416                     	;# 
   332  0417                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  0FE4                     	;# 
   337  0FE5                     	;# 
   338  0FE6                     	;# 
   339  0FE7                     	;# 
   340  0FE8                     	;# 
   341  0FE9                     	;# 
   342  0FEA                     	;# 
   343  0FEB                     	;# 
   344  0FED                     	;# 
   345  0FEE                     	;# 
   346  0FEF                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0008                     	;# 
   356  0009                     	;# 
   357  000A                     	;# 
   358  000B                     	;# 
   359  000C                     	;# 
   360  000D                     	;# 
   361  000E                     	;# 
   362  0011                     	;# 
   363  0012                     	;# 
   364  0013                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  0091                     	;# 
   380  0092                     	;# 
   381  0093                     	;# 
   382  0095                     	;# 
   383  0096                     	;# 
   384  0097                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009A                     	;# 
   388  009B                     	;# 
   389  009B                     	;# 
   390  009C                     	;# 
   391  009D                     	;# 
   392  009E                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  0111                     	;# 
   397  0112                     	;# 
   398  0113                     	;# 
   399  0114                     	;# 
   400  0115                     	;# 
   401  0116                     	;# 
   402  0117                     	;# 
   403  0118                     	;# 
   404  0119                     	;# 
   405  011A                     	;# 
   406  011B                     	;# 
   407  011D                     	;# 
   408  011E                     	;# 
   409  018C                     	;# 
   410  018D                     	;# 
   411  018E                     	;# 
   412  0191                     	;# 
   413  0191                     	;# 
   414  0192                     	;# 
   415  0193                     	;# 
   416  0193                     	;# 
   417  0193                     	;# 
   418  0194                     	;# 
   419  0195                     	;# 
   420  0196                     	;# 
   421  0199                     	;# 
   422  019A                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019C                     	;# 
   428  019C                     	;# 
   429  019D                     	;# 
   430  019E                     	;# 
   431  019F                     	;# 
   432  020C                     	;# 
   433  020D                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0216                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0217                     	;# 
   451  0291                     	;# 
   452  0291                     	;# 
   453  0292                     	;# 
   454  0293                     	;# 
   455  0294                     	;# 
   456  0295                     	;# 
   457  0295                     	;# 
   458  0296                     	;# 
   459  0298                     	;# 
   460  0298                     	;# 
   461  0299                     	;# 
   462  029A                     	;# 
   463  029B                     	;# 
   464  029C                     	;# 
   465  029D                     	;# 
   466  029E                     	;# 
   467  029E                     	;# 
   468  0311                     	;# 
   469  0311                     	;# 
   470  0312                     	;# 
   471  0313                     	;# 
   472  0318                     	;# 
   473  0318                     	;# 
   474  0319                     	;# 
   475  031A                     	;# 
   476  038C                     	;# 
   477  038D                     	;# 
   478  038E                     	;# 
   479  0391                     	;# 
   480  0392                     	;# 
   481  0393                     	;# 
   482  0394                     	;# 
   483  0395                     	;# 
   484  0396                     	;# 
   485  039A                     	;# 
   486  039C                     	;# 
   487  039D                     	;# 
   488  039E                     	;# 
   489  039F                     	;# 
   490  0415                     	;# 
   491  0416                     	;# 
   492  0417                     	;# 
   493  041C                     	;# 
   494  041D                     	;# 
   495  041E                     	;# 
   496  0FE4                     	;# 
   497  0FE5                     	;# 
   498  0FE6                     	;# 
   499  0FE7                     	;# 
   500  0FE8                     	;# 
   501  0FE9                     	;# 
   502  0FEA                     	;# 
   503  0FEB                     	;# 
   504  0FED                     	;# 
   505  0FEE                     	;# 
   506  0FEF                     	;# 
   507  0000                     	;# 
   508  0001                     	;# 
   509  0002                     	;# 
   510  0003                     	;# 
   511  0004                     	;# 
   512  0005                     	;# 
   513  0006                     	;# 
   514  0007                     	;# 
   515  0008                     	;# 
   516  0009                     	;# 
   517  000A                     	;# 
   518  000B                     	;# 
   519  000C                     	;# 
   520  000D                     	;# 
   521  000E                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0097                     	;# 
   545  0098                     	;# 
   546  0099                     	;# 
   547  009A                     	;# 
   548  009B                     	;# 
   549  009B                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  010C                     	;# 
   554  010D                     	;# 
   555  010E                     	;# 
   556  0111                     	;# 
   557  0112                     	;# 
   558  0113                     	;# 
   559  0114                     	;# 
   560  0115                     	;# 
   561  0116                     	;# 
   562  0117                     	;# 
   563  0118                     	;# 
   564  0119                     	;# 
   565  011A                     	;# 
   566  011B                     	;# 
   567  011D                     	;# 
   568  011E                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  018E                     	;# 
   572  0191                     	;# 
   573  0191                     	;# 
   574  0192                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0194                     	;# 
   579  0195                     	;# 
   580  0196                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019E                     	;# 
   591  019F                     	;# 
   592  020C                     	;# 
   593  020D                     	;# 
   594  020E                     	;# 
   595  0211                     	;# 
   596  0211                     	;# 
   597  0212                     	;# 
   598  0212                     	;# 
   599  0213                     	;# 
   600  0213                     	;# 
   601  0214                     	;# 
   602  0214                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0216                     	;# 
   608  0216                     	;# 
   609  0217                     	;# 
   610  0217                     	;# 
   611  0291                     	;# 
   612  0291                     	;# 
   613  0292                     	;# 
   614  0293                     	;# 
   615  0294                     	;# 
   616  0295                     	;# 
   617  0295                     	;# 
   618  0296                     	;# 
   619  0298                     	;# 
   620  0298                     	;# 
   621  0299                     	;# 
   622  029A                     	;# 
   623  029B                     	;# 
   624  029C                     	;# 
   625  029D                     	;# 
   626  029E                     	;# 
   627  029E                     	;# 
   628  0311                     	;# 
   629  0311                     	;# 
   630  0312                     	;# 
   631  0313                     	;# 
   632  0318                     	;# 
   633  0318                     	;# 
   634  0319                     	;# 
   635  031A                     	;# 
   636  038C                     	;# 
   637  038D                     	;# 
   638  038E                     	;# 
   639  0391                     	;# 
   640  0392                     	;# 
   641  0393                     	;# 
   642  0394                     	;# 
   643  0395                     	;# 
   644  0396                     	;# 
   645  039A                     	;# 
   646  039C                     	;# 
   647  039D                     	;# 
   648  039E                     	;# 
   649  039F                     	;# 
   650  0415                     	;# 
   651  0416                     	;# 
   652  0417                     	;# 
   653  041C                     	;# 
   654  041D                     	;# 
   655  041E                     	;# 
   656  0FE4                     	;# 
   657  0FE5                     	;# 
   658  0FE6                     	;# 
   659  0FE7                     	;# 
   660  0FE8                     	;# 
   661  0FE9                     	;# 
   662  0FEA                     	;# 
   663  0FEB                     	;# 
   664  0FED                     	;# 
   665  0FEE                     	;# 
   666  0FEF                     	;_URBuff
   667                           
   668                           	psect	nvCOMMON
   669  0076                     __pnvCOMMON:	
   670  0076                     _UQEnd:	
   671  0076                     	ds	2
   672  0078                     _UQFront:	
   673  0078                     	ds	2
   674  0011                     _PIR1bits	set	17
   675  005F                     _GIE	set	95
   676  005E                     _PEIE	set	94
   677  008D                     _RCIF	set	141
   678  0099                     _OSCCON	set	153
   679  048D                     _RCIE	set	1165
   680  046C                     _TRISB4	set	1132
   681  0470                     _TRISC0	set	1136
   682  0471                     _TRISC1	set	1137
   683  0472                     _TRISC2	set	1138
   684  0474                     _TRISC4	set	1140
   685  0475                     _TRISC5	set	1141
   686  011D                     _APFCON0bits	set	285
   687  010D                     _LATBbits	set	269
   688  010E                     _LATCbits	set	270
   689  019F                     _BAUDCONbits	set	415
   690  0199                     _RCREG	set	409
   691  019D                     _RCSTAbits	set	413
   692  019B                     _SPBRG	set	411
   693  019A                     _TXREG	set	410
   694  019E                     _TXSTAbits	set	414
   695                           
   696                           	psect	stringtext
   697  0300                     __pstringtext:	
   698  0300                     __stringdata:	
   699  0300                     STR_1:	
   700  0300  3441               	retlw	65	;'A'
   701  0301  3454               	retlw	84	;'T'
   702  0302  342B               	retlw	43	;'+'
   703  0303  3443               	retlw	67	;'C'
   704  0304  3453               	retlw	83	;'S'
   705  0305  3451               	retlw	81	;'Q'
   706  0306  340D               	retlw	13
   707  0307  340A               	retlw	10
   708  0308  3400               	retlw	0
   709  0309                     STR_4:	
   710  0309  3441               	retlw	65	;'A'
   711  030A  3454               	retlw	84	;'T'
   712  030B  3445               	retlw	69	;'E'
   713  030C  3430               	retlw	48	;'0'
   714  030D  340D               	retlw	13
   715  030E  340A               	retlw	10
   716  030F  3400               	retlw	0
   717  0310                     STR_2:	
   718  0310  3441               	retlw	65	;'A'
   719  0311  3454               	retlw	84	;'T'
   720  0312  3448               	retlw	72	;'H'
   721  0313  340D               	retlw	13
   722  0314  340A               	retlw	10
   723  0315  3400               	retlw	0
   724  0316                     STR_3:	
   725  0316  3441               	retlw	65	;'A'
   726  0317  3454               	retlw	84	;'T'
   727  0318  340D               	retlw	13
   728  0319  340A               	retlw	10
   729  031A  3400               	retlw	0
   730  031B                     STR_5:	
   731  031B  3441               	retlw	65	;'A'
   732  031C  3454               	retlw	84	;'T'
   733  031D  340A               	retlw	10
   734  031E  340D               	retlw	13
   735  031F  3400               	retlw	0
   736  0320                     __end_of__stringdata:	
   737                           
   738                           ; #config settings
   739  0000                     
   740                           	psect	cinit
   741  0018                     start_initialization:	
   742  0018                     __initialization:		;BIGRAM
   743                           
   744                           ; Clear objects allocated to BIGRAM
   745  0018  3070               	movlw	low (0+8304)
   746  0019  0084               	movwf	4
   747  001A  3020               	movlw	high (0+8304)
   748  001B  0085               	movwf	5
   749  001C  3080               	movlw	128
   750  001D  00FE               	movwf	btemp
   751  001E  3000               	movlw	0
   752  001F  00FF               	movwf	btemp+1
   753  0020  3183  234A         	fcall	clear_ram0
   754                           
   755                           ; Clear objects allocated to COMMON
   756  0022  01FA               	clrf	__pbssCOMMON& (0+127)
   757  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK0
   760  0024  01AB               	clrf	__pbssBANK0& (0+127)
   761  0025  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   762  0026  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   763  0027  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   764  0028  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   765  0029                     end_of_initialization:	
   766                           ;End of C runtime variable initialization code
   767                           
   768  0029                     __end_of__initialization:	
   769  0029  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   770  002A  0020               	movlb	0
   771  002B  3180  282D         	ljmp	_main	;jump to C main() function
   772                           
   773                           	psect	bssCOMMON
   774  007A                     __pbssCOMMON:	
   775  007A                     _c:	
   776  007A                     	ds	1
   777  007B                     _y:	
   778  007B                     	ds	1
   779                           
   780                           	psect	bssBANK0
   781  002B                     __pbssBANK0:	
   782  002B                     USARTWriteInt@F3204:	
   783  002B                     	ds	5
   784                           
   785                           	psect	clrtext
   786  034A                     clear_ram0:	
   787                           ;	Called with FSR0 containing the base address, and
   788                           ;	btemp/btemp+1 has the size to clear
   789                           
   790  034A  0064               	clrwdt	;clear the watchdog before getting into this loop
   791  034B                     clrloop0:	
   792  034B  0180               	clrf	0	;clear RAM location pointed to by FSR
   793  034C  3101               	addfsr 0,1
   794  034D  3001               	movlw	1
   795  034E  02FE               	subwf	126,f
   796  034F  3000               	movlw	0
   797  0350  3BFF               	subwfb	127,f
   798  0351  087F               	movf	127,w
   799  0352  047E               	iorwf	126,w
   800  0353  1903               	btfsc	3,2
   801  0354  3400               	retlw	0	;all done for this memory range, return
   802  0355  2B4B               	goto	clrloop0	;have we reached the end yet?
   803                           
   804                           	psect	cstackCOMMON
   805  0070                     __pcstackCOMMON:	
   806  0070                     ?_USARTHandleRxInt:	
   807  0070                     ??_USARTHandleRxInt:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0070                     ?_ISR:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_USARTWriteChar:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?_USARTFlushBuffer:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     ?_SIM800init:	
   820                           ; 0 bytes @ 0x0
   821                           
   822  0070                     ?_USARTReadData:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_USARTDataAvailable:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_main:	
   829                           ; 1 bytes @ 0x0
   830                           
   831                           
   832                           ; 2 bytes @ 0x0
   833  0070                     	ds	4
   834  0074                     USARTHandleRxInt@data:	
   835                           
   836                           ; 1 bytes @ 0x4
   837  0074                     	ds	1
   838  0075                     ??_ISR:	
   839                           
   840                           ; 0 bytes @ 0x5
   841  0075                     	ds	1
   842                           
   843                           	psect	cstackBANK0
   844  0020                     __pcstackBANK0:	
   845  0020                     ?_USARTInit:	
   846  0020                     ??_USARTWriteChar:	
   847                           ; 0 bytes @ 0x0
   848                           
   849  0020                     ??_USARTReadData:	
   850                           ; 0 bytes @ 0x0
   851                           
   852  0020                     ??_USARTDataAvailable:	
   853                           ; 0 bytes @ 0x0
   854                           
   855  0020                     USARTWriteChar@ch:	
   856                           ; 0 bytes @ 0x0
   857                           
   858  0020                     USARTInit@baud_rate:	
   859                           ; 1 bytes @ 0x0
   860                           
   861                           
   862                           ; 2 bytes @ 0x0
   863  0020                     	ds	1
   864  0021                     ?_USARTWriteString:	
   865  0021                     USARTWriteString@str:	
   866                           ; 0 bytes @ 0x1
   867                           
   868                           
   869                           ; 2 bytes @ 0x1
   870  0021                     	ds	1
   871  0022                     ??_USARTInit:	
   872                           
   873                           ; 0 bytes @ 0x2
   874  0022                     	ds	1
   875  0023                     ??_USARTWriteString:	
   876  0023                     ?_USARTWriteLine:	
   877                           ; 0 bytes @ 0x3
   878                           
   879  0023                     USARTReadData@data:	
   880                           ; 0 bytes @ 0x3
   881                           
   882  0023                     USARTWriteLine@str:	
   883                           ; 1 bytes @ 0x3
   884                           
   885                           
   886                           ; 2 bytes @ 0x3
   887  0023                     	ds	1
   888  0024                     ??_USARTFlushBuffer:	
   889                           
   890                           ; 0 bytes @ 0x4
   891  0024                     	ds	1
   892  0025                     ??_SIM800init:	
   893  0025                     ??_USARTWriteLine:	
   894                           ; 0 bytes @ 0x5
   895                           
   896                           
   897                           ; 0 bytes @ 0x5
   898  0025                     	ds	3
   899  0028                     ??_main:	
   900                           
   901                           ; 0 bytes @ 0x8
   902  0028                     	ds	3
   903                           
   904                           	psect	maintext
   905  002D                     __pmaintext:	
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 14 in file "main.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2  184[COMMON] int 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 17F/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   925 ;;      Params:         0       0       0       0
   926 ;;      Locals:         0       0       0       0
   927 ;;      Temps:          0       3       0       0
   928 ;;      Totals:         0       3       0       0
   929 ;;Total ram usage:        3 bytes
   930 ;; Hardware stack levels required when called:    6
   931 ;; This function calls:
   932 ;;		_SIM800init
   933 ;;		_USARTDataAvailable
   934 ;;		_USARTFlushBuffer
   935 ;;		_USARTInit
   936 ;;		_USARTReadData
   937 ;;		_USARTWriteLine
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _main
   945  002D                     _main:	
   946                           
   947                           ;main.c: 16: TRISC0=0;
   948                           
   949                           ;incstack = 0
   950                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   951  002D  0021               	movlb	1	; select bank1
   952  002E  100E               	bcf	14,0	;volatile
   953                           
   954                           ;main.c: 17: TRISC1=0;
   955  002F  108E               	bcf	14,1	;volatile
   956                           
   957                           ;main.c: 18: TRISC2=0;
   958  0030  110E               	bcf	14,2	;volatile
   959                           
   960                           ;main.c: 19: TRISC4=0;
   961  0031  120E               	bcf	14,4	;volatile
   962                           
   963                           ;main.c: 20: TRISC5=1;
   964  0032  168E               	bsf	14,5	;volatile
   965                           
   966                           ;main.c: 21: TRISB4=0;
   967  0033  120D               	bcf	13,4	;volatile
   968                           
   969                           ;main.c: 23: OSCCON=0b01110010;
   970  0034  3072               	movlw	114
   971  0035  0099               	movwf	25	;volatile
   972                           
   973                           ;main.c: 24: APFCON0bits.RXDTSEL=1;
   974  0036  0022               	movlb	2	; select bank2
   975  0037  179D               	bsf	29,7	;volatile
   976                           
   977                           ;main.c: 25: APFCON0bits.TXCKSEL=1;
   978  0038  151D               	bsf	29,2	;volatile
   979                           
   980                           ;main.c: 27: USARTInit(115);
   981  0039  3073               	movlw	115
   982  003A  0020               	movlb	0	; select bank0
   983  003B  00A0               	movwf	USARTInit@baud_rate
   984  003C  3000               	movlw	0
   985  003D  00A1               	movwf	USARTInit@baud_rate+1
   986  003E  3181  2150  3180   	fcall	_USARTInit
   987                           
   988                           ;main.c: 28: SIM800init();
   989  0041  3180  20A5  3180   	fcall	_SIM800init
   990                           
   991                           ;main.c: 30: LATCbits.LATC0=1;
   992  0044  0022               	movlb	2	; select bank2
   993  0045  140E               	bsf	14,0	;volatile
   994                           
   995                           ;main.c: 31: LATCbits.LATC1=0;
   996  0046  108E               	bcf	14,1	;volatile
   997                           
   998                           ;main.c: 32: LATCbits.LATC2=0;
   999  0047  110E               	bcf	14,2	;volatile
  1000                           
  1001                           ;main.c: 33: LATBbits.LATB4=0;
  1002  0048  120D               	bcf	13,4	;volatile
  1003  0049                     l1604:	
  1004                           ;main.c: 34: while(1)
  1005                           
  1006                           
  1007                           ;main.c: 35: {
  1008                           ;main.c: 37: (GIE = 1);
  1009  0049  178B               	bsf	11,7	;volatile
  1010                           
  1011                           ;main.c: 38: USARTWriteLine("AT+CSQ\r\n");
  1012  004A  3000               	movlw	low (STR_1| (0+32768))
  1013  004B  0020               	movlb	0	; select bank0
  1014  004C  00A3               	movwf	USARTWriteLine@str
  1015  004D  3083               	movlw	high (STR_1| (0+32768))
  1016  004E  00A4               	movwf	USARTWriteLine@str+1
  1017  004F  3183  2338  3180   	fcall	_USARTWriteLine
  1018                           
  1019                           ;main.c: 39: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1020  0052  3015               	movlw	21
  1021  0053  0020               	movlb	0	; select bank0
  1022  0054  00AA               	movwf	??_main+2
  1023  0055  304B               	movlw	75
  1024  0056  00A9               	movwf	??_main+1
  1025  0057  30D1               	movlw	209
  1026  0058  00A8               	movwf	??_main
  1027  0059                     u1147:	
  1028  0059  0BA8               	decfsz	??_main,f
  1029  005A  2859               	goto	u1147
  1030  005B  0BA9               	decfsz	??_main+1,f
  1031  005C  2859               	goto	u1147
  1032  005D  0BAA               	decfsz	??_main+2,f
  1033  005E  2859               	goto	u1147
  1034  005F  0000               	nop
  1035  0060                     l186:	
  1036                           ;main.c: 40: while(PIR1bits.RCIF);
  1037                           
  1038  0060  0020               	movlb	0	; select bank0
  1039  0061  1A91               	btfsc	17,5	;volatile
  1040  0062  2860               	goto	l186
  1041                           
  1042                           ;main.c: 41: (GIE = 0);
  1043  0063  138B               	bcf	11,7	;volatile
  1044  0064                     l1628:	
  1045                           ;main.c: 45: while(USARTDataAvailable()>30)
  1046                           
  1047  0064  3181  21DA  3180   	fcall	_USARTDataAvailable
  1048  0067  0020               	movlb	0	; select bank0
  1049  0068  00A8               	movwf	??_main
  1050  0069  301F               	movlw	31
  1051  006A  0228               	subwf	??_main,w
  1052  006B  1C03               	btfss	3,0
  1053  006C  2849               	goto	l1604
  1054                           
  1055                           ;main.c: 46: {
  1056                           ;main.c: 47: c= USARTReadData();
  1057  006D  3181  21A1  3180   	fcall	_USARTReadData
  1058  0070  0020               	movlb	0	; select bank0
  1059  0071  00A8               	movwf	??_main
  1060  0072  0828               	movf	??_main,w
  1061  0073  00FA               	movwf	_c
  1062                           
  1063                           ;main.c: 49: if(c=='+' && USARTReadData()=='C' && USARTReadData()=='L' && USARTReadData(
      +                          )=='I')
  1064  0074  087A               	movf	_c,w
  1065  0075  3A2B               	xorlw	43
  1066  0076  1D03               	skipz
  1067  0077  2864               	goto	l1628
  1068  0078  3181  21A1  3180   	fcall	_USARTReadData
  1069  007B  3A43               	xorlw	67
  1070  007C  1D03               	skipz
  1071  007D  2864               	goto	l1628
  1072  007E  3181  21A1  3180   	fcall	_USARTReadData
  1073  0081  3A4C               	xorlw	76
  1074  0082  1D03               	skipz
  1075  0083  2864               	goto	l1628
  1076  0084  3181  21A1  3180   	fcall	_USARTReadData
  1077  0087  3A49               	xorlw	73
  1078  0088  1D03               	skipz
  1079  0089  2864               	goto	l1628
  1080                           
  1081                           ;main.c: 50: {
  1082                           ;main.c: 51: USARTWriteLine("ATH\r\n");
  1083  008A  3010               	movlw	low (STR_2| (0+32768))
  1084  008B  0020               	movlb	0	; select bank0
  1085  008C  00A3               	movwf	USARTWriteLine@str
  1086  008D  3083               	movlw	high (STR_2| (0+32768))
  1087  008E  00A4               	movwf	USARTWriteLine@str+1
  1088  008F  3183  2338  3180   	fcall	_USARTWriteLine
  1089                           
  1090                           ;main.c: 52: LATCbits.LATC1=!LATCbits.LATC1;
  1091  0092  0022               	movlb	2	; select bank2
  1092  0093  188E               	btfsc	14,1	;volatile
  1093  0094  2898               	goto	u1090
  1094  0095  0022               	movlb	2	; select bank2
  1095  0096  148E               	bsf	14,1	;volatile
  1096  0097  289A               	goto	l1624
  1097  0098                     u1090:	
  1098  0098  0022               	movlb	2	; select bank2
  1099  0099  108E               	bcf	14,1	;volatile
  1100  009A                     l1624:	
  1101                           
  1102                           ;main.c: 53: LATBbits.LATB4=!LATBbits.LATB4;
  1103  009A  1A0D               	btfsc	13,4	;volatile
  1104  009B  289F               	goto	u1110
  1105  009C  0022               	movlb	2	; select bank2
  1106  009D  160D               	bsf	13,4	;volatile
  1107  009E  28A1               	goto	l1626
  1108  009F                     u1110:	
  1109  009F  0022               	movlb	2	; select bank2
  1110  00A0  120D               	bcf	13,4	;volatile
  1111  00A1                     l1626:	
  1112                           
  1113                           ;main.c: 54: USARTFlushBuffer();
  1114  00A1  3183  2356  3180   	fcall	_USARTFlushBuffer
  1115  00A4  2864               	goto	l1628
  1116  00A5                     __end_of_main:	
  1117                           
  1118                           	psect	text1
  1119  0150                     __ptext1:	
  1120 ;; *************** function _USARTInit *****************
  1121 ;; Defined at:
  1122 ;;		line 35 in file "usart_pic16.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  baud_rate       2    0[BANK0 ] unsigned int 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;		None               void
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1136 ;;      Params:         0       2       0       0
  1137 ;;      Locals:         0       0       0       0
  1138 ;;      Temps:          0       0       0       0
  1139 ;;      Totals:         0       2       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    2
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _USARTInit
  1152  0150                     _USARTInit:	
  1153                           
  1154                           ;usart_pic16.c: 38: UQFront=UQEnd=-1;
  1155                           
  1156                           ;incstack = 0
  1157                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  1158  0150  30FF               	movlw	255
  1159  0151  00F6               	movwf	_UQEnd	;volatile
  1160  0152  30FF               	movlw	255
  1161  0153  00F7               	movwf	_UQEnd+1	;volatile
  1162  0154  0877               	movf	_UQEnd+1,w	;volatile
  1163  0155  01F9               	clrf	_UQFront+1	;volatile
  1164  0156  07F9               	addwf	_UQFront+1,f	;volatile
  1165  0157  0876               	movf	_UQEnd,w	;volatile
  1166  0158  01F8               	clrf	_UQFront	;volatile
  1167  0159  07F8               	addwf	_UQFront,f	;volatile
  1168                           
  1169                           ;usart_pic16.c: 41: switch(baud_rate)
  1170  015A  2967               	goto	l1478
  1171  015B                     l1466:	
  1172                           ;usart_pic16.c: 42: {
  1173                           ;usart_pic16.c: 43: case 9600:
  1174                           
  1175                           
  1176                           ;usart_pic16.c: 44: SPBRG=51;
  1177  015B  3033               	movlw	51
  1178  015C  2964               	goto	L4
  1179  015D                     l1468:	
  1180                           ;usart_pic16.c: 46: case 19200:
  1181                           
  1182                           ;usart_pic16.c: 45: break;
  1183                           
  1184                           
  1185                           ;usart_pic16.c: 47: SPBRG=64;
  1186  015D  3040               	movlw	64
  1187  015E  2964               	goto	L4
  1188  015F                     l1470:	
  1189                           ;usart_pic16.c: 49: case 28800:
  1190                           
  1191                           ;usart_pic16.c: 48: break;
  1192                           
  1193                           
  1194                           ;usart_pic16.c: 50: SPBRG=42;
  1195  015F  302A               	movlw	42
  1196  0160  2964               	goto	L4
  1197  0161                     l1472:	
  1198                           ;usart_pic16.c: 52: case 33600:
  1199                           
  1200                           ;usart_pic16.c: 51: break;
  1201                           
  1202                           
  1203                           ;usart_pic16.c: 53: SPBRG=36;
  1204  0161  3024               	movlw	36
  1205  0162  2964               	goto	L4
  1206  0163                     l1474:	
  1207                           ;usart_pic16.c: 55: case 115:
  1208                           
  1209                           ;usart_pic16.c: 54: break;
  1210                           
  1211                           
  1212                           ;usart_pic16.c: 56: SPBRG=16;
  1213  0163  3010               	movlw	16
  1214  0164                     L4:	
  1215  0164  0023               	movlb	3	; select bank3
  1216  0165  009B               	movwf	27	;volatile
  1217                           
  1218                           ;usart_pic16.c: 58: }
  1219                           
  1220                           ;usart_pic16.c: 57: break;
  1221  0166  2992               	goto	l49
  1222  0167                     l1478:	
  1223                           
  1224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  1225                           ; Switch size 1, requested type "space"
  1226                           ; Number of cases is 5, Range of values is 0 to 131
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte           16     9 (average)
  1230                           ; jumptable            260     6 (fixed)
  1231                           ;	Chosen strategy is simple_byte
  1232  0167  0020               	movlb	0	; select bank0
  1233  0168  0821               	movf	USARTInit@baud_rate+1,w
  1234  0169  3A00               	xorlw	0	; case 0
  1235  016A  1903               	skipnz
  1236  016B  2979               	goto	l1734
  1237  016C  3A25               	xorlw	37	; case 37
  1238  016D  1903               	skipnz
  1239  016E  297E               	goto	l1736
  1240  016F  3A6E               	xorlw	110	; case 75
  1241  0170  1903               	skipnz
  1242  0171  2983               	goto	l1738
  1243  0172  3A3B               	xorlw	59	; case 112
  1244  0173  1903               	skipnz
  1245  0174  2988               	goto	l1740
  1246  0175  3AF3               	xorlw	243	; case 131
  1247  0176  1903               	skipnz
  1248  0177  298D               	goto	l1742
  1249  0178  2992               	goto	l49
  1250  0179                     l1734:	
  1251                           
  1252                           ; Switch size 1, requested type "space"
  1253                           ; Number of cases is 1, Range of values is 115 to 115
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte            4     3 (average)
  1257                           ; direct_byte           11     9 (fixed)
  1258                           ; jumptable            263     9 (fixed)
  1259                           ;	Chosen strategy is simple_byte
  1260  0179  0820               	movf	USARTInit@baud_rate,w
  1261  017A  3A73               	xorlw	115	; case 115
  1262  017B  1903               	skipnz
  1263  017C  2963               	goto	l1474
  1264  017D  2992               	goto	l49
  1265  017E                     l1736:	
  1266                           
  1267                           ; Switch size 1, requested type "space"
  1268                           ; Number of cases is 1, Range of values is 128 to 128
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte            4     3 (average)
  1272                           ; direct_byte           11     9 (fixed)
  1273                           ; jumptable            263     9 (fixed)
  1274                           ;	Chosen strategy is simple_byte
  1275  017E  0820               	movf	USARTInit@baud_rate,w
  1276  017F  3A80               	xorlw	128	; case 128
  1277  0180  1903               	skipnz
  1278  0181  295B               	goto	l1466
  1279  0182  2992               	goto	l49
  1280  0183                     l1738:	
  1281                           
  1282                           ; Switch size 1, requested type "space"
  1283                           ; Number of cases is 1, Range of values is 0 to 0
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            4     3 (average)
  1287                           ; direct_byte            8     6 (fixed)
  1288                           ; jumptable            260     6 (fixed)
  1289                           ;	Chosen strategy is simple_byte
  1290  0183  0820               	movf	USARTInit@baud_rate,w
  1291  0184  3A00               	xorlw	0	; case 0
  1292  0185  1903               	skipnz
  1293  0186  295D               	goto	l1468
  1294  0187  2992               	goto	l49
  1295  0188                     l1740:	
  1296                           
  1297                           ; Switch size 1, requested type "space"
  1298                           ; Number of cases is 1, Range of values is 128 to 128
  1299                           ; switch strategies available:
  1300                           ; Name         Instructions Cycles
  1301                           ; simple_byte            4     3 (average)
  1302                           ; direct_byte           11     9 (fixed)
  1303                           ; jumptable            263     9 (fixed)
  1304                           ;	Chosen strategy is simple_byte
  1305  0188  0820               	movf	USARTInit@baud_rate,w
  1306  0189  3A80               	xorlw	128	; case 128
  1307  018A  1903               	skipnz
  1308  018B  295F               	goto	l1470
  1309  018C  2992               	goto	l49
  1310  018D                     l1742:	
  1311                           
  1312                           ; Switch size 1, requested type "space"
  1313                           ; Number of cases is 1, Range of values is 64 to 64
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte            4     3 (average)
  1317                           ; direct_byte           11     9 (fixed)
  1318                           ; jumptable            263     9 (fixed)
  1319                           ;	Chosen strategy is simple_byte
  1320  018D  0820               	movf	USARTInit@baud_rate,w
  1321  018E  3A40               	xorlw	64	; case 64
  1322  018F  1903               	skipnz
  1323  0190  2961               	goto	l1472
  1324  0191  2992               	goto	l49
  1325  0192                     l49:	
  1326                           
  1327                           ;usart_pic16.c: 60: BAUDCONbits.BRG16=1;
  1328  0192  0023               	movlb	3	; select bank3
  1329  0193  159F               	bsf	31,3	;volatile
  1330                           
  1331                           ;usart_pic16.c: 62: TXSTAbits.TX9=0;
  1332  0194  131E               	bcf	30,6	;volatile
  1333                           
  1334                           ;usart_pic16.c: 63: TXSTAbits.TXEN=1;
  1335  0195  169E               	bsf	30,5	;volatile
  1336                           
  1337                           ;usart_pic16.c: 64: TXSTAbits.SYNC=0;
  1338  0196  121E               	bcf	30,4	;volatile
  1339                           
  1340                           ;usart_pic16.c: 65: TXSTAbits.BRGH=1;
  1341  0197  151E               	bsf	30,2	;volatile
  1342                           
  1343                           ;usart_pic16.c: 68: RCSTAbits.SPEN=1;
  1344  0198  179D               	bsf	29,7	;volatile
  1345                           
  1346                           ;usart_pic16.c: 69: RCSTAbits.RX9=0;
  1347  0199  131D               	bcf	29,6	;volatile
  1348                           
  1349                           ;usart_pic16.c: 70: RCSTAbits.CREN=1;
  1350  019A  161D               	bsf	29,4	;volatile
  1351                           
  1352                           ;usart_pic16.c: 71: RCSTAbits.ADDEN=0;
  1353  019B  119D               	bcf	29,3	;volatile
  1354                           
  1355                           ;usart_pic16.c: 74: RCIE=1;
  1356  019C  0021               	movlb	1	; select bank1
  1357  019D  1691               	bsf	17,5	;volatile
  1358                           
  1359                           ;usart_pic16.c: 75: PEIE=1;
  1360  019E  170B               	bsf	11,6	;volatile
  1361                           
  1362                           ;usart_pic16.c: 77: (GIE = 1);
  1363  019F  178B               	bsf	11,7	;volatile
  1364  01A0  0008               	return
  1365  01A1                     __end_of_USARTInit:	
  1366                           
  1367                           	psect	text2
  1368  0356                     __ptext2:	
  1369 ;; *************** function _USARTFlushBuffer *****************
  1370 ;; Defined at:
  1371 ;;		line 222 in file "usart_pic16.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;		None               void
  1378 ;; Registers used:
  1379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1385 ;;      Params:         0       0       0       0
  1386 ;;      Locals:         0       0       0       0
  1387 ;;      Temps:          0       0       0       0
  1388 ;;      Totals:         0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    3
  1392 ;; This function calls:
  1393 ;;		_USARTDataAvailable
  1394 ;;		_USARTReadData
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _USARTFlushBuffer
  1402  0356                     _USARTFlushBuffer:	
  1403  0356                     l1504:	
  1404                           ;usart_pic16.c: 224: while(USARTDataAvailable()>0)
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _USARTFlushBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1408                           
  1409  0356  3181  21DA  3183   	fcall	_USARTDataAvailable
  1410  0359  3800               	iorlw	0
  1411  035A  1903               	btfsc	3,2
  1412  035B  0008               	return
  1413                           
  1414                           ;usart_pic16.c: 225: {
  1415                           ;usart_pic16.c: 226: USARTReadData();
  1416  035C  3181  21A1  3183   	fcall	_USARTReadData
  1417  035F  2B56               	goto	l1504
  1418  0360                     __end_of_USARTFlushBuffer:	
  1419                           
  1420                           	psect	text3
  1421  01A1                     __ptext3:	
  1422 ;; *************** function _USARTReadData *****************
  1423 ;; Defined at:
  1424 ;;		line 130 in file "usart_pic16.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  data            1    3[BANK0 ] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1438 ;;      Params:         0       0       0       0
  1439 ;;      Locals:         0       1       0       0
  1440 ;;      Temps:          0       3       0       0
  1441 ;;      Totals:         0       4       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    2
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_USARTFlushBuffer
  1449 ;;		_main
  1450 ;;		_USARTReadBuffer
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _USARTReadData
  1456  01A1                     _USARTReadData:	
  1457                           
  1458                           ;usart_pic16.c: 132: char data;
  1459                           ;usart_pic16.c: 135: if(UQFront==-1)
  1460                           
  1461                           ;incstack = 0
  1462                           ; Regs used in _USARTReadData: [wreg+fsr1l+fsr1h+status,2+status,0]
  1463  01A1  30FF               	movlw	255
  1464  01A2  0679               	xorwf	_UQFront+1,w	;volatile
  1465  01A3  1D03               	skipz
  1466  01A4  29A7               	goto	u875
  1467  01A5  30FF               	movlw	255
  1468  01A6  0678               	xorwf	_UQFront,w	;volatile
  1469  01A7                     u875:	
  1470  01A7  1D03               	skipz
  1471  01A8  29AB               	goto	l1424
  1472                           
  1473                           ;usart_pic16.c: 136: return 0;
  1474  01A9  3000               	movlw	0
  1475  01AA  0008               	return
  1476  01AB                     l1424:	
  1477                           
  1478                           ;usart_pic16.c: 138: data=URBuff[UQFront];
  1479  01AB  3070               	movlw	112
  1480  01AC  0020               	movlb	0	; select bank0
  1481  01AD  00A0               	movwf	??_USARTReadData
  1482  01AE  3020               	movlw	32
  1483  01AF  00A1               	movwf	??_USARTReadData+1
  1484  01B0  0878               	movf	_UQFront,w	;volatile
  1485  01B1  0720               	addwf	??_USARTReadData,w
  1486  01B2  0086               	movwf	6
  1487  01B3  0879               	movf	_UQFront+1,w	;volatile
  1488  01B4  3D21               	addwfc	??_USARTReadData+1,w
  1489  01B5  0087               	movwf	7
  1490  01B6  0801               	movf	1,w
  1491  01B7  00A2               	movwf	??_USARTReadData+2
  1492  01B8  0822               	movf	??_USARTReadData+2,w
  1493  01B9  00A3               	movwf	USARTReadData@data
  1494                           
  1495                           ;usart_pic16.c: 140: if(UQFront==UQEnd)
  1496  01BA  0877               	movf	_UQEnd+1,w	;volatile
  1497  01BB  0679               	xorwf	_UQFront+1,w	;volatile
  1498  01BC  1D03               	skipz
  1499  01BD  29C0               	goto	u885
  1500  01BE  0876               	movf	_UQEnd,w	;volatile
  1501  01BF  0678               	xorwf	_UQFront,w	;volatile
  1502  01C0                     u885:	
  1503  01C0  1D03               	skipz
  1504  01C1  29CD               	goto	l1430
  1505                           
  1506                           ;usart_pic16.c: 141: {
  1507                           ;usart_pic16.c: 144: UQFront=UQEnd=-1;
  1508  01C2  30FF               	movlw	255
  1509  01C3  00F6               	movwf	_UQEnd	;volatile
  1510  01C4  30FF               	movlw	255
  1511  01C5  00F7               	movwf	_UQEnd+1	;volatile
  1512  01C6  0877               	movf	_UQEnd+1,w	;volatile
  1513  01C7  01F9               	clrf	_UQFront+1	;volatile
  1514  01C8  07F9               	addwf	_UQFront+1,f	;volatile
  1515  01C9  0876               	movf	_UQEnd,w	;volatile
  1516  01CA  01F8               	clrf	_UQFront	;volatile
  1517  01CB  07F8               	addwf	_UQFront,f	;volatile
  1518                           
  1519                           ;usart_pic16.c: 145: }
  1520  01CC  29D8               	goto	l1434
  1521  01CD                     l1430:	
  1522                           
  1523                           ;usart_pic16.c: 146: else
  1524                           ;usart_pic16.c: 147: {
  1525                           ;usart_pic16.c: 148: UQFront++;
  1526  01CD  3001               	movlw	1
  1527  01CE  07F8               	addwf	_UQFront,f	;volatile
  1528  01CF  3000               	movlw	0
  1529  01D0  3DF9               	addwfc	_UQFront+1,f	;volatile
  1530                           
  1531                           ;usart_pic16.c: 150: if(UQFront==128)
  1532  01D1  3080               	movlw	128
  1533  01D2  0678               	xorwf	_UQFront,w	;volatile
  1534  01D3  0479               	iorwf	_UQFront+1,w	;volatile
  1535  01D4  1D03               	skipz
  1536  01D5  29D8               	goto	l1434
  1537                           
  1538                           ;usart_pic16.c: 151: UQFront=0;
  1539  01D6  01F8               	clrf	_UQFront	;volatile
  1540  01D7  01F9               	clrf	_UQFront+1	;volatile
  1541  01D8                     l1434:	
  1542                           
  1543                           ;usart_pic16.c: 152: }
  1544                           ;usart_pic16.c: 154: return data;
  1545  01D8  0823               	movf	USARTReadData@data,w
  1546  01D9  0008               	return
  1547  01DA                     __end_of_USARTReadData:	
  1548                           
  1549                           	psect	text4
  1550  01DA                     __ptext4:	
  1551 ;; *************** function _USARTDataAvailable *****************
  1552 ;; Defined at:
  1553 ;;		line 157 in file "usart_pic16.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      unsigned char 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1567 ;;      Params:         0       0       0       0
  1568 ;;      Locals:         0       0       0       0
  1569 ;;      Temps:          0       1       0       0
  1570 ;;      Totals:         0       1       0       0
  1571 ;;Total ram usage:        1 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    2
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_USARTFlushBuffer
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _USARTDataAvailable
  1584  01DA                     _USARTDataAvailable:	
  1585                           
  1586                           ;usart_pic16.c: 159: if(UQFront==-1) return 0;
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _USARTDataAvailable: [wreg+status,2+status,0]
  1590  01DA  30FF               	movlw	255
  1591  01DB  0679               	xorwf	_UQFront+1,w	;volatile
  1592  01DC  1D03               	skipz
  1593  01DD  29E0               	goto	u905
  1594  01DE  30FF               	movlw	255
  1595  01DF  0678               	xorwf	_UQFront,w	;volatile
  1596  01E0                     u905:	
  1597  01E0  1D03               	skipz
  1598  01E1  29E4               	goto	l1444
  1599  01E2  3000               	movlw	0
  1600  01E3  0008               	return
  1601  01E4                     l1444:	
  1602                           
  1603                           ;usart_pic16.c: 160: if(UQFront<UQEnd)
  1604  01E4  0879               	movf	_UQFront+1,w	;volatile
  1605  01E5  3A80               	xorlw	128
  1606  01E6  0020               	movlb	0	; select bank0
  1607  01E7  00A0               	movwf	??_USARTDataAvailable
  1608  01E8  0877               	movf	_UQEnd+1,w	;volatile
  1609  01E9  3A80               	xorlw	128
  1610  01EA  0220               	subwf	??_USARTDataAvailable,w
  1611  01EB  1D03               	skipz
  1612  01EC  29EF               	goto	u915
  1613  01ED  0876               	movf	_UQEnd,w	;volatile
  1614  01EE  0278               	subwf	_UQFront,w	;volatile
  1615  01EF                     u915:	
  1616  01EF  1803               	skipnc
  1617  01F0  29F6               	goto	l1452
  1618                           
  1619                           ;usart_pic16.c: 161: return(UQEnd-UQFront+1);
  1620  01F1  0378               	decf	_UQFront,w	;volatile
  1621  01F2  3AFF               	xorlw	255
  1622  01F3  0776               	addwf	_UQEnd,w	;volatile
  1623  01F4  3E01               	addlw	1
  1624  01F5  0008               	return
  1625  01F6                     l1452:	
  1626                           
  1627                           ;usart_pic16.c: 162: else if(UQFront>UQEnd)
  1628  01F6  0877               	movf	_UQEnd+1,w	;volatile
  1629  01F7  3A80               	xorlw	128
  1630  01F8  0020               	movlb	0	; select bank0
  1631  01F9  00A0               	movwf	??_USARTDataAvailable
  1632  01FA  0879               	movf	_UQFront+1,w	;volatile
  1633  01FB  3A80               	xorlw	128
  1634  01FC  0220               	subwf	??_USARTDataAvailable,w
  1635  01FD  1D03               	skipz
  1636  01FE  2A01               	goto	u925
  1637  01FF  0878               	movf	_UQFront,w	;volatile
  1638  0200  0276               	subwf	_UQEnd,w	;volatile
  1639  0201                     u925:	
  1640  0201  1803               	skipnc
  1641  0202  2A08               	goto	l1460
  1642                           
  1643                           ;usart_pic16.c: 163: return (128-UQFront+UQEnd+1);
  1644  0203  0378               	decf	_UQFront,w	;volatile
  1645  0204  3AFF               	xorlw	255
  1646  0205  0776               	addwf	_UQEnd,w	;volatile
  1647  0206  3E81               	addlw	129
  1648  0207  0008               	return
  1649  0208                     l1460:	
  1650                           
  1651                           ;usart_pic16.c: 164: else
  1652                           ;usart_pic16.c: 165: return 1;
  1653  0208  3001               	movlw	1
  1654  0209  0008               	return
  1655  020A                     __end_of_USARTDataAvailable:	
  1656                           
  1657                           	psect	text5
  1658  00A5                     __ptext5:	
  1659 ;; *************** function _SIM800init *****************
  1660 ;; Defined at:
  1661 ;;		line 8 in file "SIM800L.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      unsigned char 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1675 ;;      Params:         0       0       0       0
  1676 ;;      Locals:         0       0       0       0
  1677 ;;      Temps:          0       3       0       0
  1678 ;;      Totals:         0       3       0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    5
  1682 ;; This function calls:
  1683 ;;		_USARTWriteLine
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _SIM800init
  1691  00A5                     _SIM800init:	
  1692                           
  1693                           ;SIM800L.c: 10: LATCbits.LATC6=1;
  1694                           
  1695                           ;incstack = 0
  1696                           ; Regs used in _SIM800init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1697  00A5  0022               	movlb	2	; select bank2
  1698  00A6  170E               	bsf	14,6	;volatile
  1699                           
  1700                           ;SIM800L.c: 11: _delay((unsigned long)((10)*(8000000/4000.0)));
  1701  00A7  301A               	movlw	26
  1702  00A8  0020               	movlb	0	; select bank0
  1703  00A9  00A6               	movwf	??_SIM800init+1
  1704  00AA  30F8               	movlw	248
  1705  00AB  00A5               	movwf	??_SIM800init
  1706  00AC                     u1157:	
  1707  00AC  0BA5               	decfsz	??_SIM800init,f
  1708  00AD  28AC               	goto	u1157
  1709  00AE  0BA6               	decfsz	??_SIM800init+1,f
  1710  00AF  28AC               	goto	u1157
  1711  00B0  0000               	nop
  1712                           
  1713                           ;SIM800L.c: 12: LATCbits.LATC6=0;
  1714  00B1  0022               	movlb	2	; select bank2
  1715  00B2  130E               	bcf	14,6	;volatile
  1716                           
  1717                           ;SIM800L.c: 13: _delay((unsigned long)((500)*(8000000/4000.0)));
  1718  00B3  3006               	movlw	6
  1719  00B4  0020               	movlb	0	; select bank0
  1720  00B5  00A7               	movwf	??_SIM800init+2
  1721  00B6  3013               	movlw	19
  1722  00B7  00A6               	movwf	??_SIM800init+1
  1723  00B8  30B1               	movlw	177
  1724  00B9  00A5               	movwf	??_SIM800init
  1725  00BA                     u1167:	
  1726  00BA  0BA5               	decfsz	??_SIM800init,f
  1727  00BB  28BA               	goto	u1167
  1728  00BC  0BA6               	decfsz	??_SIM800init+1,f
  1729  00BD  28BA               	goto	u1167
  1730  00BE  0BA7               	decfsz	??_SIM800init+2,f
  1731  00BF  28BA               	goto	u1167
  1732  00C0  3200               	nop2
  1733                           
  1734                           ;SIM800L.c: 14: LATCbits.LATC6=1;
  1735  00C1  0022               	movlb	2	; select bank2
  1736  00C2  170E               	bsf	14,6	;volatile
  1737                           
  1738                           ;SIM800L.c: 15: _delay((unsigned long)((10000)*(8000000/4000.0)));
  1739  00C3  3066               	movlw	102
  1740  00C4  0020               	movlb	0	; select bank0
  1741  00C5  00A7               	movwf	??_SIM800init+2
  1742  00C6  3077               	movlw	119
  1743  00C7  00A6               	movwf	??_SIM800init+1
  1744  00C8  3024               	movlw	36
  1745  00C9  00A5               	movwf	??_SIM800init
  1746  00CA                     u1177:	
  1747  00CA  0BA5               	decfsz	??_SIM800init,f
  1748  00CB  28CA               	goto	u1177
  1749  00CC  0BA6               	decfsz	??_SIM800init+1,f
  1750  00CD  28CA               	goto	u1177
  1751  00CE  0BA7               	decfsz	??_SIM800init+2,f
  1752  00CF  28CA               	goto	u1177
  1753  00D0  0000               	nop
  1754                           
  1755                           ;SIM800L.c: 16: USARTWriteLine("AT\r\n");
  1756  00D1  3016               	movlw	low (STR_3| (0+32768))
  1757  00D2  0020               	movlb	0	; select bank0
  1758  00D3  00A3               	movwf	USARTWriteLine@str
  1759  00D4  3083               	movlw	high (STR_3| (0+32768))
  1760  00D5  00A4               	movwf	USARTWriteLine@str+1
  1761  00D6  3183  2338  3180   	fcall	_USARTWriteLine
  1762                           
  1763                           ;SIM800L.c: 17: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1764  00D9  3015               	movlw	21
  1765  00DA  0020               	movlb	0	; select bank0
  1766  00DB  00A7               	movwf	??_SIM800init+2
  1767  00DC  304B               	movlw	75
  1768  00DD  00A6               	movwf	??_SIM800init+1
  1769  00DE  30D1               	movlw	209
  1770  00DF  00A5               	movwf	??_SIM800init
  1771  00E0                     u1187:	
  1772  00E0  0BA5               	decfsz	??_SIM800init,f
  1773  00E1  28E0               	goto	u1187
  1774  00E2  0BA6               	decfsz	??_SIM800init+1,f
  1775  00E3  28E0               	goto	u1187
  1776  00E4  0BA7               	decfsz	??_SIM800init+2,f
  1777  00E5  28E0               	goto	u1187
  1778  00E6  0000               	nop
  1779                           
  1780                           ;SIM800L.c: 18: USARTWriteLine("ATE0\r\n");
  1781  00E7  3009               	movlw	low (STR_4| (0+32768))
  1782  00E8  0020               	movlb	0	; select bank0
  1783  00E9  00A3               	movwf	USARTWriteLine@str
  1784  00EA  3083               	movlw	high (STR_4| (0+32768))
  1785  00EB  00A4               	movwf	USARTWriteLine@str+1
  1786  00EC  3183  2338  3180   	fcall	_USARTWriteLine
  1787                           
  1788                           ;SIM800L.c: 19: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1789  00EF  3015               	movlw	21
  1790  00F0  0020               	movlb	0	; select bank0
  1791  00F1  00A7               	movwf	??_SIM800init+2
  1792  00F2  304B               	movlw	75
  1793  00F3  00A6               	movwf	??_SIM800init+1
  1794  00F4  30D1               	movlw	209
  1795  00F5  00A5               	movwf	??_SIM800init
  1796  00F6                     u1197:	
  1797  00F6  0BA5               	decfsz	??_SIM800init,f
  1798  00F7  28F6               	goto	u1197
  1799  00F8  0BA6               	decfsz	??_SIM800init+1,f
  1800  00F9  28F6               	goto	u1197
  1801  00FA  0BA7               	decfsz	??_SIM800init+2,f
  1802  00FB  28F6               	goto	u1197
  1803  00FC  0000               	nop
  1804  00FD  0008               	return
  1805  00FE                     __end_of_SIM800init:	
  1806                           ;SIM800L.c: 26: return 0;
  1807                           ;	Return value of _SIM800init is never used
  1808                           
  1809                           
  1810                           	psect	text6
  1811  0338                     __ptext6:	
  1812 ;; *************** function _USARTWriteLine *****************
  1813 ;; Defined at:
  1814 ;;		line 97 in file "usart_pic16.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  str             2    3[BANK0 ] PTR const unsigned char 
  1817 ;;		 -> STR_5(5), STR_4(7), STR_3(5), STR_2(6), 
  1818 ;;		 -> STR_1(9), 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1830 ;;      Params:         0       2       0       0
  1831 ;;      Locals:         0       0       0       0
  1832 ;;      Temps:          0       0       0       0
  1833 ;;      Totals:         0       2       0       0
  1834 ;;Total ram usage:        2 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    4
  1837 ;; This function calls:
  1838 ;;		_USARTWriteChar
  1839 ;;		_USARTWriteString
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;;		_SIM800init
  1843 ;;		_SIM800sendCommand
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _USARTWriteLine
  1849  0338                     _USARTWriteLine:	
  1850                           
  1851                           ;usart_pic16.c: 99: USARTWriteChar('\r');
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _USARTWriteLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1855  0338  300D               	movlw	13
  1856  0339  3183  2360  3183   	fcall	_USARTWriteChar
  1857                           
  1858                           ;usart_pic16.c: 100: USARTWriteChar('\n');
  1859  033C  300A               	movlw	10
  1860  033D  3183  2360  3183   	fcall	_USARTWriteChar
  1861                           
  1862                           ;usart_pic16.c: 102: USARTWriteString(str);
  1863  0340  0020               	movlb	0	; select bank0
  1864  0341  0824               	movf	USARTWriteLine@str+1,w
  1865  0342  01A2               	clrf	USARTWriteString@str+1
  1866  0343  07A2               	addwf	USARTWriteString@str+1,f
  1867  0344  0823               	movf	USARTWriteLine@str,w
  1868  0345  01A1               	clrf	USARTWriteString@str
  1869  0346  07A1               	addwf	USARTWriteString@str,f
  1870  0347  3183  2320         	fcall	_USARTWriteString
  1871  0349  0008               	return
  1872  034A                     __end_of_USARTWriteLine:	
  1873                           
  1874                           	psect	text7
  1875  0320                     __ptext7:	
  1876 ;; *************** function _USARTWriteString *****************
  1877 ;; Defined at:
  1878 ;;		line 88 in file "usart_pic16.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  str             2    1[BANK0 ] PTR const unsigned char 
  1881 ;;		 -> STR_5(5), STR_4(7), STR_3(5), STR_2(6), 
  1882 ;;		 -> STR_1(9), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;		None               void
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1894 ;;      Params:         0       2       0       0
  1895 ;;      Locals:         0       0       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         0       2       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    3
  1901 ;; This function calls:
  1902 ;;		_USARTWriteChar
  1903 ;; This function is called by:
  1904 ;;		_USARTWriteLine
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _USARTWriteString
  1910  0320                     _USARTWriteString:	
  1911  0320                     l1412:	
  1912                           ;usart_pic16.c: 90: while(*str!='\0')
  1913                           
  1914                           ;incstack = 0
  1915                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1916                           
  1917  0320  0020               	movlb	0	; select bank0
  1918  0321  0821               	movf	USARTWriteString@str,w
  1919  0322  0084               	movwf	4
  1920  0323  0822               	movf	USARTWriteString@str+1,w
  1921  0324  0085               	movwf	5
  1922  0325  0800               	movf	0,w	;code access
  1923  0326  3800               	iorlw	0
  1924  0327  1903               	btfsc	3,2
  1925  0328  0008               	return
  1926                           
  1927                           ;usart_pic16.c: 91: {
  1928                           ;usart_pic16.c: 92: USARTWriteChar(*str);
  1929  0329  0020               	movlb	0	; select bank0
  1930  032A  0821               	movf	USARTWriteString@str,w
  1931  032B  0084               	movwf	4
  1932  032C  0822               	movf	USARTWriteString@str+1,w
  1933  032D  0085               	movwf	5
  1934  032E  0800               	movf	0,w	;code access
  1935  032F  3183  2360  3183   	fcall	_USARTWriteChar
  1936                           
  1937                           ;usart_pic16.c: 93: str++;
  1938  0332  3001               	movlw	1
  1939  0333  0020               	movlb	0	; select bank0
  1940  0334  07A1               	addwf	USARTWriteString@str,f
  1941  0335  3000               	movlw	0
  1942  0336  3DA2               	addwfc	USARTWriteString@str+1,f
  1943  0337  2B20               	goto	l1412
  1944  0338                     __end_of_USARTWriteString:	
  1945                           
  1946                           	psect	text8
  1947  0360                     __ptext8:	
  1948 ;; *************** function _USARTWriteChar *****************
  1949 ;; Defined at:
  1950 ;;		line 81 in file "usart_pic16.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  ch              1    wreg     unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  ch              1    0[BANK0 ] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;		None               void
  1957 ;; Registers used:
  1958 ;;		wreg
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1964 ;;      Params:         0       0       0       0
  1965 ;;      Locals:         0       1       0       0
  1966 ;;      Temps:          0       0       0       0
  1967 ;;      Totals:         0       1       0       0
  1968 ;;Total ram usage:        1 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_USARTWriteString
  1975 ;;		_USARTWriteLine
  1976 ;;		_USARTWriteInt
  1977 ;;		_USARTGotoNewLine
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _USARTWriteChar
  1983  0360                     _USARTWriteChar:	
  1984                           
  1985                           ;incstack = 0
  1986                           ; Regs used in _USARTWriteChar: [wreg]
  1987                           ;USARTWriteChar@ch stored from wreg
  1988  0360  0020               	movlb	0	; select bank0
  1989  0361  00A0               	movwf	USARTWriteChar@ch
  1990  0362                     l57:	
  1991                           ;usart_pic16.c: 83: while(!PIR1bits.TXIF);
  1992                           
  1993  0362  1E11               	btfss	17,4	;volatile
  1994  0363  2B62               	goto	l57
  1995                           
  1996                           ;usart_pic16.c: 85: TXREG=ch;
  1997  0364  0820               	movf	USARTWriteChar@ch,w
  1998  0365  0023               	movlb	3	; select bank3
  1999  0366  009A               	movwf	26	;volatile
  2000  0367  0008               	return
  2001  0368                     __end_of_USARTWriteChar:	
  2002                           
  2003                           	psect	intentry
  2004  0004                     __pintentry:	
  2005 ;; *************** function _ISR *****************
  2006 ;; Defined at:
  2007 ;;		line 6 in file "isr.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;		None               void
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2021 ;;      Params:         0       0       0       0
  2022 ;;      Locals:         0       0       0       0
  2023 ;;      Temps:          1       0       0       0
  2024 ;;      Totals:         1       0       0       0
  2025 ;;Total ram usage:        1 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    1
  2028 ;; This function calls:
  2029 ;;		_USARTHandleRxInt
  2030 ;; This function is called by:
  2031 ;;		Interrupt level 1
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035  0004                     _ISR:	
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2039  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2040  0005  3180               	pagesel	$
  2041  0006  0020               	movlb	0	; select bank0
  2042  0007  087F               	movf	127,w
  2043  0008  00F5               	movwf	??_ISR
  2044                           
  2045                           ;isr.c: 8: if (RCIE && RCIF) {
  2046  0009  0021               	movlb	1	; select bank1
  2047  000A  1E91               	btfss	17,5	;volatile
  2048  000B  2811               	goto	i1l16
  2049  000C  0020               	movlb	0	; select bank0
  2050  000D  1E91               	btfss	17,5	;volatile
  2051  000E  2811               	goto	i1l16
  2052                           
  2053                           ;isr.c: 9: USARTHandleRxInt();
  2054  000F  3180  20FE         	fcall	_USARTHandleRxInt
  2055  0011                     i1l16:	
  2056                           ;isr.c: 10: return;
  2057                           
  2058  0011  0875               	movf	??_ISR,w
  2059  0012  0020               	movlb	0	; select bank0
  2060  0013  00FF               	movwf	127
  2061  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  2062  0015  0009               	retfie
  2063  0016                     __end_of_ISR:	
  2064                           
  2065                           	psect	text10
  2066  00FE                     __ptext10:	
  2067 ;; *************** function _USARTHandleRxInt *****************
  2068 ;; Defined at:
  2069 ;;		line 105 in file "usart_pic16.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  data            1    4[COMMON] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;		None               void
  2076 ;; Registers used:
  2077 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2083 ;;      Params:         0       0       0       0
  2084 ;;      Locals:         1       0       0       0
  2085 ;;      Temps:          4       0       0       0
  2086 ;;      Totals:         5       0       0       0
  2087 ;;Total ram usage:        5 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_ISR
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _USARTHandleRxInt
  2098  00FE                     _USARTHandleRxInt:	
  2099                           
  2100                           ;usart_pic16.c: 107: LATCbits.LATC2=1;
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _USARTHandleRxInt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2104  00FE  0022               	movlb	2	; select bank2
  2105  00FF  150E               	bsf	14,2	;volatile
  2106                           
  2107                           ;usart_pic16.c: 109: char data=RCREG;
  2108  0100  0023               	movlb	3	; select bank3
  2109  0101  0819               	movf	25,w	;volatile
  2110  0102  00F0               	movwf	??_USARTHandleRxInt
  2111  0103  0870               	movf	??_USARTHandleRxInt,w
  2112  0104  00F4               	movwf	USARTHandleRxInt@data
  2113                           
  2114                           ;usart_pic16.c: 112: if(((UQEnd==128-1) && UQFront==0) || ((UQEnd+1)==UQFront))
  2115  0105  307F               	movlw	127
  2116  0106  0676               	xorwf	_UQEnd,w	;volatile
  2117  0107  0477               	iorwf	_UQEnd+1,w	;volatile
  2118  0108  1D03               	skipz
  2119  0109  290E               	goto	i1l742
  2120  010A  0879               	movf	_UQFront+1,w	;volatile
  2121  010B  0478               	iorwf	_UQFront,w	;volatile
  2122  010C  1903               	skipnz
  2123  010D  291C               	goto	i1l744
  2124  010E                     i1l742:	
  2125  010E  0876               	movf	_UQEnd,w	;volatile
  2126  010F  3E01               	addlw	1
  2127  0110  00F0               	movwf	??_USARTHandleRxInt
  2128  0111  3000               	movlw	0
  2129  0112  3D77               	addwfc	_UQEnd+1,w	;volatile
  2130  0113  00F1               	movwf	??_USARTHandleRxInt+1
  2131  0114  0879               	movf	_UQFront+1,w	;volatile
  2132  0115  0671               	xorwf	??_USARTHandleRxInt+1,w
  2133  0116  1D03               	skipz
  2134  0117  291A               	goto	u11_25
  2135  0118  0878               	movf	_UQFront,w	;volatile
  2136  0119  0670               	xorwf	??_USARTHandleRxInt,w
  2137  011A                     u11_25:	
  2138  011A  1D03               	skipz
  2139  011B  2927               	goto	i1l748
  2140  011C                     i1l744:	
  2141                           
  2142                           ;usart_pic16.c: 113: {
  2143                           ;usart_pic16.c: 115: UQFront++;
  2144  011C  3001               	movlw	1
  2145  011D  07F8               	addwf	_UQFront,f	;volatile
  2146  011E  3000               	movlw	0
  2147  011F  3DF9               	addwfc	_UQFront+1,f	;volatile
  2148                           
  2149                           ;usart_pic16.c: 116: if(UQFront==128) UQFront=0;
  2150  0120  3080               	movlw	128
  2151  0121  0678               	xorwf	_UQFront,w	;volatile
  2152  0122  0479               	iorwf	_UQFront+1,w	;volatile
  2153  0123  1D03               	skipz
  2154  0124  2927               	goto	i1l748
  2155  0125  01F8               	clrf	_UQFront	;volatile
  2156  0126  01F9               	clrf	_UQFront+1	;volatile
  2157  0127                     i1l748:	
  2158                           
  2159                           ;usart_pic16.c: 117: }
  2160                           ;usart_pic16.c: 119: if(UQEnd==128-1)
  2161  0127  307F               	movlw	127
  2162  0128  0676               	xorwf	_UQEnd,w	;volatile
  2163  0129  0477               	iorwf	_UQEnd+1,w	;volatile
  2164  012A  1D03               	skipz
  2165  012B  292F               	goto	i1l752
  2166                           
  2167                           ;usart_pic16.c: 120: UQEnd=0;
  2168  012C  01F6               	clrf	_UQEnd	;volatile
  2169  012D  01F7               	clrf	_UQEnd+1	;volatile
  2170  012E  2933               	goto	i1l754
  2171  012F                     i1l752:	
  2172                           
  2173                           ;usart_pic16.c: 121: else
  2174                           ;usart_pic16.c: 122: UQEnd++;
  2175  012F  3001               	movlw	1
  2176  0130  07F6               	addwf	_UQEnd,f	;volatile
  2177  0131  3000               	movlw	0
  2178  0132  3DF7               	addwfc	_UQEnd+1,f	;volatile
  2179  0133                     i1l754:	
  2180                           
  2181                           ;usart_pic16.c: 124: URBuff[UQEnd]=data;
  2182  0133  3070               	movlw	112
  2183  0134  00F0               	movwf	??_USARTHandleRxInt
  2184  0135  3020               	movlw	32
  2185  0136  00F1               	movwf	??_USARTHandleRxInt+1
  2186  0137  0876               	movf	_UQEnd,w	;volatile
  2187  0138  0770               	addwf	??_USARTHandleRxInt,w
  2188  0139  00F2               	movwf	??_USARTHandleRxInt+2
  2189  013A  0877               	movf	_UQEnd+1,w	;volatile
  2190  013B  3D71               	addwfc	??_USARTHandleRxInt+1,w
  2191  013C  00F3               	movwf	??_USARTHandleRxInt+3
  2192  013D  0872               	movf	??_USARTHandleRxInt+2,w
  2193  013E  0086               	movwf	6
  2194  013F  0873               	movf	??_USARTHandleRxInt+3,w
  2195  0140  0087               	movwf	7
  2196  0141  0874               	movf	USARTHandleRxInt@data,w
  2197  0142  0081               	movwf	1
  2198                           
  2199                           ;usart_pic16.c: 126: if(UQFront==-1) UQFront=0;
  2200  0143  30FF               	movlw	255
  2201  0144  0679               	xorwf	_UQFront+1,w	;volatile
  2202  0145  1D03               	skipz
  2203  0146  2949               	goto	u14_25
  2204  0147  30FF               	movlw	255
  2205  0148  0678               	xorwf	_UQFront,w	;volatile
  2206  0149                     u14_25:	
  2207  0149  1D03               	skipz
  2208  014A  294D               	goto	i1l760
  2209  014B  01F8               	clrf	_UQFront	;volatile
  2210  014C  01F9               	clrf	_UQFront+1	;volatile
  2211  014D                     i1l760:	
  2212                           
  2213                           ;usart_pic16.c: 127: LATCbits.LATC2=0;
  2214  014D  0022               	movlb	2	; select bank2
  2215  014E  110E               	bcf	14,2	;volatile
  2216  014F  0008               	return
  2217  0150                     __end_of_USARTHandleRxInt:	
  2218  007E                     btemp	set	126	;btemp
  2219  007E                     pic14e$flags	set	126
  2220  007E                     wtemp	set	126
  2221  007E                     wtemp0	set	126
  2222  0080                     wtemp1	set	128
  2223  0082                     wtemp2	set	130
  2224  0084                     wtemp3	set	132
  2225  0086                     wtemp4	set	134
  2226  0088                     wtemp5	set	136
  2227  007F                     wtemp6	set	127
  2228  007E                     ttemp	set	126
  2229  007E                     ttemp0	set	126
  2230  0081                     ttemp1	set	129
  2231  0084                     ttemp2	set	132
  2232  0087                     ttemp3	set	135
  2233  007F                     ttemp4	set	127
  2234  007E                     ltemp	set	126
  2235  007E                     ltemp0	set	126
  2236  0082                     ltemp1	set	130
  2237  0086                     ltemp2	set	134
  2238  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         7
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     11      16
    BANK1            32      0       0
    BANK2             0      0       0

Pointer List with Targets:

    USARTWriteLine@str	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[6]), 
		 -> STR_1(CODE[9]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[6]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    _main->_SIM800init
    _USARTFlushBuffer->_USARTReadData
    _SIM800init->_USARTWriteLine
    _USARTWriteLine->_USARTWriteString
    _USARTWriteString->_USARTWriteChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1396
                                              8 BANK0      3     3      0
                         _SIM800init
                 _USARTDataAvailable
                   _USARTFlushBuffer
                          _USARTInit
                      _USARTReadData
                     _USARTWriteLine
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            2     0      2      88
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USARTFlushBuffer                                     0     0      0      34
                 _USARTDataAvailable
                      _USARTReadData
 ---------------------------------------------------------------------------------
 (1) _USARTReadData                                        4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _USARTDataAvailable                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SIM800init                                           3     3      0     620
                                              5 BANK0      3     3      0
                     _USARTWriteLine
 ---------------------------------------------------------------------------------
 (1) _USARTWriteLine                                       2     0      2     620
                                              3 BANK0      2     0      2
                     _USARTWriteChar
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (2) _USARTWriteString                                     2     0      2     173
                                              1 BANK0      2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (3) _USARTWriteChar                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0      15
                                              5 COMMON     1     1      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (6) _USARTHandleRxInt                                     5     5      0      15
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SIM800init
     _USARTWriteLine
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
   _USARTDataAvailable
   _USARTFlushBuffer
     _USARTDataAvailable
     _USARTReadData
   _USARTInit
   _USARTReadData
   _USARTWriteLine
     _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B      10       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1C      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 03 08:59:04 2016

                          _c 007A                            _y 007B                  __CFG_CP$OFF 0000  
                         l57 0362                           l49 0192           USARTInit@baud_rate 0020  
                __CFG_LVP$ON 0000                          l186 0060         ??_USARTDataAvailable 0020  
                        _GIE 005F                 __CFG_CPD$OFF 0000                          _ISR 0004  
                        u905 01E0                          u915 01EF                          u925 0201  
                        u875 01A7                          u885 01C0               ?_USARTReadData 0070  
               __CFG_BORV$LO 0000                 __CFG_IESO$ON 0000                         ?_ISR 0070  
                ?_SIM800init 0070                         l1412 0320                         l1430 01CD  
                       l1424 01AB                         l1504 0356                         l1434 01D8  
                       l1460 0208                         l1452 01F6                         l1444 01E4  
                       l1604 0049                         l1470 015F                         l1472 0161  
                       l1624 009A                         l1474 0163                         l1466 015B  
                       l1626 00A1                         l1740 0188                         l1468 015D  
                       l1628 0064                         l1742 018D                         l1734 0179  
                       l1478 0167                         l1736 017E                         l1738 0183  
                       STR_1 0300                         STR_2 0310                         STR_3 0316  
                       STR_4 0309                         STR_5 031B                         u1110 009F  
                       u1090 0098                         u1147 0059                         u1157 00AC  
                       u1167 00BA                         u1177 00CA                         u1187 00E0  
                       u1197 00F6                         _PEIE 005E                         i1l16 0011  
                       _RCIE 048D                         _RCIF 008D                 __CFG_WRT$OFF 0000  
     __end_of_USARTWriteChar 0368                __CFG_FCMEN$ON 0000       __end_of_USARTWriteLine 034A  
                       _main 002D                         fsr0h 0005                         fsr1h 0007  
                       fsr0l 0004                         indf0 0000                         indf1 0001  
                       fsr1l 0006                         btemp 007E            USARTReadData@data 0023  
                       ltemp 007E                         start 0016                         ttemp 007E  
                       wtemp 007E                        ??_ISR 0075            ?_USARTHandleRxInt 0070  
                      ?_main 0070           ??_USARTHandleRxInt 0070                __CFG_WDTE$OFF 0000  
           USARTWriteChar@ch 0020                        i1l742 010E                        i1l760 014D  
                      i1l752 012F                        i1l744 011C                        i1l754 0133  
                      i1l748 0127                        _RCREG 0199                        u11_25 011A  
                      u14_25 0149                        _SPBRG 019B                        _TXREG 019A  
                      _UQEnd 0076               __CFG_BOREN$OFF 0000                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
         __size_of_USARTInit 0051              ?_USARTWriteChar 0070              ?_USARTWriteLine 0023  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
             __CFG_MCLRE$OFF 0000              __initialization 0018                 __end_of_main 00A5  
        __size_of_SIM800init 0059              ??_USARTReadData 0020                       ??_main 0028  
             __CFG_PLLEN$OFF 0000                       _OSCCON 0099            ?_USARTFlushBuffer 0070  
                     _TRISC0 0470                       _TRISC1 0471                       _TRISC2 0472  
                     _TRISB4 046C                       _TRISC4 0474                       _TRISC5 0475  
                     _URBuff 2070           ??_USARTFlushBuffer 0024               __CFG_PWRTE$OFF 0000  
          USARTWriteLine@str 0023               __CFG_STVREN$ON 0000     __end_of_USARTWriteString 0338  
          __end_of_USARTInit 01A1      __end_of__initialization 0029               __pcstackCOMMON 0070  
               ??_SIM800init 0025                   __pbssBANK0 002B                   __pnvCOMMON 0076  
                 __pmaintext 002D                   __pintentry 0004           __end_of_SIM800init 00FE  
__size_of_USARTDataAvailable 0030             ??_USARTWriteChar 0020             ??_USARTWriteLine 0025  
         USARTWriteInt@F3204 002B    __size_of_USARTHandleRxInt 0052                      _UQFront 0078  
                    __ptext1 0150                      __ptext2 0356                      __ptext3 01A1  
                    __ptext4 01DA                      __ptext5 00A5                      __ptext6 0338  
                    __ptext7 0320                      __ptext8 0360                 __size_of_ISR 0012  
                    clrloop0 034B         end_of_initialization 0029                    _RCSTAbits 019D  
               __pstringtext 0300    __size_of_USARTFlushBuffer 000A            ?_USARTWriteString 0021  
      __end_of_USARTReadData 01DA           ??_USARTWriteString 0023             __CFG_FOSC$INTOSC 0000  
                  _USARTInit 0150                    _TXSTAbits 019E                  _BAUDCONbits 019F  
        start_initialization 0018                   ?_USARTInit 0020                  __end_of_ISR 0016  
           _USARTHandleRxInt 00FE                  _APFCON0bits 011D                  __pbssBIGRAM 2070  
                __pbssCOMMON 007A                    ___latbits 0001                __pcstackBANK0 0020  
        __end_of__stringdata 0320             _USARTFlushBuffer 0356   __end_of_USARTDataAvailable 020A  
                ??_USARTInit 0022                     _LATBbits 010D                     _LATCbits 010E  
                  clear_ram0 034A                     _PIR1bits 0011                  __stringdata 0300  
  __size_of_USARTWriteString 0018      __size_of_USARTWriteChar 0008      __size_of_USARTWriteLine 0012  
   __end_of_USARTHandleRxInt 0150                     __ptext10 00FE                __size_of_main 0078  
     __size_of_USARTReadData 0039                  pic14e$flags 007E                   _SIM800init 00A5  
                   intlevel1 0000     __end_of_USARTFlushBuffer 0360            __CFG_CLKOUTEN$OFF 0000  
        USARTWriteString@str 0021                _USARTReadData 01A1         USARTHandleRxInt@data 0074  
         _USARTDataAvailable 01DA             _USARTWriteString 0320          ?_USARTDataAvailable 0070  
             _USARTWriteChar 0360               _USARTWriteLine 0338  
